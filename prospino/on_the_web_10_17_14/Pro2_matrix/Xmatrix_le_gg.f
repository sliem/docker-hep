cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c                                                                      c
c     THE SCALING FUNCTIONS                                            c
c                                                                      c
c     LE_GG(MASSIN,LUMI)                                                c
c                                                                      c
c     INPUT :                                                          c
c                                                                      c
c       MASSIN(1)  = s                                                 c
c       MASSIN(2)  = t2                                                c
c       MASSIN(3)  = s4                                                c
c       MASSIN(6)  = m1                                                c
c       MASSIN(12) = qr                                                c
c       MASSIN(13) = qf                                                c
c       MASSIN(25) = gamma_s                                           c
c                                                                      c
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      real*8 function LE_GGOS(massin,lumi)

      implicit none 

      real*8     massin(1:30),lumi(1:3),Pi,theta_s3
     &          ,Ar2,st,alphas,Nc,MM_s3s
     &          ,s,s4,t2,m1,u2
     &          ,ANG_fin(0:9,0:9,-2:2,-2:2)

      pi = 4.D0*atan(1.D0)
      Nc = 3.D0

      s    = massin(1)
      t2   = massin(2)
      s4   = massin(3)
      m1   = massin(6)

c               real kinematics built in
      u2  = s4 - s - t2 + m1**2

c               the s3 regularization
      theta_s3 = 0.D0
      if (s.gt.4.D0*m1**2) theta_s3 = 1.D0 

c               gs**2=4*pi*alpha_s is cut, re-appears as nlo later 
      Ar2    = 1.D0
      st     = 1.D0
      alphas = 1.D0/4.D0/pi

c               the angular functions 
      call ANGULAR_ARRAY_LE_GGOS(massin,theta_s3,ANG_fin)

c               the form output
c               replacements: [] -> ()
      MM_s3s =
     +  + ANG_fin(6,8,-2,-2)*Ar2*Nc**(-1)*st**2*Pi**2*alphas**2 * ( 128
     +    *m1**6 )
      MM_s3s = MM_s3s + ANG_fin(6,8,-2,-2)*Ar2*Nc*st**2*Pi**2*alphas**2
     +  * (  - 256*m1**6 )
      MM_s3s = MM_s3s + ANG_fin(6,8,-2,-2)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2 * ( 128*m1**6 )
      MM_s3s = MM_s3s + ANG_fin(6,8,-1,-2)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2 * (  - 256*s**(-1)*m1**6 + 128*m1**4 )
      MM_s3s = MM_s3s + ANG_fin(6,8,-1,-2)*Ar2*Nc*st**2*Pi**2*alphas**2
     +  * ( 256*s**(-1)*m1**6 - 256*m1**4 )
      MM_s3s = MM_s3s + ANG_fin(6,8,-1,-2)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2 * ( 128*m1**4 )
      MM_s3s = MM_s3s + ANG_fin(7,8,-2,-2)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2 * (  - 128*s*m1**4 - 128*m1**4*t2 - 128*m1**4*u2 + 128
     +    *m1**4*s4 + 256*m1**6 )
      MM_s3s = MM_s3s + ANG_fin(7,8,-2,-2)*Ar2*Nc*st**2*Pi**2*alphas**2
     +  * ( 256*s*m1**4 + 256*m1**4*t2 + 256*m1**4*u2 - 256*m1**4*s4 - 
     +    512*m1**6 )
      MM_s3s = MM_s3s + ANG_fin(7,8,-2,-2)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2 * (  - 128*s*m1**4 - 128*m1**4*t2 - 128*m1**4*u2 + 128
     +    *m1**4*s4 + 256*m1**6 )
      MM_s3s = MM_s3s + ANG_fin(7,8,-1,-2)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2 * (  - 256*s**(-1)*m1**6 + 128*m1**4 )
      MM_s3s = MM_s3s + ANG_fin(7,8,-1,-2)*Ar2*Nc*st**2*Pi**2*alphas**2
     +  * ( 128*s**(-1)*m1**4*t2 + 128*s**(-1)*m1**4*u2 - 128*s**(-1)*
     +    m1**4*s4 + 128*s**(-1)*m1**6 - 128*m1**4 )
      MM_s3s = MM_s3s + ANG_fin(7,8,-1,-2)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2 * (  - 128*s**(-1)*m1**4*t2 - 128*s**(-1)*m1**4*u2 + 
     +    128*s**(-1)*m1**4*s4 + 128*s**(-1)*m1**6 )
      MM_s3s = MM_s3s + ANG_fin(7,8,1,-2)*Ar2*Nc*st**2*Pi**2*alphas**2
     +  * ( 256*s**(-2)*m1**2*t2 + 256*s**(-2)*m1**2*u2 - 256*s**(-2)*
     +    m1**2*s4 - 256*s**(-2)*m1**4 + 128*s**(-1)*m1**2 )
      MM_s3s = MM_s3s + ANG_fin(7,8,1,-2)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2 * (  - 256*s**(-2)*m1**2*t2 - 256*s**(-2)*m1**2*u2 + 
     +    256*s**(-2)*m1**2*s4 + 256*s**(-2)*m1**4 - 128*s**(-1)*m1**2
     +     )
      MM_s3s = MM_s3s + ANG_fin(7,8,2,-2)*Ar2*Nc*st**2*Pi**2*alphas**2
     +  * (  - 128*s**(-2)*m1**2 )
      MM_s3s = MM_s3s + ANG_fin(7,8,2,-2)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2 * ( 128*s**(-2)*m1**2 )
      MM_s3s = MM_s3s + ANG_fin(8,0,-2,0)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2 * ( 64*m1**2 )
      MM_s3s = MM_s3s + ANG_fin(8,0,-2,0)*Ar2*Nc*st**2*Pi**2*alphas**2
     +  * (  - 256*s**(-2)*m1**2*t2*u2 + 256*s**(-2)*m1**2*t2*s4 - 128*
     +    s**(-2)*m1**2*t2**2 + 256*s**(-2)*m1**2*u2*s4 - 128*s**(-2)*
     +    m1**2*u2**2 - 128*s**(-2)*m1**2*s4**2 + 256*s**(-2)*m1**4*t2
     +     + 256*s**(-2)*m1**4*u2 - 256*s**(-2)*m1**4*s4 - 128*s**(-2)*
     +    m1**6 - 128*s**(-1)*m1**2*t2 - 128*s**(-1)*m1**2*u2 + 128*
     +    s**(-1)*m1**2*s4 - 128*s**(-1)*m1**4 - 128*m1**2 )
      MM_s3s = MM_s3s + ANG_fin(8,0,-2,0)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2 * ( 256*s**(-2)*m1**2*t2*u2 - 256*s**(-2)*m1**2*t2*s4
     +     + 128*s**(-2)*m1**2*t2**2 - 256*s**(-2)*m1**2*u2*s4 + 128*
     +    s**(-2)*m1**2*u2**2 + 128*s**(-2)*m1**2*s4**2 - 256*s**(-2)*
     +    m1**4*t2 - 256*s**(-2)*m1**4*u2 + 256*s**(-2)*m1**4*s4 + 128*
     +    s**(-2)*m1**6 + 128*s**(-1)*m1**2*t2 + 128*s**(-1)*m1**2*u2
     +     - 128*s**(-1)*m1**2*s4 + 128*s**(-1)*m1**4 + 64*m1**2 )

c               the prefactor for the scaling functions 
      LE_GGOS = MM_s3s * m1**2/4.D0
      
c               the phase space except for 1/s**2 
      LE_GGOS = LE_GGOS / ( 16.D0 * pi**2 )**2 / 2.D0 * s4/(s4+m1**2)

c               in this case multiply luminosity by hand
      LE_GGOS = LE_GGOS * lumi(1)

c               the averaging factors
      LE_GGOS = LE_GGOS /4.D0 /(Nc**2-1.D0)**2

      return
      end


c --------------------------------------------------------------------
      real*8 function LE_GG(massin,lumi)

      implicit none 

      real*8     massin(1:30),lumi(1:3),pi,Nc,alphas
     &          ,Ar2,st,log_qf,MM_gg,log_all
     &          ,s,t2,s4,m1,t2s,u2,u2s,m12,s4j
     &          ,hardfac
     &          ,ANG_fin(0:9,0:9,-2:2,-2:2)

      pi = 4.D0*atan(1.D0)
      Nc = 3.D0

      s    = massin(1)
      t2   = massin(2)
      s4   = massin(3)
      m1   = massin(6)
      m12  = m1**2 

c               the factorization scale 
      log_qf = log( massin(13)**2/m1**2 ) 
      log_all = log_qf - log(s4/m1**2) + log(1.D0+m1**2/s4)

c               real kinematics built in
      t2s = t2 - m1**2 

      u2  = s4 - s - t2 + m1**2 
      u2s = u2 - m1**2 

      s4j = s4 + m1**2

c               gs**2=4*pi*alpha_s is cut, re-appears as nlo later 
      Ar2    = 1.D0
      st     = 1.D0
      alphas = 1.D0/4.D0/pi
      hardfac = 1.D0

c               the angular functions 
      call ANGULAR_ARRAY_LE_GG(massin,ANG_fin)

      if ((s4.eq.0.D0).or.(s4j.eq.0.D0).or.(s.eq.0.D0).or.
     &    (u2.eq.0.D0).or.(u2s.eq.0.D0).or.
     &    (t2.eq.0.D0).or.(t2s.eq.0.D0)) then
ctp         print*, " LE_GG: removed a zero ",s4,s4j,s,u2,u2s,t2,t2s
         LE_GG = 0.D0
         return
      end if 

c               the form output
c               replacements: [] -> ()
      MM_gg =
     +  + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac*log_all * ( 128*
     +    s**(-1)*(s+t2)**(-1)*m1**2*u2*s4**(-1) + 128*s**(-1)*
     +    (s+t2)**(-1)*u2 + 128*s**(-1)*(s+u2)**(-1)*m1**2*t2*s4**(-1)
     +     - 512*s**(-1)*(s+u2)**(-1)*m1**2 - 512*s**(-1)*(s+u2)**(-1)*
     +    m1**4*s4**(-1) + 128*s**(-1)*(s+u2)**(-1)*t2 + 128*s**(-1)*
     +    m1**2*t2**(-1)*u2*s4**(-1) - 512*s**(-1)*m1**2*t2**(-1) + 128
     +    *s**(-1)*m1**2*t2*u2**(-1)*s4**(-1) - 64*s**(-1)*m1**2*t2*
     +    s4**(-1)*u2s**(-1) + 64*s**(-1)*m1**2*t2*u2s**(-2) - 64*
     +    s**(-1)*m1**2*u2*s4**(-1)*t2s**(-1) + 64*s**(-1)*m1**2*u2*
     +    t2s**(-2) + 256*s**(-1)*m1**2*s4**(-1) + 128*s**(-1)*m1**2*
     +    u2s**(-1) + 128*s**(-1)*m1**2*t2s**(-1) + 512*s**(-1)*m1**4*
     +    t2**(-1)*u2**(-1) - 512*s**(-1)*m1**4*t2**(-1)*s4**(-1) + 64*
     +    s**(-1)*m1**4*t2*s4**(-1)*u2s**(-2) + 64*s**(-1)*m1**4*u2*
     +    s4**(-1)*t2s**(-2) + 128*s**(-1)*m1**4*s4**(-1)*u2s**(-1) + 
     +    128*s**(-1)*m1**4*s4**(-1)*t2s**(-1) + 512*s**(-1)*m1**6*
     +    t2**(-1)*u2**(-1)*s4**(-1) )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac*
     + log_all * ( 128*s**(-1)*t2**(-1)*u2 + 128*s**(-1)*t2*u2**(-1) - 
     +    64*s**(-1)*t2*u2s**(-1) - 64*s**(-1)*u2*t2s**(-1) + 256*
     +    s**(-1) + 256*s*(s+u2)**(-2)*m1**2*s4**(-1) + 256*s*
     +    (s+u2)**(-2) - 512*s*(s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2
     +     - 512*s*(s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**4*s4**(-1) + 
     +    256*s*(t2*u2+s*m12)**(-2)*m1**4*t2*u2s**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2*t2s**(-1) + 512*s*
     +    (t2*u2+s*m12)**(-2)*m1**4 + 256*s*(t2*u2+s*m12)**(-2)*m1**6*
     +    t2*s4**(-1)*u2s**(-1) + 256*s*(t2*u2+s*m12)**(-2)*m1**6*u2*
     +    s4**(-1)*t2s**(-1) + 512*s*(t2*u2+s*m12)**(-2)*m1**6*s4**(-1)
     +     - 128*s*(t2*u2+s*m12)**(-1)*m1**2*u2s**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2s**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*u2s**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*t2s**(-1) + 128*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac*
     + log_all * ( 128*s**2*(t2*u2+s*m12)**(-2)*m1**4*t2s**(-1) + 128*
     +    s**2*(t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*u2s**(-1) + 128*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*t2s**(-1) + 256*
     +    (s+u2)**(-2)*m1**2*u2*s4**(-1) + 256*(s+u2)**(-2)*u2 - 512*
     +    (s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2*t2 - 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2 - 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2*s4**(-1) - 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*u2*s4**(-1) + 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4 + 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**6*s4**(-1) - 256*(s+u2)**(-1)*m1**2*
     +    s4**(-1) - 256*(s+u2)**(-1) + 512*(t2*u2+s*m12)**(-2)*m1**4*
     +    t2 + 128*(t2*u2+s*m12)**(-2)*m1**4*t2**2*u2s**(-1) + 512*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2 + 128*(t2*u2+s*m12)**(-2)*m1**4*
     +    u2**2*t2s**(-1) + 512*(t2*u2+s*m12)**(-2)*m1**6*t2*s4**(-1)
     +     + 128*(t2*u2+s*m12)**(-2)*m1**6*t2**2*s4**(-1)*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac*
     + log_all * ( 512*(t2*u2+s*m12)**(-2)*m1**6*u2*s4**(-1) + 128*
     +    (t2*u2+s*m12)**(-2)*m1**6*u2**2*s4**(-1)*t2s**(-1) - 512*
     +    (t2*u2+s*m12)**(-2)*m1**6 - 512*(t2*u2+s*m12)**(-2)*m1**8*
     +    s4**(-1) - 128*(t2*u2+s*m12)**(-1)*m1**2*t2**(-1)*u2 - 128*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2*u2**(-1) - 128*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2*u2s**(-1) - 128*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2*t2s**(-1) - 128*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1)*u2*s4**(-1) + 512*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1) - 128*(t2*u2+s*m12)**(-1)*
     +    m1**4*t2*u2**(-1)*s4**(-1) - 128*(t2*u2+s*m12)**(-1)*m1**4*t2
     +    *s4**(-1)*u2s**(-1) - 128*(t2*u2+s*m12)**(-1)*m1**4*u2*
     +    s4**(-1)*t2s**(-1) - 512*(t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*
     +    u2**(-1) + 512*(t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*s4**(-1) - 
     +    512*(t2*u2+s*m12)**(-1)*m1**8*t2**(-1)*u2**(-1)*s4**(-1) + 64
     +    *m1**2*s4**(-1)*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac*
     + log_all * ( 64*m1**2*s4**(-1)*t2s**(-1) + 64*m1**2*u2s**(-2) + 
     +    64*m1**2*t2s**(-2) + 64*m1**4*s4**(-1)*u2s**(-2) + 64*m1**4*
     +    s4**(-1)*t2s**(-2) + 64*u2s**(-1) + 64*t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac * ( 
     +     - 512*s**(-2)*m1**2*t2*u2*s4**(-2) + 768*s**(-2)*m1**2*t2*
     +    s4**(-1) - 256*s**(-2)*m1**2*t2**2*s4**(-2) + 768*s**(-2)*
     +    m1**2*u2*s4**(-1) - 256*s**(-2)*m1**2*u2**2*s4**(-2) - 256*
     +    s**(-2)*m1**2 + 512*s**(-2)*m1**4*t2*s4**(-2) + 512*s**(-2)*
     +    m1**4*u2*s4**(-2) - 512*s**(-2)*m1**4*s4**(-1) - 256*s**(-2)*
     +    m1**6*s4**(-2) - 512*s**(-2)*t2*u2*s4**(-1) + 256*s**(-2)*t2
     +     - 256*s**(-2)*t2**2*s4**(-1) + 256*s**(-2)*u2 - 256*s**(-2)*
     +    u2**2*s4**(-1) + 128*s**(-1)*(s+t2)**(-1)*m1**2*u2*s4**(-1)
     +     + 128*s**(-1)*(s+t2)**(-1)*u2 + 64*s**(-1)*(s+u2)**(-1)*
     +    m1**2*t2*s4**(-1) - 512*s**(-1)*(s+u2)**(-1)*m1**2 - 512*
     +    s**(-1)*(s+u2)**(-1)*m1**4*s4**(-1) + 64*s**(-1)*(s+u2)**(-1)
     +    *t2 - 512*s**(-1)*m1**2*t2**(-1) + 64*s**(-1)*m1**2*t2*
     +    u2**(-1)*s4**(-1) - 768*s**(-1)*m1**2*t2*s4**(-2) - 768*
     +    s**(-1)*m1**2*u2*s4**(-2) + 1536*s**(-1)*m1**2*s4**(-1) + 128
     +    *s**(-1)*m1**2*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac * ( 
     +    128*s**(-1)*m1**2*t2s**(-1) + 512*s**(-1)*m1**4*t2**(-1)*
     +    u2**(-1) - 512*s**(-1)*m1**4*t2**(-1)*s4**(-1) + 768*s**(-1)*
     +    m1**4*s4**(-2) + 128*s**(-1)*m1**4*s4**(-1)*u2s**(-1) + 128*
     +    s**(-1)*m1**4*s4**(-1)*t2s**(-1) + 512*s**(-1)*m1**6*t2**(-1)
     +    *u2**(-1)*s4**(-1) + 64*s**(-1)*t2*u2**(-1) - 768*s**(-1)*t2*
     +    s4**(-1) - 768*s**(-1)*u2*s4**(-1) + 768*s**(-1) + 64*s*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*m1**2*u2*s4**(-1) - 64*s*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*m1**2 - 64*s*(t2+u2)**(-1)
     +    *(t2*s4j+s*m12)**(-1)*m1**4*s4**(-1) + 64*s*(t2+u2)**(-1)*
     +    (t2*s4j+s*m12)**(-1)*u2 - 64*s*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**2*u2*s4**(-1) - 64*s*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**2 - 64*s*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**4*s4**(-1) - 64*s*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*u2 + 256*s*(s+u2)**(-2)*m1**2*s4**(-1)
     +     + 256*s*(s+u2)**(-2) )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac * ( 64
     +    *s*(s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2*t2*s4**(-1) - 512*s
     +    *(s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2 - 512*s*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1) + 64*s*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*t2 - 64*s*(t2*s4j+s*m12)**(-1)*m1**2*
     +    s4**(-1) - 64*s*(t2*s4j+s*m12)**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-2)*m1**2*t2*u2*s4**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-2)*m1**2*t2 + 256*s*(t2*u2+s*m12)**(-2)*
     +    m1**2*u2 + 256*s*(t2*u2+s*m12)**(-2)*m1**4*t2*s4**(-1) + 256*
     +    s*(t2*u2+s*m12)**(-2)*m1**4*t2*u2s**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2*s4**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2*t2s**(-1) + 512*s*
     +    (t2*u2+s*m12)**(-2)*m1**4 + 256*s*(t2*u2+s*m12)**(-2)*m1**6*
     +    t2*s4**(-1)*u2s**(-1) + 256*s*(t2*u2+s*m12)**(-2)*m1**6*u2*
     +    s4**(-1)*t2s**(-1) + 512*s*(t2*u2+s*m12)**(-2)*m1**6*s4**(-1)
     +     + 256*s*(t2*u2+s*m12)**(-2)*t2*u2 )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac * ( 
     +     - 128*s*(t2*u2+s*m12)**(-1)*m1**2*t2**(-1) - 64*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2**(-1) - 256*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*s4**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2s**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2s**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1)*s4**(-1) - 64*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1)*u2s**(-1) - 64*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*u2**(-1)*s4**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*u2s**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*t2s**(-1) - 64*s*
     +    (t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*s4**(-1)*u2s**(-1) - 256*s
     +    *(t2*u2+s*m12)**(-1) + 256*s**2*(t2*u2+s*m12)**(-2)*m1**2 + 
     +    256*s**2*(t2*u2+s*m12)**(-2)*m1**4*s4**(-1) + 128*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2s**(-1) + 128*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**4*t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac * ( 
     +    128*s**2*(t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*u2s**(-1) + 128*
     +    s**2*(t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*t2s**(-1) - 64*
     +    (t2+u2)**(-1)*m1**2*u2*s4**(-1)*t2s**(-1) + 64*(t2+u2)**(-1)*
     +    m1**2*s4**(-1) - 64*(t2+u2)**(-1)*m1**2*t2s**(-1) - 64*
     +    (t2+u2)**(-1)*m1**4*s4**(-1)*t2s**(-1) - 64*(t2+u2)**(-1)*u2*
     +    t2s**(-1) + 64*(t2+u2)**(-1) + 256*(s+u2)**(-2)*m1**2*u2*
     +    s4**(-1) + 256*(s+u2)**(-2)*u2 + 64*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2*u2*s4**(-1) - 448*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2 - 64*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2**2*s4**(-1) - 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2 - 448*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2*s4**(-1) - 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*u2*s4**(-1) + 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4 + 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**6*s4**(-1) )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac * ( 64
     +    *(s+u2)**(-1)*(t2*u2+s*m12)**(-1)*t2*u2 - 64*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*t2**2 - 256*(s+u2)**(-1)*m1**2*s4**(-1)
     +     - 256*(s+u2)**(-1) - 64*(t2*s4j+s*m12)**(-1)*m1**2*t2*
     +    s4**(-1) - 64*(t2*s4j+s*m12)**(-1)*t2 - 64*
     +    (u2*s4j+s*m12)**(-1)*m1**2*u2*s4**(-1) - 64*
     +    (u2*s4j+s*m12)**(-1)*u2 + 128*(t2*u2+s*m12)**(-2)*m1**2*t2*
     +    u2**2*s4**(-1) + 128*(t2*u2+s*m12)**(-2)*m1**2*t2**2*u2*
     +    s4**(-1) + 128*(t2*u2+s*m12)**(-2)*m1**2*t2**2 + 128*
     +    (t2*u2+s*m12)**(-2)*m1**2*u2**2 + 512*(t2*u2+s*m12)**(-2)*
     +    m1**4*t2 + 128*(t2*u2+s*m12)**(-2)*m1**4*t2**2*s4**(-1) + 128
     +    *(t2*u2+s*m12)**(-2)*m1**4*t2**2*u2s**(-1) + 512*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2 + 128*(t2*u2+s*m12)**(-2)*m1**4*
     +    u2**2*s4**(-1) + 128*(t2*u2+s*m12)**(-2)*m1**4*u2**2*
     +    t2s**(-1) + 512*(t2*u2+s*m12)**(-2)*m1**6*t2*s4**(-1) + 128*
     +    (t2*u2+s*m12)**(-2)*m1**6*t2**2*s4**(-1)*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac * ( 
     +    512*(t2*u2+s*m12)**(-2)*m1**6*u2*s4**(-1) + 128*
     +    (t2*u2+s*m12)**(-2)*m1**6*u2**2*s4**(-1)*t2s**(-1) - 512*
     +    (t2*u2+s*m12)**(-2)*m1**6 - 512*(t2*u2+s*m12)**(-2)*m1**8*
     +    s4**(-1) + 128*(t2*u2+s*m12)**(-2)*t2*u2**2 + 128*
     +    (t2*u2+s*m12)**(-2)*t2**2*u2 - 64*(t2*u2+s*m12)**(-1)*m1**2*
     +    t2*u2**(-1) - 256*(t2*u2+s*m12)**(-1)*m1**2*t2*s4**(-1) - 128
     +    *(t2*u2+s*m12)**(-1)*m1**2*t2*u2s**(-1) - 256*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2*s4**(-1) - 128*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2*t2s**(-1) - 64*
     +    (t2*u2+s*m12)**(-1)*m1**2 + 512*(t2*u2+s*m12)**(-1)*m1**4*
     +    t2**(-1) - 64*(t2*u2+s*m12)**(-1)*m1**4*t2*u2**(-1)*s4**(-1)
     +     - 128*(t2*u2+s*m12)**(-1)*m1**4*t2*s4**(-1)*u2s**(-1) - 128*
     +    (t2*u2+s*m12)**(-1)*m1**4*u2*s4**(-1)*t2s**(-1) - 64*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1) - 64*(t2*u2+s*m12)**(-1)*
     +    m1**4*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**(-1)*st**2*Pi**3*alphas**2*hardfac * ( 
     +     - 512*(t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*u2**(-1) + 512*
     +    (t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*s4**(-1) - 64*
     +    (t2*u2+s*m12)**(-1)*m1**6*s4**(-1)*u2s**(-1) - 512*
     +    (t2*u2+s*m12)**(-1)*m1**8*t2**(-1)*u2**(-1)*s4**(-1) - 256*
     +    (t2*u2+s*m12)**(-1)*t2 - 256*(t2*u2+s*m12)**(-1)*u2 + 128*
     +    m1**2*t2**(-1)*s4**(-1) + 64*m1**2*t2**(-1)*u2s**(-1) + 64*
     +    m1**2*u2**(-1)*s4**(-1) - 512*m1**2*s4**(-2) + 64*m1**2*
     +    s4**(-1)*t2s**(-1) + 64*m1**4*t2**(-1)*s4**(-1)*u2s**(-1) + 
     +    128*t2**(-1) + 64*u2**(-1) - 512*s4**(-1) + 64*t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac*log_all * ( 
     +     - 256*s**(-1)*(s+t2)**(-1)*m1**2*u2*s4**(-1) - 256*s**(-1)*
     +    (s+t2)**(-1)*u2 - 256*s**(-1)*(s+u2)**(-1)*m1**2*t2*s4**(-1)
     +     + 1024*s**(-1)*(s+u2)**(-1)*m1**2 + 1024*s**(-1)*
     +    (s+u2)**(-1)*m1**4*s4**(-1) - 256*s**(-1)*(s+u2)**(-1)*t2 - 
     +    256*s**(-1)*m1**2*t2**(-1)*u2*s4**(-1) + 1024*s**(-1)*m1**2*
     +    t2**(-1) - 256*s**(-1)*m1**2*t2*u2**(-1)*s4**(-1) + 128*
     +    s**(-1)*m1**2*t2*s4**(-1)*u2s**(-1) - 128*s**(-1)*m1**2*t2*
     +    u2s**(-2) + 128*s**(-1)*m1**2*u2*s4**(-1)*t2s**(-1) - 128*
     +    s**(-1)*m1**2*u2*t2s**(-2) - 512*s**(-1)*m1**2*s4**(-1) - 256
     +    *s**(-1)*m1**2*u2s**(-1) - 256*s**(-1)*m1**2*t2s**(-1) - 1024
     +    *s**(-1)*m1**4*t2**(-1)*u2**(-1) + 1024*s**(-1)*m1**4*
     +    t2**(-1)*s4**(-1) - 128*s**(-1)*m1**4*t2*s4**(-1)*u2s**(-2)
     +     - 128*s**(-1)*m1**4*u2*s4**(-1)*t2s**(-2) - 256*s**(-1)*
     +    m1**4*s4**(-1)*u2s**(-1) - 256*s**(-1)*m1**4*s4**(-1)*
     +    t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac*log_all * ( 
     +     - 1024*s**(-1)*m1**6*t2**(-1)*u2**(-1)*s4**(-1) - 256*
     +    s**(-1)*t2**(-1)*u2 - 256*s**(-1)*t2*u2**(-1) + 128*s**(-1)*
     +    t2*u2s**(-1) + 128*s**(-1)*u2*t2s**(-1) - 512*s**(-1) - 512*s
     +    *(s+u2)**(-2)*m1**2*s4**(-1) - 512*s*(s+u2)**(-2) + 1024*s*
     +    (s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2 + 1024*s*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1) - 512*s*
     +    (t2*u2+s*m12)**(-2)*m1**4*t2*u2s**(-1) - 512*s*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2*t2s**(-1) - 1024*s*
     +    (t2*u2+s*m12)**(-2)*m1**4 - 512*s*(t2*u2+s*m12)**(-2)*m1**6*
     +    t2*s4**(-1)*u2s**(-1) - 512*s*(t2*u2+s*m12)**(-2)*m1**6*u2*
     +    s4**(-1)*t2s**(-1) - 1024*s*(t2*u2+s*m12)**(-2)*m1**6*
     +    s4**(-1) + 256*s*(t2*u2+s*m12)**(-1)*m1**2*u2s**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2s**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*u2s**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac*log_all * ( 
     +     - 256*s**2*(t2*u2+s*m12)**(-2)*m1**4*u2s**(-1) - 256*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**4*t2s**(-1) - 256*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*u2s**(-1) - 256*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*t2s**(-1) - 512*
     +    (s+u2)**(-2)*m1**2*u2*s4**(-1) - 512*(s+u2)**(-2)*u2 + 1024*
     +    (s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2*t2 + 1024*(s+u2)**(-1)
     +    *(t2*u2+s*m12)**(-1)*m1**2*u2 + 1024*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2*s4**(-1) + 1024*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*u2*s4**(-1) - 1024*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4 - 1024*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**6*s4**(-1) + 512*(s+u2)**(-1)*m1**2*
     +    s4**(-1) + 512*(s+u2)**(-1) - 1024*(t2*u2+s*m12)**(-2)*m1**4*
     +    t2 - 256*(t2*u2+s*m12)**(-2)*m1**4*t2**2*u2s**(-1) - 1024*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2 - 256*(t2*u2+s*m12)**(-2)*m1**4*
     +    u2**2*t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac*log_all * ( 
     +     - 1024*(t2*u2+s*m12)**(-2)*m1**6*t2*s4**(-1) - 256*
     +    (t2*u2+s*m12)**(-2)*m1**6*t2**2*s4**(-1)*u2s**(-1) - 1024*
     +    (t2*u2+s*m12)**(-2)*m1**6*u2*s4**(-1) - 256*
     +    (t2*u2+s*m12)**(-2)*m1**6*u2**2*s4**(-1)*t2s**(-1) + 1024*
     +    (t2*u2+s*m12)**(-2)*m1**6 + 1024*(t2*u2+s*m12)**(-2)*m1**8*
     +    s4**(-1) + 256*(t2*u2+s*m12)**(-1)*m1**2*t2**(-1)*u2 + 256*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2*u2**(-1) + 256*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2*u2s**(-1) + 256*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2*t2s**(-1) + 256*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1)*u2*s4**(-1) - 1024*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1) + 256*(t2*u2+s*m12)**(-1)*
     +    m1**4*t2*u2**(-1)*s4**(-1) + 256*(t2*u2+s*m12)**(-1)*m1**4*t2
     +    *s4**(-1)*u2s**(-1) + 256*(t2*u2+s*m12)**(-1)*m1**4*u2*
     +    s4**(-1)*t2s**(-1) + 1024*(t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*
     +    u2**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac*log_all * ( 
     +     - 1024*(t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*s4**(-1) + 1024*
     +    (t2*u2+s*m12)**(-1)*m1**8*t2**(-1)*u2**(-1)*s4**(-1) - 128*
     +    m1**2*s4**(-1)*u2s**(-1) - 128*m1**2*s4**(-1)*t2s**(-1) - 128
     +    *m1**2*u2s**(-2) - 128*m1**2*t2s**(-2) - 128*m1**4*s4**(-1)*
     +    u2s**(-2) - 128*m1**4*s4**(-1)*t2s**(-2) - 128*u2s**(-1) - 
     +    128*t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac * ( 512*
     +    s**(-2)*m1**2*t2*u2*s4**(-2) - 768*s**(-2)*m1**2*t2*s4**(-1)
     +     + 256*s**(-2)*m1**2*t2**2*s4**(-2) - 768*s**(-2)*m1**2*u2*
     +    s4**(-1) + 256*s**(-2)*m1**2*u2**2*s4**(-2) + 256*s**(-2)*
     +    m1**2 - 512*s**(-2)*m1**4*t2*s4**(-2) - 512*s**(-2)*m1**4*u2*
     +    s4**(-2) + 512*s**(-2)*m1**4*s4**(-1) + 256*s**(-2)*m1**6*
     +    s4**(-2) + 512*s**(-2)*t2*u2*s4**(-1) - 256*s**(-2)*t2 + 256*
     +    s**(-2)*t2**2*s4**(-1) - 256*s**(-2)*u2 + 256*s**(-2)*u2**2*
     +    s4**(-1) + 32*s**(-1)*(t2+u2)**(-1)*m1**2*u2*s4**(-1) + 32*
     +    s**(-1)*(t2+u2)**(-1)*m1**2*u2**2*s4**(-1)*t2s**(-1) - 32*
     +    s**(-1)*(t2+u2)**(-1)*m1**2 - 32*s**(-1)*(t2+u2)**(-1)*m1**4*
     +    s4**(-1) - 32*s**(-1)*(t2+u2)**(-1)*m1**4*t2s**(-1) - 32*
     +    s**(-1)*(t2+u2)**(-1)*m1**6*s4**(-1)*t2s**(-1) + 32*s**(-1)*
     +    (t2+u2)**(-1)*u2 + 32*s**(-1)*(t2+u2)**(-1)*u2**2*t2s**(-1)
     +     - 256*s**(-1)*(s+t2)**(-1)*m1**2*u2*s4**(-1) - 256*s**(-1)*
     +    (s+t2)**(-1)*u2 )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac * (  - 192*
     +    s**(-1)*(s+u2)**(-1)*m1**2*t2*s4**(-1) + 1024*s**(-1)*
     +    (s+u2)**(-1)*m1**2 + 1024*s**(-1)*(s+u2)**(-1)*m1**4*s4**(-1)
     +     - 192*s**(-1)*(s+u2)**(-1)*t2 + 64*s**(-1)*
     +    (t2*s4j+s*m12)**(-1)*m1**2*t2**2*s4**(-1) + 64*s**(-1)*
     +    (t2*s4j+s*m12)**(-1)*t2**2 + 64*s**(-1)*(u2*s4j+s*m12)**(-1)*
     +    m1**2*u2**2*s4**(-1) + 64*s**(-1)*(u2*s4j+s*m12)**(-1)*u2**2
     +     + 1024*s**(-1)*m1**2*t2**(-1) - 64*s**(-1)*m1**2*t2*u2**(-1)
     +    *s4**(-1) + 768*s**(-1)*m1**2*t2*s4**(-2) + 768*s**(-1)*m1**2
     +    *u2*s4**(-2) - 32*s**(-1)*m1**2*u2*s4**(-1)*t2s**(-1) - 1856*
     +    s**(-1)*m1**2*s4**(-1) - 256*s**(-1)*m1**2*u2s**(-1) - 224*
     +    s**(-1)*m1**2*t2s**(-1) - 1024*s**(-1)*m1**4*t2**(-1)*
     +    u2**(-1) + 1024*s**(-1)*m1**4*t2**(-1)*s4**(-1) - 768*s**(-1)
     +    *m1**4*s4**(-2) - 256*s**(-1)*m1**4*s4**(-1)*u2s**(-1) - 224*
     +    s**(-1)*m1**4*s4**(-1)*t2s**(-1) - 1024*s**(-1)*m1**6*
     +    t2**(-1)*u2**(-1)*s4**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac * (  - 64*
     +    s**(-1)*t2*u2**(-1) + 768*s**(-1)*t2*s4**(-1) + 768*s**(-1)*
     +    u2*s4**(-1) - 32*s**(-1)*u2*t2s**(-1) - 1088*s**(-1) - 32*s*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**2*s4**(-1) - 32*s*
     +    (t2+u2)**(-1)*(s+t2)**(-1) - 32*s*(t2+u2)**(-1)*(s+u2)**(-1)*
     +    m1**2*s4**(-1) - 32*s*(t2+u2)**(-1)*(s+u2)**(-1) - 128*s*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*m1**2*u2*s4**(-1) + 128*s*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*m1**2 + 128*s*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*m1**4*s4**(-1) - 128*s*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*u2 + 128*s*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**2*u2*s4**(-1) + 128*s*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**2 + 128*s*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**4*s4**(-1) + 128*s*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*u2 - 512*s*(s+u2)**(-2)*m1**2*s4**(-1)
     +     - 512*s*(s+u2)**(-2) - 64*s*(s+u2)**(-1)*(t2*u2+s*m12)**(-1)
     +    *m1**2*t2*s4**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac * ( 1024*s*
     +    (s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2 + 1024*s*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1) - 64*s*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*t2 + 128*s*(t2*s4j+s*m12)**(-1)*m1**2*
     +    s4**(-1) + 128*s*(t2*s4j+s*m12)**(-1) - 512*s*
     +    (t2*u2+s*m12)**(-2)*m1**2*t2*u2*s4**(-1) - 512*s*
     +    (t2*u2+s*m12)**(-2)*m1**2*t2 - 512*s*(t2*u2+s*m12)**(-2)*
     +    m1**2*u2 - 512*s*(t2*u2+s*m12)**(-2)*m1**4*t2*s4**(-1) - 512*
     +    s*(t2*u2+s*m12)**(-2)*m1**4*t2*u2s**(-1) - 512*s*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2*s4**(-1) - 512*s*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2*t2s**(-1) - 1024*s*
     +    (t2*u2+s*m12)**(-2)*m1**4 - 512*s*(t2*u2+s*m12)**(-2)*m1**6*
     +    t2*s4**(-1)*u2s**(-1) - 512*s*(t2*u2+s*m12)**(-2)*m1**6*u2*
     +    s4**(-1)*t2s**(-1) - 1024*s*(t2*u2+s*m12)**(-2)*m1**6*
     +    s4**(-1) - 512*s*(t2*u2+s*m12)**(-2)*t2*u2 + 192*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac * ( 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2**(-1) + 512*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*s4**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2s**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2s**(-1) + 192*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1)*s4**(-1) + 64*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1)*u2s**(-1) + 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*u2**(-1)*s4**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*u2s**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*t2s**(-1) + 64*s*
     +    (t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*s4**(-1)*u2s**(-1) + 512*s
     +    *(t2*u2+s*m12)**(-1) - 512*s**2*(t2*u2+s*m12)**(-2)*m1**2 - 
     +    512*s**2*(t2*u2+s*m12)**(-2)*m1**4*s4**(-1) - 256*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2s**(-1) - 256*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**4*t2s**(-1) - 256*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac * (  - 256*
     +    s**2*(t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*t2s**(-1) + 32*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**2*u2*s4**(-1) + 32*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*u2 - 32*(t2+u2)**(-1)*(s+u2)**(-1)
     +    *m1**2*u2*s4**(-1) - 32*(t2+u2)**(-1)*(s+u2)**(-1)*u2 - 64*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*m1**2*u2 + 64*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*m1**2*u2**2*s4**(-1) - 64*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*m1**4*u2*s4**(-1) + 64*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*u2**2 + 64*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**2*u2 + 64*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**2*u2**2*s4**(-1) + 64*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**4*u2*s4**(-1) + 64*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*u2**2 + 128*(t2+u2)**(-1)*m1**2*u2*
     +    s4**(-1)*t2s**(-1) - 64*(t2+u2)**(-1)*m1**2*s4**(-1) + 128*
     +    (t2+u2)**(-1)*m1**2*t2s**(-1) + 128*(t2+u2)**(-1)*m1**4*
     +    s4**(-1)*t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac * ( 128*
     +    (t2+u2)**(-1)*u2*t2s**(-1) - 64*(t2+u2)**(-1) - 32*
     +    (s+t2)**(-1)*m1**2*s4**(-1) - 32*(s+t2)**(-1) - 512*
     +    (s+u2)**(-2)*m1**2*u2*s4**(-1) - 512*(s+u2)**(-2)*u2 - 64*
     +    (s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2*t2*u2*s4**(-1) + 960*
     +    (s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2*t2 + 64*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2**2*s4**(-1) + 1024*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2 + 960*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2*s4**(-1) + 1024*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*u2*s4**(-1) - 1024*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4 - 1024*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**6*s4**(-1) - 64*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*t2*u2 + 64*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*t2**2 + 512*(s+u2)**(-1)*m1**2*s4**(-1)
     +     + 512*(s+u2)**(-1) + 192*(t2*s4j+s*m12)**(-1)*m1**2*t2*
     +    s4**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac * (  - 64*
     +    (t2*s4j+s*m12)**(-1)*m1**2*u2*s4**(-1) + 64*
     +    (t2*s4j+s*m12)**(-1)*m1**2 + 64*(t2*s4j+s*m12)**(-1)*m1**4*
     +    s4**(-1) + 192*(t2*s4j+s*m12)**(-1)*t2 - 64*
     +    (t2*s4j+s*m12)**(-1)*u2 + 128*(u2*s4j+s*m12)**(-1)*m1**2*u2*
     +    s4**(-1) + 128*(u2*s4j+s*m12)**(-1)*u2 - 256*
     +    (t2*u2+s*m12)**(-2)*m1**2*t2*u2**2*s4**(-1) - 256*
     +    (t2*u2+s*m12)**(-2)*m1**2*t2**2*u2*s4**(-1) - 256*
     +    (t2*u2+s*m12)**(-2)*m1**2*t2**2 - 256*(t2*u2+s*m12)**(-2)*
     +    m1**2*u2**2 - 1024*(t2*u2+s*m12)**(-2)*m1**4*t2 - 256*
     +    (t2*u2+s*m12)**(-2)*m1**4*t2**2*s4**(-1) - 256*
     +    (t2*u2+s*m12)**(-2)*m1**4*t2**2*u2s**(-1) - 1024*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2 - 256*(t2*u2+s*m12)**(-2)*m1**4*
     +    u2**2*s4**(-1) - 256*(t2*u2+s*m12)**(-2)*m1**4*u2**2*
     +    t2s**(-1) - 1024*(t2*u2+s*m12)**(-2)*m1**6*t2*s4**(-1) - 256*
     +    (t2*u2+s*m12)**(-2)*m1**6*t2**2*s4**(-1)*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac * (  - 1024*
     +    (t2*u2+s*m12)**(-2)*m1**6*u2*s4**(-1) - 256*
     +    (t2*u2+s*m12)**(-2)*m1**6*u2**2*s4**(-1)*t2s**(-1) + 1024*
     +    (t2*u2+s*m12)**(-2)*m1**6 + 1024*(t2*u2+s*m12)**(-2)*m1**8*
     +    s4**(-1) - 256*(t2*u2+s*m12)**(-2)*t2*u2**2 - 256*
     +    (t2*u2+s*m12)**(-2)*t2**2*u2 + 64*(t2*u2+s*m12)**(-1)*m1**2*
     +    t2*u2**(-1) + 448*(t2*u2+s*m12)**(-1)*m1**2*t2*s4**(-1) + 256
     +    *(t2*u2+s*m12)**(-1)*m1**2*t2*u2s**(-1) + 448*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2*s4**(-1) + 256*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2*t2s**(-1) + 64*
     +    (t2*u2+s*m12)**(-1)*m1**2 - 1024*(t2*u2+s*m12)**(-1)*m1**4*
     +    t2**(-1) + 64*(t2*u2+s*m12)**(-1)*m1**4*t2*u2**(-1)*s4**(-1)
     +     + 256*(t2*u2+s*m12)**(-1)*m1**4*t2*s4**(-1)*u2s**(-1) + 256*
     +    (t2*u2+s*m12)**(-1)*m1**4*u2*s4**(-1)*t2s**(-1) + 64*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1) + 64*(t2*u2+s*m12)**(-1)*
     +    m1**4*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc*st**2*Pi**3*alphas**2*hardfac * ( 1024*
     +    (t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*u2**(-1) - 1024*
     +    (t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*s4**(-1) + 64*
     +    (t2*u2+s*m12)**(-1)*m1**6*s4**(-1)*u2s**(-1) + 1024*
     +    (t2*u2+s*m12)**(-1)*m1**8*t2**(-1)*u2**(-1)*s4**(-1) + 448*
     +    (t2*u2+s*m12)**(-1)*t2 + 448*(t2*u2+s*m12)**(-1)*u2 - 192*
     +    m1**2*t2**(-1)*s4**(-1) - 64*m1**2*t2**(-1)*u2s**(-1) - 128*
     +    m1**2*u2**(-1)*s4**(-1) + 512*m1**2*s4**(-2) - 128*m1**2*
     +    s4**(-1)*t2s**(-1) - 64*m1**4*t2**(-1)*s4**(-1)*u2s**(-1) - 
     +    192*t2**(-1) - 128*u2**(-1) + 512*s4**(-1) - 128*t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac*log_all
     +  * ( 128*s**(-1)*(s+t2)**(-1)*m1**2*u2*s4**(-1) + 128*s**(-1)*
     +    (s+t2)**(-1)*u2 + 128*s**(-1)*(s+u2)**(-1)*m1**2*t2*s4**(-1)
     +     - 512*s**(-1)*(s+u2)**(-1)*m1**2 - 512*s**(-1)*(s+u2)**(-1)*
     +    m1**4*s4**(-1) + 128*s**(-1)*(s+u2)**(-1)*t2 + 128*s**(-1)*
     +    m1**2*t2**(-1)*u2*s4**(-1) - 512*s**(-1)*m1**2*t2**(-1) + 128
     +    *s**(-1)*m1**2*t2*u2**(-1)*s4**(-1) - 64*s**(-1)*m1**2*t2*
     +    s4**(-1)*u2s**(-1) + 64*s**(-1)*m1**2*t2*u2s**(-2) - 64*
     +    s**(-1)*m1**2*u2*s4**(-1)*t2s**(-1) + 64*s**(-1)*m1**2*u2*
     +    t2s**(-2) + 256*s**(-1)*m1**2*s4**(-1) + 128*s**(-1)*m1**2*
     +    u2s**(-1) + 128*s**(-1)*m1**2*t2s**(-1) + 512*s**(-1)*m1**4*
     +    t2**(-1)*u2**(-1) - 512*s**(-1)*m1**4*t2**(-1)*s4**(-1) + 64*
     +    s**(-1)*m1**4*t2*s4**(-1)*u2s**(-2) + 64*s**(-1)*m1**4*u2*
     +    s4**(-1)*t2s**(-2) + 128*s**(-1)*m1**4*s4**(-1)*u2s**(-1) + 
     +    128*s**(-1)*m1**4*s4**(-1)*t2s**(-1) + 512*s**(-1)*m1**6*
     +    t2**(-1)*u2**(-1)*s4**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac*log_all
     +  * ( 128*s**(-1)*t2**(-1)*u2 + 128*s**(-1)*t2*u2**(-1) - 64*
     +    s**(-1)*t2*u2s**(-1) - 64*s**(-1)*u2*t2s**(-1) + 256*s**(-1)
     +     + 256*s*(s+u2)**(-2)*m1**2*s4**(-1) + 256*s*(s+u2)**(-2) - 
     +    512*s*(s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2 - 512*s*
     +    (s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**4*s4**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-2)*m1**4*t2*u2s**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2*t2s**(-1) + 512*s*
     +    (t2*u2+s*m12)**(-2)*m1**4 + 256*s*(t2*u2+s*m12)**(-2)*m1**6*
     +    t2*s4**(-1)*u2s**(-1) + 256*s*(t2*u2+s*m12)**(-2)*m1**6*u2*
     +    s4**(-1)*t2s**(-1) + 512*s*(t2*u2+s*m12)**(-2)*m1**6*s4**(-1)
     +     - 128*s*(t2*u2+s*m12)**(-1)*m1**2*u2s**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2s**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*u2s**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*t2s**(-1) + 128*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac*log_all
     +  * ( 128*s**2*(t2*u2+s*m12)**(-2)*m1**4*t2s**(-1) + 128*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*u2s**(-1) + 128*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*t2s**(-1) + 256*
     +    (s+u2)**(-2)*m1**2*u2*s4**(-1) + 256*(s+u2)**(-2)*u2 - 512*
     +    (s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2*t2 - 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2 - 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2*s4**(-1) - 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*u2*s4**(-1) + 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4 + 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**6*s4**(-1) - 256*(s+u2)**(-1)*m1**2*
     +    s4**(-1) - 256*(s+u2)**(-1) + 512*(t2*u2+s*m12)**(-2)*m1**4*
     +    t2 + 128*(t2*u2+s*m12)**(-2)*m1**4*t2**2*u2s**(-1) + 512*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2 + 128*(t2*u2+s*m12)**(-2)*m1**4*
     +    u2**2*t2s**(-1) + 512*(t2*u2+s*m12)**(-2)*m1**6*t2*s4**(-1)
     +     + 128*(t2*u2+s*m12)**(-2)*m1**6*t2**2*s4**(-1)*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac*log_all
     +  * ( 512*(t2*u2+s*m12)**(-2)*m1**6*u2*s4**(-1) + 128*
     +    (t2*u2+s*m12)**(-2)*m1**6*u2**2*s4**(-1)*t2s**(-1) - 512*
     +    (t2*u2+s*m12)**(-2)*m1**6 - 512*(t2*u2+s*m12)**(-2)*m1**8*
     +    s4**(-1) - 128*(t2*u2+s*m12)**(-1)*m1**2*t2**(-1)*u2 - 128*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2*u2**(-1) - 128*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2*u2s**(-1) - 128*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2*t2s**(-1) - 128*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1)*u2*s4**(-1) + 512*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1) - 128*(t2*u2+s*m12)**(-1)*
     +    m1**4*t2*u2**(-1)*s4**(-1) - 128*(t2*u2+s*m12)**(-1)*m1**4*t2
     +    *s4**(-1)*u2s**(-1) - 128*(t2*u2+s*m12)**(-1)*m1**4*u2*
     +    s4**(-1)*t2s**(-1) - 512*(t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*
     +    u2**(-1) + 512*(t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*s4**(-1) - 
     +    512*(t2*u2+s*m12)**(-1)*m1**8*t2**(-1)*u2**(-1)*s4**(-1) + 64
     +    *m1**2*s4**(-1)*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac*log_all
     +  * ( 64*m1**2*s4**(-1)*t2s**(-1) + 64*m1**2*u2s**(-2) + 64*m1**2
     +    *t2s**(-2) + 64*m1**4*s4**(-1)*u2s**(-2) + 64*m1**4*s4**(-1)*
     +    t2s**(-2) + 64*u2s**(-1) + 64*t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac * (  - 32
     +    *s**(-1)*(t2+u2)**(-1)*m1**2*u2*s4**(-1) - 32*s**(-1)*
     +    (t2+u2)**(-1)*m1**2*u2**2*s4**(-1)*t2s**(-1) + 32*s**(-1)*
     +    (t2+u2)**(-1)*m1**2 + 32*s**(-1)*(t2+u2)**(-1)*m1**4*s4**(-1)
     +     + 32*s**(-1)*(t2+u2)**(-1)*m1**4*t2s**(-1) + 32*s**(-1)*
     +    (t2+u2)**(-1)*m1**6*s4**(-1)*t2s**(-1) - 32*s**(-1)*
     +    (t2+u2)**(-1)*u2 - 32*s**(-1)*(t2+u2)**(-1)*u2**2*t2s**(-1)
     +     + 128*s**(-1)*(s+t2)**(-1)*m1**2*u2*s4**(-1) + 128*s**(-1)*
     +    (s+t2)**(-1)*u2 + 128*s**(-1)*(s+u2)**(-1)*m1**2*t2*s4**(-1)
     +     - 512*s**(-1)*(s+u2)**(-1)*m1**2 - 512*s**(-1)*(s+u2)**(-1)*
     +    m1**4*s4**(-1) + 128*s**(-1)*(s+u2)**(-1)*t2 - 64*s**(-1)*
     +    (t2*s4j+s*m12)**(-1)*m1**2*t2**2*s4**(-1) - 64*s**(-1)*
     +    (t2*s4j+s*m12)**(-1)*t2**2 - 64*s**(-1)*(u2*s4j+s*m12)**(-1)*
     +    m1**2*u2**2*s4**(-1) - 64*s**(-1)*(u2*s4j+s*m12)**(-1)*u2**2
     +     - 512*s**(-1)*m1**2*t2**(-1) + 32*s**(-1)*m1**2*u2*s4**(-1)*
     +    t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac * ( 320*
     +    s**(-1)*m1**2*s4**(-1) + 128*s**(-1)*m1**2*u2s**(-1) + 96*
     +    s**(-1)*m1**2*t2s**(-1) + 512*s**(-1)*m1**4*t2**(-1)*u2**(-1)
     +     - 512*s**(-1)*m1**4*t2**(-1)*s4**(-1) + 128*s**(-1)*m1**4*
     +    s4**(-1)*u2s**(-1) + 96*s**(-1)*m1**4*s4**(-1)*t2s**(-1) + 
     +    512*s**(-1)*m1**6*t2**(-1)*u2**(-1)*s4**(-1) + 32*s**(-1)*u2*
     +    t2s**(-1) + 320*s**(-1) + 32*s*(t2+u2)**(-1)*(s+t2)**(-1)*
     +    m1**2*s4**(-1) + 32*s*(t2+u2)**(-1)*(s+t2)**(-1) + 32*s*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**2*s4**(-1) + 32*s*
     +    (t2+u2)**(-1)*(s+u2)**(-1) + 64*s*(t2+u2)**(-1)*
     +    (t2*s4j+s*m12)**(-1)*m1**2*u2*s4**(-1) - 64*s*(t2+u2)**(-1)*
     +    (t2*s4j+s*m12)**(-1)*m1**2 - 64*s*(t2+u2)**(-1)*
     +    (t2*s4j+s*m12)**(-1)*m1**4*s4**(-1) + 64*s*(t2+u2)**(-1)*
     +    (t2*s4j+s*m12)**(-1)*u2 - 64*s*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**2*u2*s4**(-1) - 64*s*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**2 )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac * (  - 64
     +    *s*(t2+u2)**(-1)*(u2*s4j+s*m12)**(-1)*m1**4*s4**(-1) - 64*s*
     +    (t2+u2)**(-1)*(u2*s4j+s*m12)**(-1)*u2 + 256*s*(s+u2)**(-2)*
     +    m1**2*s4**(-1) + 256*s*(s+u2)**(-2) - 512*s*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**2 - 512*s*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1) - 64*s*
     +    (t2*s4j+s*m12)**(-1)*m1**2*s4**(-1) - 64*s*
     +    (t2*s4j+s*m12)**(-1) + 256*s*(t2*u2+s*m12)**(-2)*m1**2*t2*u2*
     +    s4**(-1) + 256*s*(t2*u2+s*m12)**(-2)*m1**2*t2 + 256*s*
     +    (t2*u2+s*m12)**(-2)*m1**2*u2 + 256*s*(t2*u2+s*m12)**(-2)*
     +    m1**4*t2*s4**(-1) + 256*s*(t2*u2+s*m12)**(-2)*m1**4*t2*
     +    u2s**(-1) + 256*s*(t2*u2+s*m12)**(-2)*m1**4*u2*s4**(-1) + 256
     +    *s*(t2*u2+s*m12)**(-2)*m1**4*u2*t2s**(-1) + 512*s*
     +    (t2*u2+s*m12)**(-2)*m1**4 + 256*s*(t2*u2+s*m12)**(-2)*m1**6*
     +    t2*s4**(-1)*u2s**(-1) + 256*s*(t2*u2+s*m12)**(-2)*m1**6*u2*
     +    s4**(-1)*t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac * ( 512*s
     +    *(t2*u2+s*m12)**(-2)*m1**6*s4**(-1) + 256*s*
     +    (t2*u2+s*m12)**(-2)*t2*u2 - 64*s*(t2*u2+s*m12)**(-1)*m1**2*
     +    t2**(-1) - 64*s*(t2*u2+s*m12)**(-1)*m1**2*u2**(-1) - 256*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*s4**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2s**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**2*t2s**(-1) - 64*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1)*s4**(-1) - 64*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*u2**(-1)*s4**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*u2s**(-1) - 128*s*
     +    (t2*u2+s*m12)**(-1)*m1**4*s4**(-1)*t2s**(-1) - 256*s*
     +    (t2*u2+s*m12)**(-1) + 256*s**2*(t2*u2+s*m12)**(-2)*m1**2 + 
     +    256*s**2*(t2*u2+s*m12)**(-2)*m1**4*s4**(-1) + 128*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2s**(-1) + 128*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**4*t2s**(-1) + 128*s**2*
     +    (t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*u2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac * ( 128*
     +    s**2*(t2*u2+s*m12)**(-2)*m1**6*s4**(-1)*t2s**(-1) - 32*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**2*u2*s4**(-1) - 32*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*u2 + 32*(t2+u2)**(-1)*(s+u2)**(-1)
     +    *m1**2*u2*s4**(-1) + 32*(t2+u2)**(-1)*(s+u2)**(-1)*u2 + 64*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*m1**2*u2 - 64*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*m1**2*u2**2*s4**(-1) + 64*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*m1**4*u2*s4**(-1) - 64*
     +    (t2+u2)**(-1)*(t2*s4j+s*m12)**(-1)*u2**2 - 64*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**2*u2 - 64*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**2*u2**2*s4**(-1) - 64*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*m1**4*u2*s4**(-1) - 64*(t2+u2)**(-1)*
     +    (u2*s4j+s*m12)**(-1)*u2**2 - 64*(t2+u2)**(-1)*m1**2*u2*
     +    s4**(-1)*t2s**(-1) - 64*(t2+u2)**(-1)*m1**2*t2s**(-1) - 64*
     +    (t2+u2)**(-1)*m1**4*s4**(-1)*t2s**(-1) - 64*(t2+u2)**(-1)*u2*
     +    t2s**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac * ( 32*
     +    (s+t2)**(-1)*m1**2*s4**(-1) + 32*(s+t2)**(-1) + 256*
     +    (s+u2)**(-2)*m1**2*u2*s4**(-1) + 256*(s+u2)**(-2)*u2 - 512*
     +    (s+u2)**(-1)*(t2*u2+s*m12)**(-1)*m1**2*t2 - 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2 - 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2*s4**(-1) - 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4*u2*s4**(-1) + 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**4 + 512*(s+u2)**(-1)*
     +    (t2*u2+s*m12)**(-1)*m1**6*s4**(-1) - 256*(s+u2)**(-1)*m1**2*
     +    s4**(-1) - 256*(s+u2)**(-1) - 128*(t2*s4j+s*m12)**(-1)*m1**2*
     +    t2*s4**(-1) + 64*(t2*s4j+s*m12)**(-1)*m1**2*u2*s4**(-1) - 64*
     +    (t2*s4j+s*m12)**(-1)*m1**2 - 64*(t2*s4j+s*m12)**(-1)*m1**4*
     +    s4**(-1) - 128*(t2*s4j+s*m12)**(-1)*t2 + 64*
     +    (t2*s4j+s*m12)**(-1)*u2 - 64*(u2*s4j+s*m12)**(-1)*m1**2*u2*
     +    s4**(-1) - 64*(u2*s4j+s*m12)**(-1)*u2 + 128*
     +    (t2*u2+s*m12)**(-2)*m1**2*t2*u2**2*s4**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac * ( 128*
     +    (t2*u2+s*m12)**(-2)*m1**2*t2**2*u2*s4**(-1) + 128*
     +    (t2*u2+s*m12)**(-2)*m1**2*t2**2 + 128*(t2*u2+s*m12)**(-2)*
     +    m1**2*u2**2 + 512*(t2*u2+s*m12)**(-2)*m1**4*t2 + 128*
     +    (t2*u2+s*m12)**(-2)*m1**4*t2**2*s4**(-1) + 128*
     +    (t2*u2+s*m12)**(-2)*m1**4*t2**2*u2s**(-1) + 512*
     +    (t2*u2+s*m12)**(-2)*m1**4*u2 + 128*(t2*u2+s*m12)**(-2)*m1**4*
     +    u2**2*s4**(-1) + 128*(t2*u2+s*m12)**(-2)*m1**4*u2**2*
     +    t2s**(-1) + 512*(t2*u2+s*m12)**(-2)*m1**6*t2*s4**(-1) + 128*
     +    (t2*u2+s*m12)**(-2)*m1**6*t2**2*s4**(-1)*u2s**(-1) + 512*
     +    (t2*u2+s*m12)**(-2)*m1**6*u2*s4**(-1) + 128*
     +    (t2*u2+s*m12)**(-2)*m1**6*u2**2*s4**(-1)*t2s**(-1) - 512*
     +    (t2*u2+s*m12)**(-2)*m1**6 - 512*(t2*u2+s*m12)**(-2)*m1**8*
     +    s4**(-1) + 128*(t2*u2+s*m12)**(-2)*t2*u2**2 + 128*
     +    (t2*u2+s*m12)**(-2)*t2**2*u2 - 192*(t2*u2+s*m12)**(-1)*m1**2*
     +    t2*s4**(-1) )
      MM_gg = MM_gg + Ar2*Nc**3*st**2*Pi**3*alphas**2*hardfac * (  - 
     +    128*(t2*u2+s*m12)**(-1)*m1**2*t2*u2s**(-1) - 192*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2*s4**(-1) - 128*
     +    (t2*u2+s*m12)**(-1)*m1**2*u2*t2s**(-1) + 512*
     +    (t2*u2+s*m12)**(-1)*m1**4*t2**(-1) - 128*(t2*u2+s*m12)**(-1)*
     +    m1**4*t2*s4**(-1)*u2s**(-1) - 128*(t2*u2+s*m12)**(-1)*m1**4*
     +    u2*s4**(-1)*t2s**(-1) - 512*(t2*u2+s*m12)**(-1)*m1**6*
     +    t2**(-1)*u2**(-1) + 512*(t2*u2+s*m12)**(-1)*m1**6*t2**(-1)*
     +    s4**(-1) - 512*(t2*u2+s*m12)**(-1)*m1**8*t2**(-1)*u2**(-1)*
     +    s4**(-1) - 192*(t2*u2+s*m12)**(-1)*t2 - 192*
     +    (t2*u2+s*m12)**(-1)*u2 + 64*m1**2*t2**(-1)*s4**(-1) + 64*
     +    m1**2*u2**(-1)*s4**(-1) + 64*m1**2*s4**(-1)*t2s**(-1) + 64*
     +    t2**(-1) + 64*u2**(-1) + 64*t2s**(-1) )
      MM_gg = MM_gg + ANG_fin(1,0,-1,0)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 32*s*(t2+u2)**(-1)*(s+t2)**(-1)*u2 - 32
     +    *s*(t2+u2)**(-1) + 32*s*(s+t2)**(-1) + 32*s**2*(t2+u2)**(-1)*
     +    (s+t2)**(-1) )
      MM_gg = MM_gg + ANG_fin(1,0,-1,0)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 32 - 32*s**(-1)*t2 - 64*s**(-1)*u2 + 32*s*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*u2 + 32*s*(t2+u2)**(-1) - 32*s*
     +    (s+t2)**(-1) - 32*s**2*(t2+u2)**(-1)*(s+t2)**(-1) )
      MM_gg = MM_gg + ANG_fin(1,0,-1,0)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * ( 32 + 32*s**(-1)*t2 + 64*s**(-1)*u2 )
      MM_gg = MM_gg + ANG_fin(1,2,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 640*s*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2
     +     + 320*s*(s+t2)**(-1)*(s+u2)**(-1)*m1**4 + 320*s*(s+t2)**(-1)
     +    *(s+u2)**(-1)*u2**2 - 544*s*(s+t2)**(-1)*m1**2 - 224*s*
     +    (s+t2)**(-1)*u2 - 352*s*(s+u2)**(-1)*m1**2 + 128*s*
     +    (s+u2)**(-1)*t2 - 352*s*(s+u2)**(-1)*u2 + 224*s + 544*s**2*
     +    (s+t2)**(-1)*(s+u2)**(-1)*m1**2 + 544*s**2*(s+t2)**(-1)*
     +    (s+u2)**(-1)*u2 - 320*s**2*(s+t2)**(-1) - 256*s**2*
     +    (s+u2)**(-1) + 320*s**3*(s+t2)**(-1)*(s+u2)**(-1) + 192*
     +    (s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2**2 + 192*(s+t2)**(-1)*
     +    (s+u2)**(-1)*m1**4*u2 + 64*(s+t2)**(-1)*(s+u2)**(-1)*m1**6 + 
     +    64*(s+t2)**(-1)*(s+u2)**(-1)*u2**3 - 96*(s+t2)**(-1)*m1**2*u2
     +     - 320*(s+t2)**(-1)*m1**4 - 96*(s+t2)**(-1)*u2**2 + 96*
     +    (s+u2)**(-1)*m1**2*t2 - 256*(s+u2)**(-1)*m1**2*u2 - 128*
     +    (s+u2)**(-1)*m1**4 + 96*(s+u2)**(-1)*t2*u2 - 32*(s+u2)**(-1)*
     +    t2**2 )
      MM_gg = MM_gg + ANG_fin(1,2,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 128*(s+u2)**(-1)*u2**2 + 448*m1**2 - 
     +    192*t2 + 32*u2 )
      MM_gg = MM_gg + ANG_fin(1,2,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 640*s*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2 - 320*s*
     +    (s+t2)**(-1)*(s+u2)**(-1)*m1**4 - 320*s*(s+t2)**(-1)*
     +    (s+u2)**(-1)*u2**2 + 544*s*(s+t2)**(-1)*m1**2 + 224*s*
     +    (s+t2)**(-1)*u2 + 352*s*(s+u2)**(-1)*m1**2 - 128*s*
     +    (s+u2)**(-1)*t2 + 352*s*(s+u2)**(-1)*u2 - 224*s - 544*s**2*
     +    (s+t2)**(-1)*(s+u2)**(-1)*m1**2 - 544*s**2*(s+t2)**(-1)*
     +    (s+u2)**(-1)*u2 + 320*s**2*(s+t2)**(-1) + 256*s**2*
     +    (s+u2)**(-1) - 320*s**3*(s+t2)**(-1)*(s+u2)**(-1) - 192*
     +    (s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2**2 - 192*(s+t2)**(-1)*
     +    (s+u2)**(-1)*m1**4*u2 - 64*(s+t2)**(-1)*(s+u2)**(-1)*m1**6 - 
     +    64*(s+t2)**(-1)*(s+u2)**(-1)*u2**3 + 96*(s+t2)**(-1)*m1**2*u2
     +     + 320*(s+t2)**(-1)*m1**4 + 96*(s+t2)**(-1)*u2**2 - 96*
     +    (s+u2)**(-1)*m1**2*t2 + 256*(s+u2)**(-1)*m1**2*u2 + 128*
     +    (s+u2)**(-1)*m1**4 - 96*(s+u2)**(-1)*t2*u2 + 32*(s+u2)**(-1)*
     +    t2**2 )
      MM_gg = MM_gg + ANG_fin(1,2,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 128*(s+u2)**(-1)*u2**2 - 448*m1**2 + 192*t2 - 32*u2
     +     )
      MM_gg = MM_gg + ANG_fin(1,5,-1,-2)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 32*s*m1**2 )
      MM_gg = MM_gg + ANG_fin(1,5,-1,-2)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 64*s*m1**2 )
      MM_gg = MM_gg + ANG_fin(1,5,-1,-2)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * ( 32*s*m1**2 )
      MM_gg = MM_gg + ANG_fin(1,5,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 96*s*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2*
     +    u2 - 192*s*(t2+u2)**(-1)*(s+t2)**(-1)*m1**4 - 192*s*
     +    (t2+u2)**(-1)*m1**2 + 32*s*(t2+u2)**(-1)*u2 + 192*s*
     +    (s+t2)**(-1)*m1**2 - 32*s*(s+t2)**(-1)*u2 - 32*s*m1**2*
     +    u2**(-1) + 192*s**2*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2 + 32*
     +    s**2*(t2+u2)**(-1)*(s+t2)**(-1)*u2 + 64*s**2*(t2+u2)**(-1) - 
     +    64*s**2*(s+t2)**(-1) - 64*s**3*(t2+u2)**(-1)*(s+t2)**(-1) + 
     +    64*(t2+u2)**(-1)*(s+t2)**(-1)*m1**4*u2 + 64*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*m1**6 + 64*(t2+u2)**(-1)*m1**4 - 64*
     +    (t2+u2)**(-1)*m1**6*t2**(-1) + 96*(s+t2)**(-1)*m1**2*u2 - 192
     +    *(s+t2)**(-1)*m1**4 - 32*(s+t2)**(-1)*u2**2 + 32*m1**2*t2*
     +    u2**(-1) - 64*m1**4*u2**(-1) + 64*m1**6*t2**(-1)*u2**(-1) )
      MM_gg = MM_gg + ANG_fin(1,5,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 96*s*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2*u2 + 192*s*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**4 + 192*s*(t2+u2)**(-1)*m1**2
     +     - 32*s*(t2+u2)**(-1)*u2 - 192*s*(s+t2)**(-1)*m1**2 + 32*s*
     +    (s+t2)**(-1)*u2 + 64*s*m1**2*u2**(-1) - 192*s**2*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**2 - 32*s**2*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*u2 - 64*s**2*(t2+u2)**(-1) + 64*s**2*
     +    (s+t2)**(-1) + 64*s**3*(t2+u2)**(-1)*(s+t2)**(-1) - 64*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**4*u2 - 64*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*m1**6 - 96*(t2+u2)**(-1)*m1**2*u2 + 64*
     +    (t2+u2)**(-1)*m1**4 + 128*(t2+u2)**(-1)*m1**6*t2**(-1) + 32*
     +    (t2+u2)**(-1)*u2**2 - 96*(s+t2)**(-1)*m1**2*u2 + 192*
     +    (s+t2)**(-1)*m1**4 + 32*(s+t2)**(-1)*u2**2 - 64*m1**2*t2*
     +    u2**(-1) + 128*m1**4*u2**(-1) - 128*m1**6*t2**(-1)*u2**(-1) )
      MM_gg = MM_gg + ANG_fin(1,5,-1,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * (  - 32*s*m1**2*u2**(-1) + 96*(t2+u2)**(-1)*
     +    m1**2*u2 - 128*(t2+u2)**(-1)*m1**4 - 64*(t2+u2)**(-1)*m1**6*
     +    t2**(-1) - 32*(t2+u2)**(-1)*u2**2 + 32*m1**2*t2*u2**(-1) - 64
     +    *m1**4*u2**(-1) + 64*m1**6*t2**(-1)*u2**(-1) )
      MM_gg = MM_gg + ANG_fin(1,7,-1,-2)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 64*m1**2*t2 + 128*m1**4 - 128*m1**6*
     +    t2**(-1) )
      MM_gg = MM_gg + ANG_fin(1,7,-1,-2)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 128*m1**2*t2 - 256*m1**4 + 256*m1**6*t2**(-1) )
      MM_gg = MM_gg + ANG_fin(1,7,-1,-2)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * (  - 64*m1**2*t2 + 128*m1**4 - 128*m1**6*
     +    t2**(-1) )
      MM_gg = MM_gg + ANG_fin(1,7,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 128*s**(-1)*(s+t2)**(-1)*m1**4*u2 - 128*
     +    s**(-1)*(s+t2)**(-1)*m1**6 - 128*s**(-1)*m1**4*t2**(-1)*u2 + 
     +    128*s**(-1)*m1**6*t2**(-1) + 640*s*(s+t2)**(-1)*(s+u2)**(-1)*
     +    m1**2*u2 + 320*s*(s+t2)**(-1)*(s+u2)**(-1)*m1**4 + 320*s*
     +    (s+t2)**(-1)*(s+u2)**(-1)*u2**2 - 544*s*(s+t2)**(-1)*m1**2 - 
     +    224*s*(s+t2)**(-1)*u2 - 352*s*(s+u2)**(-1)*m1**2 + 128*s*
     +    (s+u2)**(-1)*t2 - 352*s*(s+u2)**(-1)*u2 - 32*s*m1**2*u2**(-1)
     +     + 256*s + 544*s**2*(s+t2)**(-1)*(s+u2)**(-1)*m1**2 + 544*
     +    s**2*(s+t2)**(-1)*(s+u2)**(-1)*u2 - 320*s**2*(s+t2)**(-1) - 
     +    256*s**2*(s+u2)**(-1) + 320*s**3*(s+t2)**(-1)*(s+u2)**(-1) + 
     +    192*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2**2 + 192*(s+t2)**(-1)*
     +    (s+u2)**(-1)*m1**4*u2 + 64*(s+t2)**(-1)*(s+u2)**(-1)*m1**6 + 
     +    64*(s+t2)**(-1)*(s+u2)**(-1)*u2**3 - 128*(s+t2)**(-1)*m1**2*
     +    u2 - 320*(s+t2)**(-1)*m1**4 - 64*(s+t2)**(-1)*u2**2 + 96*
     +    (s+u2)**(-1)*m1**2*t2 )
      MM_gg = MM_gg + ANG_fin(1,7,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 256*(s+u2)**(-1)*m1**2*u2 - 128*
     +    (s+u2)**(-1)*m1**4 + 96*(s+u2)**(-1)*t2*u2 - 32*(s+u2)**(-1)*
     +    t2**2 - 128*(s+u2)**(-1)*u2**2 + 32*m1**2*t2*u2**(-1) + 448*
     +    m1**2 - 192*m1**4*t2**(-1) - 64*m1**4*u2**(-1) - 128*m1**6*
     +    t2**(-2) + 64*m1**6*t2**(-1)*u2**(-1) - 160*t2 + 96*u2 )
      MM_gg = MM_gg + ANG_fin(1,7,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 128*s**(-1)*(s+t2)**(-1)*m1**4*u2 + 128*s**(-1)*
     +    (s+t2)**(-1)*m1**6 - 64*s**(-1)*m1**2*t2 - 64*s**(-1)*m1**2*
     +    u2 + 256*s**(-1)*m1**4*t2**(-1)*u2 + 64*s**(-1)*m1**4 - 128*
     +    s**(-1)*m1**6*t2**(-1) + 32*s**(-1)*t2*u2 + 32*s**(-1)*t2**2
     +     - 640*s*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2 - 320*s*
     +    (s+t2)**(-1)*(s+u2)**(-1)*m1**4 - 320*s*(s+t2)**(-1)*
     +    (s+u2)**(-1)*u2**2 + 544*s*(s+t2)**(-1)*m1**2 + 224*s*
     +    (s+t2)**(-1)*u2 + 352*s*(s+u2)**(-1)*m1**2 - 128*s*
     +    (s+u2)**(-1)*t2 + 352*s*(s+u2)**(-1)*u2 + 64*s*m1**2*u2**(-1)
     +     - 256*s - 544*s**2*(s+t2)**(-1)*(s+u2)**(-1)*m1**2 - 544*
     +    s**2*(s+t2)**(-1)*(s+u2)**(-1)*u2 + 320*s**2*(s+t2)**(-1) + 
     +    256*s**2*(s+u2)**(-1) - 320*s**3*(s+t2)**(-1)*(s+u2)**(-1) - 
     +    192*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2**2 - 192*(s+t2)**(-1)*
     +    (s+u2)**(-1)*m1**4*u2 - 64*(s+t2)**(-1)*(s+u2)**(-1)*m1**6 - 
     +    64*(s+t2)**(-1)*(s+u2)**(-1)*u2**3 )
      MM_gg = MM_gg + ANG_fin(1,7,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 128*(s+t2)**(-1)*m1**2*u2 + 320*(s+t2)**(-1)*m1**4
     +     + 64*(s+t2)**(-1)*u2**2 - 96*(s+u2)**(-1)*m1**2*t2 + 256*
     +    (s+u2)**(-1)*m1**2*u2 + 128*(s+u2)**(-1)*m1**4 - 96*
     +    (s+u2)**(-1)*t2*u2 + 32*(s+u2)**(-1)*t2**2 + 128*(s+u2)**(-1)
     +    *u2**2 - 64*m1**2*t2*u2**(-1) - 544*m1**2 + 384*m1**4*
     +    t2**(-1) + 128*m1**4*u2**(-1) + 256*m1**6*t2**(-2) - 128*
     +    m1**6*t2**(-1)*u2**(-1) + 192*t2 - 96*u2 )
      MM_gg = MM_gg + ANG_fin(1,7,-1,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * ( 64*s**(-1)*m1**2*t2 + 64*s**(-1)*m1**2*u2
     +     - 128*s**(-1)*m1**4*t2**(-1)*u2 - 64*s**(-1)*m1**4 - 32*
     +    s**(-1)*t2*u2 - 32*s**(-1)*t2**2 - 32*s*m1**2*u2**(-1) + 32*
     +    m1**2*t2*u2**(-1) + 96*m1**2 - 192*m1**4*t2**(-1) - 64*m1**4*
     +    u2**(-1) - 128*m1**6*t2**(-2) + 64*m1**6*t2**(-1)*u2**(-1) - 
     +    32*t2 )
      MM_gg = MM_gg + ANG_fin(1,8,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 128*s**(-1)*(s+t2)**(-1)*m1**4*u2 + 128
     +    *s**(-1)*(s+t2)**(-1)*m1**6 + 128*s**(-1)*m1**4*t2**(-1)*u2
     +     - 128*s**(-1)*m1**6*t2**(-1) + 128*s*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*m1**2*u2 - 128*s*(t2+u2)**(-1)*(s+t2)**(-1)*
     +    m1**4 - 32*s*(t2+u2)**(-1)*m1**2 + 32*s*(t2+u2)**(-1)*u2 + 32
     +    *s*(s+t2)**(-1)*m1**2 - 32*s*(s+t2)**(-1)*u2 + 32*s**2*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**2 - 32*s**2*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*u2 - 64*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2*u2**2
     +     + 64*(t2+u2)**(-1)*(s+t2)**(-1)*m1**6 - 64*(t2+u2)**(-1)*
     +    m1**2*u2 - 64*(t2+u2)**(-1)*m1**6*t2**(-1) + 128*(s+t2)**(-1)
     +    *m1**2*u2 - 128*(s+t2)**(-1)*m1**4 + 192*m1**4*t2**(-1) + 128
     +    *m1**6*t2**(-2) + 32*u2 )
      MM_gg = MM_gg + ANG_fin(1,8,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 128*s**(-1)*(s+t2)**(-1)*m1**4*u2 - 128*s**(-1)*
     +    (s+t2)**(-1)*m1**6 - 64*s**(-1)*m1**2*u2 - 256*s**(-1)*m1**4*
     +    t2**(-1)*u2 - 64*s**(-1)*m1**4 + 128*s**(-1)*m1**6*t2**(-1)
     +     - 32*s**(-1)*t2*u2 - 128*s*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2*
     +    u2 + 128*s*(t2+u2)**(-1)*(s+t2)**(-1)*m1**4 + 32*s*
     +    (t2+u2)**(-1)*m1**2 - 32*s*(t2+u2)**(-1)*u2 - 32*s*
     +    (s+t2)**(-1)*m1**2 + 32*s*(s+t2)**(-1)*u2 - 32*s**2*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**2 + 32*s**2*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*u2 + 64*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2*u2**2
     +     - 64*(t2+u2)**(-1)*(s+t2)**(-1)*m1**6 - 32*(t2+u2)**(-1)*
     +    m1**2*u2 + 128*(t2+u2)**(-1)*m1**4 + 128*(t2+u2)**(-1)*m1**6*
     +    t2**(-1) + 32*(t2+u2)**(-1)*u2**2 - 128*(s+t2)**(-1)*m1**2*u2
     +     + 128*(s+t2)**(-1)*m1**4 - 384*m1**4*t2**(-1) - 256*m1**6*
     +    t2**(-2) - 64*u2 )
      MM_gg = MM_gg + ANG_fin(1,8,-1,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * ( 64*s**(-1)*m1**2*u2 + 128*s**(-1)*m1**4*
     +    t2**(-1)*u2 + 64*s**(-1)*m1**4 + 32*s**(-1)*t2*u2 + 96*
     +    (t2+u2)**(-1)*m1**2*u2 - 128*(t2+u2)**(-1)*m1**4 - 64*
     +    (t2+u2)**(-1)*m1**6*t2**(-1) - 32*(t2+u2)**(-1)*u2**2 + 192*
     +    m1**4*t2**(-1) + 128*m1**6*t2**(-2) + 32*u2 )
      MM_gg = MM_gg + ANG_fin(2,0,-1,0)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 32*s*(t2+u2)**(-1)*(s+u2)**(-1)*u2 - 32*s*
     +    (t2+u2)**(-1) + 32*s**2*(t2+u2)**(-1)*(s+u2)**(-1) )
      MM_gg = MM_gg + ANG_fin(2,0,-1,0)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 32 - 64*s**(-1)*t2 - 32*s**(-1)*u2 - 32*s*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*u2 + 32*s*(t2+u2)**(-1) - 32*s**2*
     +    (t2+u2)**(-1)*(s+u2)**(-1) )
      MM_gg = MM_gg + ANG_fin(2,0,-1,0)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * ( 32 + 64*s**(-1)*t2 + 32*s**(-1)*u2 )
      MM_gg = MM_gg + ANG_fin(2,5,-1,-2)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 32*s*m1**2 )
      MM_gg = MM_gg + ANG_fin(2,5,-1,-2)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 64*s*m1**2 )
      MM_gg = MM_gg + ANG_fin(2,5,-1,-2)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * ( 32*s*m1**2 )
      MM_gg = MM_gg + ANG_fin(2,5,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 96*s*(t2+u2)**(-1)*(s+u2)**(-1)*m1**2*u2
     +     - 192*s*(t2+u2)**(-1)*(s+u2)**(-1)*m1**4 - 192*s*
     +    (t2+u2)**(-1)*m1**2 - 32*s*(t2+u2)**(-1)*u2 + 96*s*
     +    (s+u2)**(-1)*m1**2 - 32*s*(s+u2)**(-1)*t2 - 32*s*m1**2*
     +    t2**(-1) + 32*s + 192*s**2*(t2+u2)**(-1)*(s+u2)**(-1)*m1**2
     +     - 32*s**2*(t2+u2)**(-1)*(s+u2)**(-1)*u2 + 64*s**2*
     +    (t2+u2)**(-1) - 32*s**2*(s+u2)**(-1) - 64*s**3*(t2+u2)**(-1)*
     +    (s+u2)**(-1) - 64*(t2+u2)**(-1)*(s+u2)**(-1)*m1**4*u2 + 64*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**6 + 64*(t2+u2)**(-1)*m1**4 + 
     +    64*(t2+u2)**(-1)*m1**6*t2**(-1) + 96*(s+u2)**(-1)*m1**2*t2 - 
     +    128*(s+u2)**(-1)*m1**4 - 32*(s+u2)**(-1)*t2**2 + 32*m1**2*
     +    t2**(-1)*u2 - 64*m1**4*t2**(-1) )
      MM_gg = MM_gg + ANG_fin(2,5,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 96*s*(t2+u2)**(-1)*(s+u2)**(-1)*m1**2*u2 + 192*s*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**4 + 192*s*(t2+u2)**(-1)*m1**2
     +     + 32*s*(t2+u2)**(-1)*u2 - 96*s*(s+u2)**(-1)*m1**2 + 32*s*
     +    (s+u2)**(-1)*t2 + 64*s*m1**2*t2**(-1) - 32*s - 192*s**2*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**2 + 32*s**2*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*u2 - 64*s**2*(t2+u2)**(-1) + 32*s**2*
     +    (s+u2)**(-1) + 64*s**3*(t2+u2)**(-1)*(s+u2)**(-1) + 64*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**4*u2 - 64*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*m1**6 + 96*(t2+u2)**(-1)*m1**2*u2 + 64*
     +    (t2+u2)**(-1)*m1**4 - 128*(t2+u2)**(-1)*m1**6*t2**(-1) + 32*
     +    (t2+u2)**(-1)*u2**2 - 96*(s+u2)**(-1)*m1**2*t2 + 128*
     +    (s+u2)**(-1)*m1**4 + 32*(s+u2)**(-1)*t2**2 - 64*m1**2*
     +    t2**(-1)*u2 - 96*m1**2 + 128*m1**4*t2**(-1) + 32*t2 - 32*u2 )
      MM_gg = MM_gg + ANG_fin(2,5,-1,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * (  - 32*s*m1**2*t2**(-1) - 96*(t2+u2)**(-1)*
     +    m1**2*u2 - 128*(t2+u2)**(-1)*m1**4 + 64*(t2+u2)**(-1)*m1**6*
     +    t2**(-1) - 32*(t2+u2)**(-1)*u2**2 + 32*m1**2*t2**(-1)*u2 + 96
     +    *m1**2 - 64*m1**4*t2**(-1) - 32*t2 + 32*u2 )
      MM_gg = MM_gg + ANG_fin(2,6,-1,-2)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 64*m1**2*u2 + 128*m1**4 - 128*m1**6*
     +    u2**(-1) )
      MM_gg = MM_gg + ANG_fin(2,6,-1,-2)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 128*m1**2*u2 - 256*m1**4 + 256*m1**6*u2**(-1) )
      MM_gg = MM_gg + ANG_fin(2,6,-1,-2)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * (  - 64*m1**2*u2 + 128*m1**4 - 128*m1**6*
     +    u2**(-1) )
      MM_gg = MM_gg + ANG_fin(2,6,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 128*s**(-1)*(s+u2)**(-1)*m1**4*t2 - 128*
     +    s**(-1)*(s+u2)**(-1)*m1**6 - 128*s**(-1)*m1**4*t2*u2**(-1) + 
     +    128*s**(-1)*m1**6*u2**(-1) + 640*s*(s+t2)**(-1)*(s+u2)**(-1)*
     +    m1**2*u2 + 320*s*(s+t2)**(-1)*(s+u2)**(-1)*m1**4 + 320*s*
     +    (s+t2)**(-1)*(s+u2)**(-1)*u2**2 - 544*s*(s+t2)**(-1)*m1**2 - 
     +    224*s*(s+t2)**(-1)*u2 - 480*s*(s+u2)**(-1)*m1**2 + 96*s*
     +    (s+u2)**(-1)*t2 - 320*s*(s+u2)**(-1)*u2 - 32*s*m1**2*t2**(-1)
     +     + 224*s + 544*s**2*(s+t2)**(-1)*(s+u2)**(-1)*m1**2 + 544*
     +    s**2*(s+t2)**(-1)*(s+u2)**(-1)*u2 - 320*s**2*(s+t2)**(-1) - 
     +    224*s**2*(s+u2)**(-1) + 320*s**3*(s+t2)**(-1)*(s+u2)**(-1) + 
     +    192*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2**2 + 192*(s+t2)**(-1)*
     +    (s+u2)**(-1)*m1**4*u2 + 64*(s+t2)**(-1)*(s+u2)**(-1)*m1**6 + 
     +    64*(s+t2)**(-1)*(s+u2)**(-1)*u2**3 - 96*(s+t2)**(-1)*m1**2*u2
     +     - 320*(s+t2)**(-1)*m1**4 - 96*(s+t2)**(-1)*u2**2 + 64*
     +    (s+u2)**(-1)*m1**2*t2 )
      MM_gg = MM_gg + ANG_fin(2,6,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 384*(s+u2)**(-1)*m1**2*u2 - 128*
     +    (s+u2)**(-1)*m1**4 + 64*(s+u2)**(-1)*t2*u2 - 128*(s+u2)**(-1)
     +    *u2**2 + 32*m1**2*t2**(-1)*u2 + 576*m1**2 - 64*m1**4*t2**(-1)
     +     - 192*m1**4*u2**(-1) + 64*m1**6*t2**(-1)*u2**(-1) - 128*
     +    m1**6*u2**(-2) - 96*t2 + 64*u2 )
      MM_gg = MM_gg + ANG_fin(2,6,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 128*s**(-1)*(s+u2)**(-1)*m1**4*t2 + 128*s**(-1)*
     +    (s+u2)**(-1)*m1**6 - 64*s**(-1)*m1**2*t2 - 64*s**(-1)*m1**2*
     +    u2 + 256*s**(-1)*m1**4*t2*u2**(-1) + 64*s**(-1)*m1**4 - 128*
     +    s**(-1)*m1**6*u2**(-1) + 32*s**(-1)*t2*u2 + 32*s**(-1)*u2**2
     +     - 640*s*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2 - 320*s*
     +    (s+t2)**(-1)*(s+u2)**(-1)*m1**4 - 320*s*(s+t2)**(-1)*
     +    (s+u2)**(-1)*u2**2 + 544*s*(s+t2)**(-1)*m1**2 + 224*s*
     +    (s+t2)**(-1)*u2 + 480*s*(s+u2)**(-1)*m1**2 - 96*s*
     +    (s+u2)**(-1)*t2 + 320*s*(s+u2)**(-1)*u2 + 64*s*m1**2*t2**(-1)
     +     - 224*s - 544*s**2*(s+t2)**(-1)*(s+u2)**(-1)*m1**2 - 544*
     +    s**2*(s+t2)**(-1)*(s+u2)**(-1)*u2 + 320*s**2*(s+t2)**(-1) + 
     +    224*s**2*(s+u2)**(-1) - 320*s**3*(s+t2)**(-1)*(s+u2)**(-1) - 
     +    192*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2**2 - 192*(s+t2)**(-1)*
     +    (s+u2)**(-1)*m1**4*u2 - 64*(s+t2)**(-1)*(s+u2)**(-1)*m1**6 - 
     +    64*(s+t2)**(-1)*(s+u2)**(-1)*u2**3 )
      MM_gg = MM_gg + ANG_fin(2,6,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 96*(s+t2)**(-1)*m1**2*u2 + 320*(s+t2)**(-1)*m1**4 + 
     +    96*(s+t2)**(-1)*u2**2 - 64*(s+u2)**(-1)*m1**2*t2 + 384*
     +    (s+u2)**(-1)*m1**2*u2 + 128*(s+u2)**(-1)*m1**4 - 64*
     +    (s+u2)**(-1)*t2*u2 + 128*(s+u2)**(-1)*u2**2 - 64*m1**2*
     +    t2**(-1)*u2 - 672*m1**2 + 128*m1**4*t2**(-1) + 384*m1**4*
     +    u2**(-1) - 128*m1**6*t2**(-1)*u2**(-1) + 256*m1**6*u2**(-2)
     +     + 96*t2 - 32*u2 )
      MM_gg = MM_gg + ANG_fin(2,6,-1,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * ( 64*s**(-1)*m1**2*t2 + 64*s**(-1)*m1**2*u2
     +     - 128*s**(-1)*m1**4*t2*u2**(-1) - 64*s**(-1)*m1**4 - 32*
     +    s**(-1)*t2*u2 - 32*s**(-1)*u2**2 - 32*s*m1**2*t2**(-1) + 32*
     +    m1**2*t2**(-1)*u2 + 96*m1**2 - 64*m1**4*t2**(-1) - 192*m1**4*
     +    u2**(-1) + 64*m1**6*t2**(-1)*u2**(-1) - 128*m1**6*u2**(-2) - 
     +    32*u2 )
      MM_gg = MM_gg + ANG_fin(2,8,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 128*s**(-1)*(s+u2)**(-1)*m1**4*t2 + 128
     +    *s**(-1)*(s+u2)**(-1)*m1**6 + 128*s**(-1)*m1**4*t2*u2**(-1)
     +     - 128*s**(-1)*m1**6*u2**(-1) - 128*s*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*m1**2*u2 - 128*s*(t2+u2)**(-1)*(s+u2)**(-1)*
     +    m1**4 - 32*s*(t2+u2)**(-1)*m1**2 - 32*s*(t2+u2)**(-1)*u2 + 
     +    160*s*(s+u2)**(-1)*m1**2 - 32*s*(s+u2)**(-1)*t2 + 32*s + 32*
     +    s**2*(t2+u2)**(-1)*(s+u2)**(-1)*m1**2 + 32*s**2*(t2+u2)**(-1)
     +    *(s+u2)**(-1)*u2 - 32*s**2*(s+u2)**(-1) - 64*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*m1**2*u2**2 + 64*(t2+u2)**(-1)*(s+u2)**(-1)*
     +    m1**6 + 64*(t2+u2)**(-1)*m1**2*u2 + 64*(t2+u2)**(-1)*m1**6*
     +    t2**(-1) + 64*(s+u2)**(-1)*m1**2*t2 + 64*(s+u2)**(-1)*m1**2*
     +    u2 - 128*(s+u2)**(-1)*m1**4 - 64*m1**2 + 192*m1**4*u2**(-1)
     +     - 64*m1**6*t2**(-1)*u2**(-1) + 128*m1**6*u2**(-2) + 32*t2 )
      MM_gg = MM_gg + ANG_fin(2,8,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 128*s**(-1)*(s+u2)**(-1)*m1**4*t2 - 128*s**(-1)*
     +    (s+u2)**(-1)*m1**6 - 64*s**(-1)*m1**2*t2 - 256*s**(-1)*m1**4*
     +    t2*u2**(-1) - 64*s**(-1)*m1**4 + 128*s**(-1)*m1**6*u2**(-1)
     +     - 32*s**(-1)*t2*u2 + 128*s*(t2+u2)**(-1)*(s+u2)**(-1)*m1**2*
     +    u2 + 128*s*(t2+u2)**(-1)*(s+u2)**(-1)*m1**4 + 32*s*
     +    (t2+u2)**(-1)*m1**2 + 32*s*(t2+u2)**(-1)*u2 - 160*s*
     +    (s+u2)**(-1)*m1**2 + 32*s*(s+u2)**(-1)*t2 - 32*s - 32*s**2*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**2 - 32*s**2*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*u2 + 32*s**2*(s+u2)**(-1) + 64*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*m1**2*u2**2 - 64*(t2+u2)**(-1)*(s+u2)**(-1)*
     +    m1**6 + 32*(t2+u2)**(-1)*m1**2*u2 + 128*(t2+u2)**(-1)*m1**4
     +     - 128*(t2+u2)**(-1)*m1**6*t2**(-1) + 32*(t2+u2)**(-1)*u2**2
     +     - 64*(s+u2)**(-1)*m1**2*t2 - 64*(s+u2)**(-1)*m1**2*u2 + 128*
     +    (s+u2)**(-1)*m1**4 - 32*m1**2 - 384*m1**4*u2**(-1) + 128*
     +    m1**6*t2**(-1)*u2**(-1) )
      MM_gg = MM_gg + ANG_fin(2,8,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 256*m1**6*u2**(-2) - 32*t2 - 32*u2 )
      MM_gg = MM_gg + ANG_fin(2,8,-1,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * ( 64*s**(-1)*m1**2*t2 + 128*s**(-1)*m1**4*t2
     +    *u2**(-1) + 64*s**(-1)*m1**4 + 32*s**(-1)*t2*u2 - 96*
     +    (t2+u2)**(-1)*m1**2*u2 - 128*(t2+u2)**(-1)*m1**4 + 64*
     +    (t2+u2)**(-1)*m1**6*t2**(-1) - 32*(t2+u2)**(-1)*u2**2 + 96*
     +    m1**2 + 192*m1**4*u2**(-1) - 64*m1**6*t2**(-1)*u2**(-1) + 128
     +    *m1**6*u2**(-2) + 32*u2 )
      MM_gg = MM_gg + ANG_fin(5,0,-2,0)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 64*m1**2 )
      MM_gg = MM_gg + ANG_fin(5,0,-2,0)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 128*s**(-2)*m1**2*t2**2 - 128*s**(-1)*m1**2*t2 - 
     +    192*m1**2 )
      MM_gg = MM_gg + ANG_fin(5,0,-2,0)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * ( 128*s**(-2)*m1**2*t2**2 + 128*s**(-1)*m1**2*t2 + 
     +    128*m1**2 )
      MM_gg = MM_gg + ANG_fin(5,0,-1,0)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 128*(t2+u2)**(-1)*m1**2 )
      MM_gg = MM_gg + ANG_fin(5,0,-1,0)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 128*s**(-1)*(t2+u2)**(-1)*m1**2*u2 + 256*s**(-1)*
     +    (t2+u2)**(-1)*m1**4 - 128*s**(-1)*m1**2 + 32*s**(-1)*t2 + 96*
     +    s**(-1)*u2 + 320*(t2+u2)**(-1)*m1**2 + 64*(t2+u2)**(-1)*u2 )
      MM_gg = MM_gg + ANG_fin(5,0,-1,0)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * ( 128*s**(-1)*(t2+u2)**(-1)*m1**2*u2 - 256*s**(-1)*
     +    (t2+u2)**(-1)*m1**4 + 128*s**(-1)*m1**2 - 32*s**(-1)*t2 - 96*
     +    s**(-1)*u2 - 192*(t2+u2)**(-1)*m1**2 - 64*(t2+u2)**(-1)*u2 )
      MM_gg = MM_gg + ANG_fin(5,6,-2,1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 256*s**(-2)*m1**2*t2 - 128*s**(-1)*m1**2 )
      MM_gg = MM_gg + ANG_fin(5,6,-2,1)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * ( 256*s**(-2)*m1**2*t2 + 128*s**(-1)*m1**2 )
      MM_gg = MM_gg + ANG_fin(5,6,-2,2)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 128*s**(-2)*m1**2 )
      MM_gg = MM_gg + ANG_fin(5,6,-2,2)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * ( 128*s**(-2)*m1**2 )
      MM_gg = MM_gg + ANG_fin(5,6,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 96*s*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2*
     +    u2 - 192*s*(t2+u2)**(-1)*(s+t2)**(-1)*m1**4 - 224*s*
     +    (t2+u2)**(-1)*m1**2 + 192*s*(s+t2)**(-1)*m1**2 - 32*s*
     +    (s+t2)**(-1)*u2 + 32*s*m1**2*t2**(-1) + 192*s**2*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**2 + 32*s**2*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*u2 + 64*s**2*(t2+u2)**(-1) - 64*s**2*
     +    (s+t2)**(-1) - 64*s**3*(t2+u2)**(-1)*(s+t2)**(-1) + 64*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**4*u2 + 64*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*m1**6 + 192*(t2+u2)**(-1)*m1**4 - 64*
     +    (t2+u2)**(-1)*m1**6*t2**(-1) + 96*(s+t2)**(-1)*m1**2*u2 - 192
     +    *(s+t2)**(-1)*m1**4 - 32*(s+t2)**(-1)*u2**2 - 32*m1**2*
     +    t2**(-1)*u2 + 64*m1**4*t2**(-1) - 32*u2 )
      MM_gg = MM_gg + ANG_fin(5,6,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 128*s**(-1)*(t2+u2)**(-1)*m1**4*u2 - 64*s**(-1)*
     +    m1**2*u2 - 64*s**(-1)*m1**4 + 32*s**(-1)*t2*u2 + 32*s**(-1)*
     +    u2**2 + 96*s*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2*u2 + 192*s*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**4 + 256*s*(t2+u2)**(-1)*m1**2
     +     + 32*s*(t2+u2)**(-1)*u2 - 192*s*(s+t2)**(-1)*m1**2 + 32*s*
     +    (s+t2)**(-1)*u2 - 64*s*m1**2*t2**(-1) - 192*s**2*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**2 - 32*s**2*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*u2 - 64*s**2*(t2+u2)**(-1) + 64*s**2*
     +    (s+t2)**(-1) + 64*s**3*(t2+u2)**(-1)*(s+t2)**(-1) - 64*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**4*u2 - 64*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*m1**6 - 128*(t2+u2)**(-1)*m1**2*u2 - 192*
     +    (t2+u2)**(-1)*m1**4 + 128*(t2+u2)**(-1)*m1**6*t2**(-1) - 96*
     +    (s+t2)**(-1)*m1**2*u2 + 192*(s+t2)**(-1)*m1**4 + 32*
     +    (s+t2)**(-1)*u2**2 + 64*m1**2*t2**(-1)*u2 - 128*m1**4*
     +    t2**(-1) )
      MM_gg = MM_gg + ANG_fin(5,6,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 96*u2 )
      MM_gg = MM_gg + ANG_fin(5,6,-1,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * (  - 128*s**(-1)*(t2+u2)**(-1)*m1**4*u2 + 64
     +    *s**(-1)*m1**2*u2 + 64*s**(-1)*m1**4 - 32*s**(-1)*t2*u2 - 32*
     +    s**(-1)*u2**2 - 32*s*(t2+u2)**(-1)*m1**2 - 32*s*(t2+u2)**(-1)
     +    *u2 + 32*s*m1**2*t2**(-1) + 128*(t2+u2)**(-1)*m1**2*u2 - 64*
     +    (t2+u2)**(-1)*m1**6*t2**(-1) - 32*m1**2*t2**(-1)*u2 + 64*
     +    m1**4*t2**(-1) - 64*u2 )
      MM_gg = MM_gg + ANG_fin(5,6,-1,1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 256*s**(-2)*(t2+u2)**(-1)*m1**2*u2 + 256*s**(-2)*
     +    m1**2 + 256*s**(-1)*(t2+u2)**(-1)*m1**2 + 128*s**(-1)*
     +    (t2+u2)**(-1)*u2 - 64*s**(-1) )
      MM_gg = MM_gg + ANG_fin(5,6,-1,1)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * ( 256*s**(-2)*(t2+u2)**(-1)*m1**2*u2 - 256*s**(-2)*
     +    m1**2 - 256*s**(-1)*(t2+u2)**(-1)*m1**2 - 128*s**(-1)*
     +    (t2+u2)**(-1)*u2 + 64*s**(-1) )
      MM_gg = MM_gg + ANG_fin(5,6,-1,2)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 256*s**(-2)*(t2+u2)**(-1)*m1**2 )
      MM_gg = MM_gg + ANG_fin(5,6,-1,2)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * (  - 256*s**(-2)*(t2+u2)**(-1)*m1**2 )
      MM_gg = MM_gg + ANG_fin(5,7,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 96*s*(t2+u2)**(-1)*(s+u2)**(-1)*m1**2*u2
     +     - 192*s*(t2+u2)**(-1)*(s+u2)**(-1)*m1**4 - 224*s*
     +    (t2+u2)**(-1)*m1**2 + 96*s*(s+u2)**(-1)*m1**2 - 32*s*
     +    (s+u2)**(-1)*t2 + 32*s*m1**2*u2**(-1) + 192*s**2*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**2 - 32*s**2*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*u2 + 64*s**2*(t2+u2)**(-1) - 32*s**2*
     +    (s+u2)**(-1) - 64*s**3*(t2+u2)**(-1)*(s+u2)**(-1) - 64*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**4*u2 + 64*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*m1**6 + 192*(t2+u2)**(-1)*m1**4 + 64*
     +    (t2+u2)**(-1)*m1**6*t2**(-1) + 96*(s+u2)**(-1)*m1**2*t2 - 128
     +    *(s+u2)**(-1)*m1**4 - 32*(s+u2)**(-1)*t2**2 - 32*m1**2*t2*
     +    u2**(-1) + 64*m1**4*u2**(-1) - 64*m1**6*t2**(-1)*u2**(-1) - 
     +    32*t2 )
      MM_gg = MM_gg + ANG_fin(5,7,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 128*s**(-1)*(t2+u2)**(-1)*m1**4*u2 - 64*s**(-1)*
     +    m1**2*t2 + 64*s**(-1)*m1**4 + 32*s**(-1)*t2*u2 + 32*s**(-1)*
     +    t2**2 - 96*s*(t2+u2)**(-1)*(s+u2)**(-1)*m1**2*u2 + 192*s*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**4 + 256*s*(t2+u2)**(-1)*m1**2
     +     - 32*s*(t2+u2)**(-1)*u2 - 96*s*(s+u2)**(-1)*m1**2 + 32*s*
     +    (s+u2)**(-1)*t2 - 64*s*m1**2*u2**(-1) + 32*s - 192*s**2*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**2 + 32*s**2*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*u2 - 64*s**2*(t2+u2)**(-1) + 32*s**2*
     +    (s+u2)**(-1) + 64*s**3*(t2+u2)**(-1)*(s+u2)**(-1) + 64*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**4*u2 - 64*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*m1**6 + 128*(t2+u2)**(-1)*m1**2*u2 - 192*
     +    (t2+u2)**(-1)*m1**4 - 128*(t2+u2)**(-1)*m1**6*t2**(-1) - 96*
     +    (s+u2)**(-1)*m1**2*t2 + 128*(s+u2)**(-1)*m1**4 + 32*
     +    (s+u2)**(-1)*t2**2 + 64*m1**2*t2*u2**(-1) - 128*m1**2 - 128*
     +    m1**4*u2**(-1) )
      MM_gg = MM_gg + ANG_fin(5,7,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 128*m1**6*t2**(-1)*u2**(-1) + 96*t2 )
      MM_gg = MM_gg + ANG_fin(5,7,-1,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * ( 128*s**(-1)*(t2+u2)**(-1)*m1**4*u2 + 64*
     +    s**(-1)*m1**2*t2 - 64*s**(-1)*m1**4 - 32*s**(-1)*t2*u2 - 32*
     +    s**(-1)*t2**2 - 32*s*(t2+u2)**(-1)*m1**2 + 32*s*(t2+u2)**(-1)
     +    *u2 + 32*s*m1**2*u2**(-1) - 32*s - 128*(t2+u2)**(-1)*m1**2*u2
     +     + 64*(t2+u2)**(-1)*m1**6*t2**(-1) - 32*m1**2*t2*u2**(-1) + 
     +    128*m1**2 + 64*m1**4*u2**(-1) - 64*m1**6*t2**(-1)*u2**(-1) - 
     +    64*t2 )
      MM_gg = MM_gg + ANG_fin(6,0,-1,0)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 32*s*(t2+u2)**(-1)*(s+t2)**(-1)*u2 - 32
     +    *s*(t2+u2)**(-1) + 32*s*(s+t2)**(-1) + 32*s**2*(t2+u2)**(-1)*
     +    (s+t2)**(-1) )
      MM_gg = MM_gg + ANG_fin(6,0,-1,0)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 32 + 32*s**(-1)*t2 + 64*s**(-1)*u2 + 32*s*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*u2 + 32*s*(t2+u2)**(-1) - 32*s*
     +    (s+t2)**(-1) - 32*s**2*(t2+u2)**(-1)*(s+t2)**(-1) )
      MM_gg = MM_gg + ANG_fin(6,0,-1,0)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * (  - 32 - 32*s**(-1)*t2 - 64*s**(-1)*u2 )
      MM_gg = MM_gg + ANG_fin(6,7,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 256*s**(-2)*m1**6 + 128*s**(-1)*
     +    (s+t2)**(-1)*m1**4*u2 - 128*s**(-1)*(s+t2)**(-1)*m1**6 + 128*
     +    s**(-1)*(s+u2)**(-1)*m1**4*t2 - 128*s**(-1)*(s+u2)**(-1)*
     +    m1**6 + 256*s**(-1)*m1**4 + 640*s*(s+t2)**(-1)*(s+u2)**(-1)*
     +    m1**2*u2 + 320*s*(s+t2)**(-1)*(s+u2)**(-1)*m1**4 + 320*s*
     +    (s+t2)**(-1)*(s+u2)**(-1)*u2**2 - 544*s*(s+t2)**(-1)*m1**2 - 
     +    224*s*(s+t2)**(-1)*u2 - 480*s*(s+u2)**(-1)*m1**2 + 96*s*
     +    (s+u2)**(-1)*t2 - 320*s*(s+u2)**(-1)*u2 + 256*s + 544*s**2*
     +    (s+t2)**(-1)*(s+u2)**(-1)*m1**2 + 544*s**2*(s+t2)**(-1)*
     +    (s+u2)**(-1)*u2 - 320*s**2*(s+t2)**(-1) - 224*s**2*
     +    (s+u2)**(-1) + 320*s**3*(s+t2)**(-1)*(s+u2)**(-1) + 192*
     +    (s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2**2 + 192*(s+t2)**(-1)*
     +    (s+u2)**(-1)*m1**4*u2 + 64*(s+t2)**(-1)*(s+u2)**(-1)*m1**6 + 
     +    64*(s+t2)**(-1)*(s+u2)**(-1)*u2**3 - 128*(s+t2)**(-1)*m1**2*
     +    u2 )
      MM_gg = MM_gg + ANG_fin(6,7,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 320*(s+t2)**(-1)*m1**4 - 64*
     +    (s+t2)**(-1)*u2**2 + 64*(s+u2)**(-1)*m1**2*t2 - 384*
     +    (s+u2)**(-1)*m1**2*u2 - 128*(s+u2)**(-1)*m1**4 + 64*
     +    (s+u2)**(-1)*t2*u2 - 128*(s+u2)**(-1)*u2**2 + 576*m1**2 - 64*
     +    t2 + 128*u2 )
      MM_gg = MM_gg + ANG_fin(6,7,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 256*s**(-2)*m1**6 - 128*s**(-1)*(s+t2)**(-1)*
     +    m1**4*u2 + 128*s**(-1)*(s+t2)**(-1)*m1**6 - 128*s**(-1)*
     +    (s+u2)**(-1)*m1**4*t2 + 128*s**(-1)*(s+u2)**(-1)*m1**6 - 256*
     +    s**(-1)*m1**4 - 640*s*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2 - 
     +    320*s*(s+t2)**(-1)*(s+u2)**(-1)*m1**4 - 320*s*(s+t2)**(-1)*
     +    (s+u2)**(-1)*u2**2 + 544*s*(s+t2)**(-1)*m1**2 + 224*s*
     +    (s+t2)**(-1)*u2 + 480*s*(s+u2)**(-1)*m1**2 - 96*s*
     +    (s+u2)**(-1)*t2 + 320*s*(s+u2)**(-1)*u2 - 256*s - 544*s**2*
     +    (s+t2)**(-1)*(s+u2)**(-1)*m1**2 - 544*s**2*(s+t2)**(-1)*
     +    (s+u2)**(-1)*u2 + 320*s**2*(s+t2)**(-1) + 224*s**2*
     +    (s+u2)**(-1) - 320*s**3*(s+t2)**(-1)*(s+u2)**(-1) - 192*
     +    (s+t2)**(-1)*(s+u2)**(-1)*m1**2*u2**2 - 192*(s+t2)**(-1)*
     +    (s+u2)**(-1)*m1**4*u2 - 64*(s+t2)**(-1)*(s+u2)**(-1)*m1**6 - 
     +    64*(s+t2)**(-1)*(s+u2)**(-1)*u2**3 + 128*(s+t2)**(-1)*m1**2*
     +    u2 )
      MM_gg = MM_gg + ANG_fin(6,7,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 320*(s+t2)**(-1)*m1**4 + 64*(s+t2)**(-1)*u2**2 - 64*
     +    (s+u2)**(-1)*m1**2*t2 + 384*(s+u2)**(-1)*m1**2*u2 + 128*
     +    (s+u2)**(-1)*m1**4 - 64*(s+u2)**(-1)*t2*u2 + 128*(s+u2)**(-1)
     +    *u2**2 - 576*m1**2 + 64*t2 - 128*u2 )
      MM_gg = MM_gg + ANG_fin(6,8,-2,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 128*m1**4 - 128*m1**6*u2**(-1) )
      MM_gg = MM_gg + ANG_fin(6,8,-2,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 256*m1**4 + 256*m1**6*u2**(-1) )
      MM_gg = MM_gg + ANG_fin(6,8,-2,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * ( 128*m1**4 - 128*m1**6*u2**(-1) )
      MM_gg = MM_gg + ANG_fin(6,8,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 256*s**(-2)*m1**6 - 128*s**(-1)*
     +    (s+t2)**(-1)*m1**4*u2 + 128*s**(-1)*(s+t2)**(-1)*m1**6 - 128*
     +    s**(-1)*m1**4*t2*u2**(-1) - 256*s**(-1)*m1**4 + 128*s**(-1)*
     +    m1**6*u2**(-1) + 128*s*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2*u2 - 
     +    128*s*(t2+u2)**(-1)*(s+t2)**(-1)*m1**4 - 64*s*(t2+u2)**(-1)*
     +    m1**2 + 32*s*(s+t2)**(-1)*m1**2 - 32*s*(s+t2)**(-1)*u2 + 32*
     +    s**2*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2 - 32*s**2*(t2+u2)**(-1)
     +    *(s+t2)**(-1)*u2 - 64*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2*u2**2
     +     + 64*(t2+u2)**(-1)*(s+t2)**(-1)*m1**6 - 64*(t2+u2)**(-1)*
     +    m1**2*u2 + 128*(t2+u2)**(-1)*m1**4 - 64*(t2+u2)**(-1)*m1**6*
     +    t2**(-1) + 128*(s+t2)**(-1)*m1**2*u2 - 128*(s+t2)**(-1)*m1**4
     +     - 192*m1**4*u2**(-1) + 64*m1**6*t2**(-1)*u2**(-1) - 128*
     +    m1**6*u2**(-2) )
      MM_gg = MM_gg + ANG_fin(6,8,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 256*s**(-2)*m1**6 + 128*s**(-1)*(t2+u2)**(-1)*m1**4*
     +    u2 + 128*s**(-1)*(s+t2)**(-1)*m1**4*u2 - 128*s**(-1)*
     +    (s+t2)**(-1)*m1**6 + 256*s**(-1)*m1**4*t2*u2**(-1) + 256*
     +    s**(-1)*m1**4 - 128*s**(-1)*m1**6*u2**(-1) - 128*s*
     +    (t2+u2)**(-1)*(s+t2)**(-1)*m1**2*u2 + 128*s*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*m1**4 + 96*s*(t2+u2)**(-1)*m1**2 + 32*s*
     +    (t2+u2)**(-1)*u2 - 32*s*(s+t2)**(-1)*m1**2 + 32*s*
     +    (s+t2)**(-1)*u2 - 32*s**2*(t2+u2)**(-1)*(s+t2)**(-1)*m1**2 + 
     +    32*s**2*(t2+u2)**(-1)*(s+t2)**(-1)*u2 + 64*(t2+u2)**(-1)*
     +    (s+t2)**(-1)*m1**2*u2**2 - 64*(t2+u2)**(-1)*(s+t2)**(-1)*
     +    m1**6 - 64*(t2+u2)**(-1)*m1**2*u2 - 128*(t2+u2)**(-1)*m1**4
     +     + 128*(t2+u2)**(-1)*m1**6*t2**(-1) - 128*(s+t2)**(-1)*m1**2*
     +    u2 + 128*(s+t2)**(-1)*m1**4 + 384*m1**4*u2**(-1) - 128*m1**6*
     +    t2**(-1)*u2**(-1) + 256*m1**6*u2**(-2) )
      MM_gg = MM_gg + ANG_fin(6,8,-1,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * (  - 128*s**(-1)*(t2+u2)**(-1)*m1**4*u2 - 
     +    128*s**(-1)*m1**4*t2*u2**(-1) - 32*s*(t2+u2)**(-1)*m1**2 - 32
     +    *s*(t2+u2)**(-1)*u2 + 128*(t2+u2)**(-1)*m1**2*u2 - 64*
     +    (t2+u2)**(-1)*m1**6*t2**(-1) - 192*m1**4*u2**(-1) + 64*m1**6*
     +    t2**(-1)*u2**(-1) - 128*m1**6*u2**(-2) )
      MM_gg = MM_gg + ANG_fin(6,8,1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 256*s**(-2)*(t2+u2)**(-1)*m1**2*u2 + 128*s**(-2)*
     +    m1**2 + 256*s**(-1)*(t2+u2)**(-1)*m1**2 + 128*s**(-1)*
     +    (t2+u2)**(-1)*u2 - 64*s**(-1) )
      MM_gg = MM_gg + ANG_fin(6,8,1,-1)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * ( 256*s**(-2)*(t2+u2)**(-1)*m1**2*u2 - 128*s**(-2)*
     +    m1**2 - 256*s**(-1)*(t2+u2)**(-1)*m1**2 - 128*s**(-1)*
     +    (t2+u2)**(-1)*u2 + 64*s**(-1) )
      MM_gg = MM_gg + ANG_fin(6,8,2,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 256*s**(-2)*(t2+u2)**(-1)*m1**2 )
      MM_gg = MM_gg + ANG_fin(6,8,2,-1)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * (  - 256*s**(-2)*(t2+u2)**(-1)*m1**2 )
      MM_gg = MM_gg + ANG_fin(7,0,-1,0)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 32*s*(t2+u2)**(-1)*(s+u2)**(-1)*u2 - 32*s*
     +    (t2+u2)**(-1) + 32*s**2*(t2+u2)**(-1)*(s+u2)**(-1) )
      MM_gg = MM_gg + ANG_fin(7,0,-1,0)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 32 + 64*s**(-1)*t2 + 32*s**(-1)*u2 - 32*s*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*u2 + 32*s*(t2+u2)**(-1) - 32*s**2*
     +    (t2+u2)**(-1)*(s+u2)**(-1) )
      MM_gg = MM_gg + ANG_fin(7,0,-1,0)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * (  - 32 - 64*s**(-1)*t2 - 32*s**(-1)*u2 )
      MM_gg = MM_gg + ANG_fin(7,8,-2,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * ( 128*m1**4 - 128*m1**6*t2**(-1) )
      MM_gg = MM_gg + ANG_fin(7,8,-2,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 256*m1**4 + 256*m1**6*t2**(-1) )
      MM_gg = MM_gg + ANG_fin(7,8,-2,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * ( 128*m1**4 - 128*m1**6*t2**(-1) )
      MM_gg = MM_gg + ANG_fin(7,8,-1,-1)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 256*s**(-2)*m1**6 - 128*s**(-1)*
     +    (s+u2)**(-1)*m1**4*t2 + 128*s**(-1)*(s+u2)**(-1)*m1**6 - 128*
     +    s**(-1)*m1**4*t2**(-1)*u2 - 256*s**(-1)*m1**4 + 128*s**(-1)*
     +    m1**6*t2**(-1) - 128*s*(t2+u2)**(-1)*(s+u2)**(-1)*m1**2*u2 - 
     +    128*s*(t2+u2)**(-1)*(s+u2)**(-1)*m1**4 - 64*s*(t2+u2)**(-1)*
     +    m1**2 + 160*s*(s+u2)**(-1)*m1**2 - 32*s*(s+u2)**(-1)*t2 + 32*
     +    s**2*(t2+u2)**(-1)*(s+u2)**(-1)*m1**2 + 32*s**2*(t2+u2)**(-1)
     +    *(s+u2)**(-1)*u2 - 32*s**2*(s+u2)**(-1) - 64*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*m1**2*u2**2 + 64*(t2+u2)**(-1)*(s+u2)**(-1)*
     +    m1**6 + 64*(t2+u2)**(-1)*m1**2*u2 + 128*(t2+u2)**(-1)*m1**4
     +     + 64*(t2+u2)**(-1)*m1**6*t2**(-1) + 64*(s+u2)**(-1)*m1**2*t2
     +     + 64*(s+u2)**(-1)*m1**2*u2 - 128*(s+u2)**(-1)*m1**4 - 64*
     +    m1**2 - 192*m1**4*t2**(-1) - 128*m1**6*t2**(-2) )
      MM_gg = MM_gg + ANG_fin(7,8,-1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 256*s**(-2)*m1**6 - 128*s**(-1)*(t2+u2)**(-1)*m1**4*
     +    u2 + 128*s**(-1)*(s+u2)**(-1)*m1**4*t2 - 128*s**(-1)*
     +    (s+u2)**(-1)*m1**6 + 256*s**(-1)*m1**4*t2**(-1)*u2 + 384*
     +    s**(-1)*m1**4 - 128*s**(-1)*m1**6*t2**(-1) + 128*s*
     +    (t2+u2)**(-1)*(s+u2)**(-1)*m1**2*u2 + 128*s*(t2+u2)**(-1)*
     +    (s+u2)**(-1)*m1**4 + 96*s*(t2+u2)**(-1)*m1**2 - 32*s*
     +    (t2+u2)**(-1)*u2 - 160*s*(s+u2)**(-1)*m1**2 + 32*s*
     +    (s+u2)**(-1)*t2 + 32*s - 32*s**2*(t2+u2)**(-1)*(s+u2)**(-1)*
     +    m1**2 - 32*s**2*(t2+u2)**(-1)*(s+u2)**(-1)*u2 + 32*s**2*
     +    (s+u2)**(-1) + 64*(t2+u2)**(-1)*(s+u2)**(-1)*m1**2*u2**2 - 64
     +    *(t2+u2)**(-1)*(s+u2)**(-1)*m1**6 + 64*(t2+u2)**(-1)*m1**2*u2
     +     - 128*(t2+u2)**(-1)*m1**4 - 128*(t2+u2)**(-1)*m1**6*t2**(-1)
     +     - 64*(s+u2)**(-1)*m1**2*t2 - 64*(s+u2)**(-1)*m1**2*u2 + 128*
     +    (s+u2)**(-1)*m1**4 - 64*m1**2 + 384*m1**4*t2**(-1) + 256*
     +    m1**6*t2**(-2) )
      MM_gg = MM_gg + ANG_fin(7,8,-1,-1)*Ar2*Nc**3*st**2*Pi**2*
     + alphas**2*hardfac * ( 128*s**(-1)*(t2+u2)**(-1)*m1**4*u2 - 128*
     +    s**(-1)*m1**4*t2**(-1)*u2 - 128*s**(-1)*m1**4 - 32*s*
     +    (t2+u2)**(-1)*m1**2 + 32*s*(t2+u2)**(-1)*u2 - 32*s - 128*
     +    (t2+u2)**(-1)*m1**2*u2 + 64*(t2+u2)**(-1)*m1**6*t2**(-1) + 
     +    128*m1**2 - 192*m1**4*t2**(-1) - 128*m1**6*t2**(-2) )
      MM_gg = MM_gg + ANG_fin(7,8,1,-1)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * ( 128*s**(-2)*m1**2 )
      MM_gg = MM_gg + ANG_fin(7,8,1,-1)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * (  - 128*s**(-2)*m1**2 )
      MM_gg = MM_gg + ANG_fin(8,0,-1,0)*Ar2*Nc**(-1)*st**2*Pi**2*
     + alphas**2*hardfac * (  - 128*(t2+u2)**(-1)*m1**2 )
      MM_gg = MM_gg + ANG_fin(8,0,-1,0)*Ar2*Nc*st**2*Pi**2*alphas**2*
     + hardfac * (  - 128*s**(-1)*(t2+u2)**(-1)*m1**2*u2 + 256*s**(-1)*
     +    (t2+u2)**(-1)*m1**4 - 128*s**(-1)*m1**2 - 32*s**(-1)*t2 - 32*
     +    s**(-1)*u2 + 320*(t2+u2)**(-1)*m1**2 + 64*(t2+u2)**(-1)*u2 )
      MM_gg = MM_gg + ANG_fin(8,0,-1,0)*Ar2*Nc**3*st**2*Pi**2*alphas**2
     + *hardfac * ( 128*s**(-1)*(t2+u2)**(-1)*m1**2*u2 - 256*s**(-1)*
     +    (t2+u2)**(-1)*m1**4 + 128*s**(-1)*m1**2 + 32*s**(-1)*t2 + 32*
     +    s**(-1)*u2 - 192*(t2+u2)**(-1)*m1**2 - 64*(t2+u2)**(-1)*u2 )

c               the prefactor for the scaling functions 
      LE_GG = MM_gg * m1**2/4.D0
      
c               the phase space except for 1/s**2 
      LE_GG = LE_GG / ( 16.D0 * pi**2 )**2 / 2.D0 * s4/(s4+m1**2)

c               in this case multiply luminosity by hand
      LE_GG = LE_GG * lumi(1)

c               the averaging factors
      LE_GG = LE_GG /4.D0 /(Nc**2-1.D0)**2

      return
      end

