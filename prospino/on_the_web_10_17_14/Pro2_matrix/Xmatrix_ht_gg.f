cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c                                                                      c
c     THE SCALING FUNCTIONS                                            c
c                                                                      c
c     HT_QGH(MASSIN,C)                                                 c
c                                                                      c
c     INPUT :                                                          c
c                                                                      c
c       MASSIN(1)  = s                                                 c
c       MASSIN(2)  = t2                                                c
c       MASSIN(3)  = s4                                                c
c       MASSIN(6)  = m1                                                c
c       MASSIN(7)  = m2                                                c
c       MASSIN(9)  = mt                                                c
c       MASSIN(11) = ms                                                c
c       MASSIN(12) = qr                                                c
c       MASSIN(13) = qf                                                c
c       MASSIN(4-5,8,10,13-30) not needed                              c
c                                                                      c
c                                                                      c
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

c --------------------------------------------------------------------
      real*8 function HT_GGOS(massin,h_l,h_r,lumi)

      implicit none 

      real*8     massin(1:30),lumi(1:3),Pi,Nc,Cf,h_l,h_r,h_l2,h_r2
     &          ,s,s4,m1,m2
     &          ,hardfac,alphas,theta_s3
     &          ,MM_gg_os,ANG_fin(0:9,0:9,-2:2,-2:2)

      Pi = 4.D0*atan(1.D0)
      Nc = 3.D0 
      Cf = 4.D0/3.D0

      h_l2 = h_l**2
      h_r2 = h_r**2

      s   = massin(1)
      s4  = massin(3)
      m1  = massin(6)
      m2  = massin(7)

      hardfac = 1.D0

c               the s3 regularization
      theta_s3 = 0.D0
      if ((m1.gt.m2).and.(s.gt.4.D0*m1**2)) theta_s3 = 1.D0 

c               the angular functions 
      call ANGULAR_ARRAY_HT_GGOS(massin,theta_s3,ANG_fin)

c               gs**2=4*pi*alpha_s is cut, re-appears as nlo later 
      alphas = 1.D0

      MM_gg_os =
     +  + ANG_fin(6,8,-2,-2)*(h_r2+h_l2)*Nc**2*Cf*Pi**2*alphas**2*
     + hardfac * ( 64*m1**4*m2**2 - 64*m1**6 )
      MM_gg_os = MM_gg_os + ANG_fin(6,8,-2,-2)*(h_r2+h_l2)*Cf*Pi**2*
     + alphas**2*hardfac * (  - 64*m1**4*m2**2 + 64*m1**6 )
      MM_gg_os = MM_gg_os + ANG_fin(6,8,-1,-2)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**2*alphas**2*hardfac * ( 64*m1**2*m2**2 - 16*m1**2*s - 64*
     +    m1**4 + 16*m2**2*s )
      MM_gg_os = MM_gg_os + ANG_fin(6,8,-1,-2)*(h_r2+h_l2)*Cf*Pi**2*
     + alphas**2*hardfac * (  - 64*m1**2*m2**2 + 16*m1**2*s + 128*m1**4
     +    *m2**2*s**(-1) + 64*m1**4 - 128*m1**6*s**(-1) - 16*m2**2*s )
      MM_gg_os = MM_gg_os + ANG_fin(6,8,1,-2)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**2*alphas**2*hardfac * (  - 64*m1**2*s**(-1) + 64*m2**2*
     +    s**(-1) )
      MM_gg_os = MM_gg_os + ANG_fin(6,8,2,-2)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**2*alphas**2*hardfac * (  - 64*m1**2*s**(-2) + 64*m2**2*
     +    s**(-2) )
      MM_gg_os = MM_gg_os + ANG_fin(7,8,-2,-2)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**2*alphas**2*hardfac * ( 64*m1**4*m2**2 - 64*m1**6 )
      MM_gg_os = MM_gg_os + ANG_fin(7,8,-2,-2)*(h_r2+h_l2)*Cf*Pi**2*
     + alphas**2*hardfac * (  - 64*m1**4*m2**2 + 64*m1**6 )
      MM_gg_os = MM_gg_os + ANG_fin(7,8,-1,-2)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**2*alphas**2*hardfac * ( 64*m1**2*m2**2 - 16*m1**2*s - 64*
     +    m1**4 + 16*m2**2*s )
      MM_gg_os = MM_gg_os + ANG_fin(7,8,-1,-2)*(h_r2+h_l2)*Cf*Pi**2*
     + alphas**2*hardfac * (  - 64*m1**2*m2**2 + 16*m1**2*s + 128*m1**4
     +    *m2**2*s**(-1) + 64*m1**4 - 128*m1**6*s**(-1) - 16*m2**2*s )
      MM_gg_os = MM_gg_os + ANG_fin(8,0,-2,0)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**2*alphas**2*hardfac * ( 128*m1**2*m2**2*s**(-1) - 64*m1**2
     +     - 128*m1**4*s**(-1) + 64*m2**2 )
      MM_gg_os = MM_gg_os + ANG_fin(8,0,-2,0)*(h_r2+h_l2)*Cf*Pi**2*
     + alphas**2*hardfac * ( 32*m1**2 - 32*m2**2 )


c               the phase space except for 1/s**2 
      HT_GGOS = MM_gg_os / ( 16.D0 * pi**2 )**2 / 2.D0 * s4/(s4+m1**2)

c               the averaging factors
      HT_GGOS = HT_GGOS /4.D0 /(Nc**2-1.D0)**2

c               the luminosity
      HT_GGOS = HT_GGOS *lumi(1)

      return
      end



c --------------------------------------------------------------------
      real*8 function HT_GGH(massin,h_l,h_r,lumi)

      implicit none 

      real*8     massin(1:30),lumi(1:3),Pi,Nc,Cf,h_l,h_r,h_l2,h_r2
     &          ,qf,log_qf,log_all,s,s4,s4j,m1,m2,m12,t2,u2,t2t,u2t
     &          ,hardfac,mjs2,alphas
     &          ,MM_crossed_4,ANG_fin(0:9,0:9,-2:2,-2:2)

      Pi = 4.D0*atan(1.D0)
      Nc = 3.D0 
      Cf = 4.D0/3.D0

      h_l2 = h_l**2
      h_r2 = h_r**2

      s   = massin(1)
      t2  = massin(2)
      s4  = massin(3)
      m1  = massin(6)
      m2  = massin(7)

c               real kinematics built in
      u2  = s4 - s - t2 - m2**2 + m1**2 

      m12 = m1**2
      t2t = t2 + m2**2 - m1**2 
      u2t = u2 + m2**2 - m1**2 
      s4j = s4 + m1**2 - m2**2

      hardfac = 1.D0
      mjs2 = m2**2 - m1**2

c               the angular functions 
      call ANGULAR_ARRAY_HT_GG(massin,ANG_fin)

c               the factorization/renormalization scale 
      qf = massin(13) 
      log_qf  = log(qf**2/m1**2)
      log_all = log_qf - log(s4/m1**2) + log(1.D0+m1**2/s4)

c               gs**2=4*pi*alpha_s is cut, re-appears as nlo later 
      alphas = 1.D0

      MM_crossed_4 = 0.D0
      
      MM_crossed_4 =
     +  + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*Pi**3*alphas**2*hardfac*
     + log_all * (  - 256*(s+t2)**(-2)*m1**2 + 256*(s+t2)**(-2)*m2**2
     +     - 256*(s+t2)**(-2)*s**(-1)*t2*u2 - 256*(s+t2)**(-2)*u2t - 
     +    128*(s+t2)**(-1)*(t2*u2-mjs2*s)**(-2)*m1**2*s*u2t**2 + 128*
     +    (s+t2)**(-1)*(t2*u2-mjs2*s)**(-2)*m2**2*s*u2t**2 + 384*
     +    (s+t2)**(-1)*(t2*u2-mjs2*s)**(-1)*m1**2*u2t - 384*
     +    (s+t2)**(-1)*(t2*u2-mjs2*s)**(-1)*m2**2*u2t - 128*
     +    (s+t2)**(-1)*(t2*u2-mjs2*s)**(-1)*u2*u2t + 512*(s+t2)**(-1)*
     +    m1**2*s**(-1) - 256*(s+t2)**(-1)*m1**2*u2t**(-1) - 512*
     +    (s+t2)**(-1)*m2**2*s**(-1) + 256*(s+t2)**(-1)*m2**2*u2t**(-1)
     +     - 256*(s+t2)**(-1)*s**(-1)*t2*u2*u2t**(-1) + 128*
     +    (s+t2)**(-1)*s**(-1)*u2 - 256*(s+t2)**(-1) - 256*(s+u2)**(-2)
     +    *m1**2 + 256*(s+u2)**(-2)*m2**2 - 256*(s+u2)**(-2)*s**(-1)*t2
     +    *u2 - 256*(s+u2)**(-2)*t2t - 128*(s+u2)**(-1)*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*s*t2t**2 + 128*(s+u2)**(-1)*
     +    (t2*u2-mjs2*s)**(-2)*m2**2*s*t2t**2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac*log_all * ( 384*(s+u2)**(-1)*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2t - 384*(s+u2)**(-1)*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2t - 128*(s+u2)**(-1)*
     +    (t2*u2-mjs2*s)**(-1)*t2*t2t + 512*(s+u2)**(-1)*m1**2*s**(-1)
     +     - 256*(s+u2)**(-1)*m1**2*t2t**(-1) - 512*(s+u2)**(-1)*m2**2*
     +    s**(-1) + 256*(s+u2)**(-1)*m2**2*t2t**(-1) - 256*(s+u2)**(-1)
     +    *s**(-1)*t2*u2*t2t**(-1) + 128*(s+u2)**(-1)*s**(-1)*t2 - 256*
     +    (s+u2)**(-1) + 256*(t2*u2-mjs2*s)**(-2)*m1**2*m2**2*s*t2*
     +    u2t**(-1) + 256*(t2*u2-mjs2*s)**(-2)*m1**2*m2**2*s*u2*
     +    t2t**(-1) + 512*(t2*u2-mjs2*s)**(-2)*m1**2*m2**2*s + 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*m2**2*s**2*u2t**(-1) + 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*m2**2*s**2*t2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*m2**2*t2 + 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*m2**2*t2**2*u2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*m2**2*u2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac*log_all * ( 128*(t2*u2-mjs2*s)**(-2)*
     +    m1**2*m2**2*u2**2*t2t**(-1) + 256*(t2*u2-mjs2*s)**(-2)*m1**2*
     +    m2**2*u2t + 256*(t2*u2-mjs2*s)**(-2)*m1**2*m2**2*t2t + 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*s*t2*u2*u2t**(-1) + 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*s*t2*u2*t2t**(-1) + 64*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*s*t2 + 64*(t2*u2-mjs2*s)**(-2)*
     +    m1**2*s*u2 - 128*(t2*u2-mjs2*s)**(-2)*m1**2*s*u2t - 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*s*t2t + 64*(t2*u2-mjs2*s)**(-2)*
     +    m1**2*s**2*t2*t2t**(-1) + 64*(t2*u2-mjs2*s)**(-2)*m1**2*s**2*
     +    u2*u2t**(-1) - 128*(t2*u2-mjs2*s)**(-2)*m1**2*s**2 + 256*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*t2*u2 + 64*(t2*u2-mjs2*s)**(-2)*
     +    m1**2*t2*u2**2*t2t**(-1) + 128*(t2*u2-mjs2*s)**(-2)*m1**2*t2*
     +    t2t + 64*(t2*u2-mjs2*s)**(-2)*m1**2*t2**2*u2*u2t**(-1) + 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*u2*u2t - 256*(t2*u2-mjs2*s)**(-2)*
     +    m1**4*s*t2*u2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac*log_all * (  - 256*(t2*u2-mjs2*s)**(-2)*
     +    m1**4*s*u2*t2t**(-1) - 512*(t2*u2-mjs2*s)**(-2)*m1**4*s - 128
     +    *(t2*u2-mjs2*s)**(-2)*m1**4*s**2*u2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**4*s**2*t2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-2)*m1**4*t2 - 128*(t2*u2-mjs2*s)**(-2)*
     +    m1**4*t2**2*u2t**(-1) - 256*(t2*u2-mjs2*s)**(-2)*m1**4*u2 - 
     +    128*(t2*u2-mjs2*s)**(-2)*m1**4*u2**2*t2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-2)*m1**4*u2t - 256*(t2*u2-mjs2*s)**(-2)*
     +    m1**4*t2t - 128*(t2*u2-mjs2*s)**(-2)*m2**2*s*t2*u2*u2t**(-1)
     +     - 128*(t2*u2-mjs2*s)**(-2)*m2**2*s*t2*u2*t2t**(-1) - 64*
     +    (t2*u2-mjs2*s)**(-2)*m2**2*s*t2 - 64*(t2*u2-mjs2*s)**(-2)*
     +    m2**2*s*u2 + 128*(t2*u2-mjs2*s)**(-2)*m2**2*s*u2t + 128*
     +    (t2*u2-mjs2*s)**(-2)*m2**2*s*t2t - 64*(t2*u2-mjs2*s)**(-2)*
     +    m2**2*s**2*t2*t2t**(-1) - 64*(t2*u2-mjs2*s)**(-2)*m2**2*s**2*
     +    u2*u2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac*log_all * ( 128*(t2*u2-mjs2*s)**(-2)*
     +    m2**2*s**2 - 256*(t2*u2-mjs2*s)**(-2)*m2**2*t2*u2 - 64*
     +    (t2*u2-mjs2*s)**(-2)*m2**2*t2*u2**2*t2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-2)*m2**2*t2*t2t - 64*(t2*u2-mjs2*s)**(-2)*
     +    m2**2*t2**2*u2*u2t**(-1) - 128*(t2*u2-mjs2*s)**(-2)*m2**2*u2*
     +    u2t + 512*(t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s**(-1)*t2*
     +    u2t**(-1) + 256*(t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s**(-1)*
     +    t2**2*u2t**(-2) + 512*(t2*u2-mjs2*s)**(-1)*m1**2*m2**2*
     +    s**(-1)*u2*t2t**(-1) + 256*(t2*u2-mjs2*s)**(-1)*m1**2*m2**2*
     +    s**(-1)*u2**2*t2t**(-2) + 1024*(t2*u2-mjs2*s)**(-1)*m1**2*
     +    m2**2*s**(-1) + 256*(t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s*
     +    u2t**(-2) + 256*(t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s*t2t**(-2)
     +     + 512*(t2*u2-mjs2*s)**(-1)*m1**2*m2**2*t2*u2t**(-2) + 512*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*u2*t2t**(-2) + 512*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*u2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac*log_all * ( 512*(t2*u2-mjs2*s)**(-1)*
     +    m1**2*m2**2*t2t**(-1) - 256*(t2*u2-mjs2*s)**(-1)*m1**2*
     +    s**(-1)*t2*u2*u2t**(-1) - 256*(t2*u2-mjs2*s)**(-1)*m1**2*
     +    s**(-1)*t2*u2*t2t**(-1) - 128*(t2*u2-mjs2*s)**(-1)*m1**2*
     +    s**(-1)*t2*u2**2*t2t**(-2) - 256*(t2*u2-mjs2*s)**(-1)*m1**2*
     +    s**(-1)*t2 - 128*(t2*u2-mjs2*s)**(-1)*m1**2*s**(-1)*t2**2*u2*
     +    u2t**(-2) - 256*(t2*u2-mjs2*s)**(-1)*m1**2*s**(-1)*u2 - 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s*t2*t2t**(-2) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s*u2*u2t**(-2) + 192*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s*u2t**(-1) + 192*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s*t2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2*u2*u2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2*u2*t2t**(-2) + 192*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2*u2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2*t2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac*log_all * (  - 256*(t2*u2-mjs2*s)**(-1)*
     +    m1**2*u2*u2t**(-1) + 192*(t2*u2-mjs2*s)**(-1)*m1**2*u2*
     +    t2t**(-1) + 768*(t2*u2-mjs2*s)**(-1)*m1**2 - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*s**(-1)*t2*u2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*s**(-1)*t2**2*u2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*s**(-1)*u2*t2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*s**(-1)*u2**2*t2t**(-2) - 512*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*s**(-1) - 128*(t2*u2-mjs2*s)**(-1)
     +    *m1**4*s*u2t**(-2) - 128*(t2*u2-mjs2*s)**(-1)*m1**4*s*
     +    t2t**(-2) - 256*(t2*u2-mjs2*s)**(-1)*m1**4*t2*u2t**(-2) - 256
     +    *(t2*u2-mjs2*s)**(-1)*m1**4*u2*t2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*u2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*t2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s**(-1)*t2*u2*u2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s**(-1)*t2*u2*t2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac*log_all * ( 128*(t2*u2-mjs2*s)**(-1)*
     +    m2**2*s**(-1)*t2*u2**2*t2t**(-2) + 256*(t2*u2-mjs2*s)**(-1)*
     +    m2**2*s**(-1)*t2 + 128*(t2*u2-mjs2*s)**(-1)*m2**2*s**(-1)*
     +    t2**2*u2*u2t**(-2) + 256*(t2*u2-mjs2*s)**(-1)*m2**2*s**(-1)*
     +    u2 + 128*(t2*u2-mjs2*s)**(-1)*m2**2*s*t2*t2t**(-2) + 128*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s*u2*u2t**(-2) - 192*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s*u2t**(-1) - 192*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s*t2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2*u2*u2t**(-2) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2*u2*t2t**(-2) - 192*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2*u2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2*t2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*u2*u2t**(-1) - 192*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*u2*t2t**(-1) - 768*
     +    (t2*u2-mjs2*s)**(-1)*m2**2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac*log_all * (  - 256*(t2*u2-mjs2*s)**(-1)*
     +    m2**4*s**(-1)*t2*u2t**(-1) - 128*(t2*u2-mjs2*s)**(-1)*m2**4*
     +    s**(-1)*t2**2*u2t**(-2) - 256*(t2*u2-mjs2*s)**(-1)*m2**4*
     +    s**(-1)*u2*t2t**(-1) - 128*(t2*u2-mjs2*s)**(-1)*m2**4*s**(-1)
     +    *u2**2*t2t**(-2) - 512*(t2*u2-mjs2*s)**(-1)*m2**4*s**(-1) - 
     +    128*(t2*u2-mjs2*s)**(-1)*m2**4*s*u2t**(-2) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*s*t2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*t2*u2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*u2*t2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*u2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*t2t**(-1) - 64*
     +    (t2*u2-mjs2*s)**(-1)*s*t2*t2t**(-1) - 64*(t2*u2-mjs2*s)**(-1)
     +    *s*u2*u2t**(-1) - 64*(t2*u2-mjs2*s)**(-1)*t2*u2*u2t**(-1) - 
     +    64*(t2*u2-mjs2*s)**(-1)*t2*u2*t2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*t2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac*log_all * (  - 128*(t2*u2-mjs2*s)**(-1)*
     +    u2 + 256*m1**2*s**(-1)*t2*u2t**(-2) + 256*m1**2*s**(-1)*u2*
     +    t2t**(-2) + 512*m1**2*s**(-1)*u2t**(-1) + 512*m1**2*s**(-1)*
     +    t2t**(-1) + 128*m1**2*u2t**(-2) + 128*m1**2*t2t**(-2) - 256*
     +    m2**2*s**(-1)*t2*u2t**(-2) - 256*m2**2*s**(-1)*u2*t2t**(-2)
     +     - 512*m2**2*s**(-1)*u2t**(-1) - 512*m2**2*s**(-1)*t2t**(-1)
     +     - 128*m2**2*u2t**(-2) - 128*m2**2*t2t**(-2) - 64*s**(-1)*t2*
     +    u2*u2t**(-2) - 64*s**(-1)*t2*u2*t2t**(-2) + 128*s**(-1)*t2*
     +    t2t**(-1) + 128*s**(-1)*u2*u2t**(-1) + 64*t2*t2t**(-2) + 64*
     +    u2*u2t**(-2) - 128*u2t**(-1) - 128*t2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac * (  - 256*(s+t2)**(-2)*m1**2 + 256*
     +    (s+t2)**(-2)*m2**2 - 256*(s+t2)**(-2)*s**(-1)*t2*u2 - 256*
     +    (s+t2)**(-2)*u2t - 256*(s+t2)**(-1)*(t2*u2-mjs2*s)**(-2)*
     +    m1**2*s*u2t**2 + 256*(s+t2)**(-1)*(t2*u2-mjs2*s)**(-2)*m2**2*
     +    s*u2t**2 + 256*(s+t2)**(-1)*(t2*u2-mjs2*s)**(-1)*m1**2*u2t - 
     +    256*(s+t2)**(-1)*(t2*u2-mjs2*s)**(-1)*m2**2*u2t - 256*
     +    (s+t2)**(-1)*(t2*u2-mjs2*s)**(-1)*u2*u2t + 512*(s+t2)**(-1)*
     +    m1**2*s**(-1) - 256*(s+t2)**(-1)*m1**2*u2t**(-1) - 512*
     +    (s+t2)**(-1)*m2**2*s**(-1) + 256*(s+t2)**(-1)*m2**2*u2t**(-1)
     +     - 256*(s+t2)**(-1)*s**(-1)*t2*u2*u2t**(-1) - 256*
     +    (s+t2)**(-1) - 256*(s+u2)**(-2)*m1**2 + 256*(s+u2)**(-2)*
     +    m2**2 - 256*(s+u2)**(-2)*s**(-1)*t2*u2 - 256*(s+u2)**(-2)*t2t
     +     - 256*(s+u2)**(-1)*(t2*u2-mjs2*s)**(-2)*m1**2*s*t2t**2 + 256
     +    *(s+u2)**(-1)*(t2*u2-mjs2*s)**(-2)*m2**2*s*t2t**2 + 256*
     +    (s+u2)**(-1)*(t2*u2-mjs2*s)**(-1)*m1**2*t2t )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac * (  - 256*(s+u2)**(-1)*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2t - 256*(s+u2)**(-1)*
     +    (t2*u2-mjs2*s)**(-1)*t2*t2t + 512*(s+u2)**(-1)*m1**2*s**(-1)
     +     - 256*(s+u2)**(-1)*m1**2*t2t**(-1) - 512*(s+u2)**(-1)*m2**2*
     +    s**(-1) + 256*(s+u2)**(-1)*m2**2*t2t**(-1) - 256*(s+u2)**(-1)
     +    *s**(-1)*t2*u2*t2t**(-1) - 256*(s+u2)**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*m2**2*s*t2*u2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*m2**2*s*u2*t2t**(-1) + 512*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*m2**2*s + 128*(t2*u2-mjs2*s)**(-2)
     +    *m1**2*m2**2*s**2*u2t**(-1) + 128*(t2*u2-mjs2*s)**(-2)*m1**2*
     +    m2**2*s**2*t2t**(-1) + 256*(t2*u2-mjs2*s)**(-2)*m1**2*m2**2*
     +    t2 + 128*(t2*u2-mjs2*s)**(-2)*m1**2*m2**2*t2**2*u2t**(-1) + 
     +    256*(t2*u2-mjs2*s)**(-2)*m1**2*m2**2*u2 + 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*m2**2*u2**2*t2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*m2**2*u2t )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac * ( 256*(t2*u2-mjs2*s)**(-2)*m1**2*m2**2
     +    *t2t + 256*(t2*u2-mjs2*s)**(-2)*m1**2*s*t2*u2*u2t**(-1) + 256
     +    *(t2*u2-mjs2*s)**(-2)*m1**2*s*t2*u2*t2t**(-1) + 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*s*t2 + 128*(t2*u2-mjs2*s)**(-2)*
     +    m1**2*s*u2 - 256*(t2*u2-mjs2*s)**(-2)*m1**2*s*u2t - 256*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*s*t2t + 128*(t2*u2-mjs2*s)**(-2)*
     +    m1**2*s**2*t2*t2t**(-1) + 128*(t2*u2-mjs2*s)**(-2)*m1**2*s**2
     +    *u2*u2t**(-1) - 256*(t2*u2-mjs2*s)**(-2)*m1**2*s**2 + 512*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*t2*u2 + 128*(t2*u2-mjs2*s)**(-2)*
     +    m1**2*t2*u2**2*t2t**(-1) + 256*(t2*u2-mjs2*s)**(-2)*m1**2*t2*
     +    t2t + 128*(t2*u2-mjs2*s)**(-2)*m1**2*t2**2*u2*u2t**(-1) + 256
     +    *(t2*u2-mjs2*s)**(-2)*m1**2*u2*u2t - 256*(t2*u2-mjs2*s)**(-2)
     +    *m1**4*s*t2*u2t**(-1) - 256*(t2*u2-mjs2*s)**(-2)*m1**4*s*u2*
     +    t2t**(-1) - 512*(t2*u2-mjs2*s)**(-2)*m1**4*s - 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**4*s**2*u2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac * (  - 128*(t2*u2-mjs2*s)**(-2)*m1**4*
     +    s**2*t2t**(-1) - 256*(t2*u2-mjs2*s)**(-2)*m1**4*t2 - 128*
     +    (t2*u2-mjs2*s)**(-2)*m1**4*t2**2*u2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-2)*m1**4*u2 - 128*(t2*u2-mjs2*s)**(-2)*
     +    m1**4*u2**2*t2t**(-1) - 256*(t2*u2-mjs2*s)**(-2)*m1**4*u2t - 
     +    256*(t2*u2-mjs2*s)**(-2)*m1**4*t2t - 256*(t2*u2-mjs2*s)**(-2)
     +    *m2**2*s*t2*u2*u2t**(-1) - 256*(t2*u2-mjs2*s)**(-2)*m2**2*s*
     +    t2*u2*t2t**(-1) - 128*(t2*u2-mjs2*s)**(-2)*m2**2*s*t2 - 128*
     +    (t2*u2-mjs2*s)**(-2)*m2**2*s*u2 + 256*(t2*u2-mjs2*s)**(-2)*
     +    m2**2*s*u2t + 256*(t2*u2-mjs2*s)**(-2)*m2**2*s*t2t - 128*
     +    (t2*u2-mjs2*s)**(-2)*m2**2*s**2*t2*t2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-2)*m2**2*s**2*u2*u2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-2)*m2**2*s**2 - 512*(t2*u2-mjs2*s)**(-2)*
     +    m2**2*t2*u2 - 128*(t2*u2-mjs2*s)**(-2)*m2**2*t2*u2**2*
     +    t2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac * (  - 256*(t2*u2-mjs2*s)**(-2)*m2**2*t2
     +    *t2t - 128*(t2*u2-mjs2*s)**(-2)*m2**2*t2**2*u2*u2t**(-1) - 
     +    256*(t2*u2-mjs2*s)**(-2)*m2**2*u2*u2t + 512*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s**(-1)*t2*u2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s**(-1)*t2**2*u2t**(-2) + 
     +    512*(t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s**(-1)*u2*t2t**(-1) + 
     +    256*(t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s**(-1)*u2**2*t2t**(-2)
     +     + 1024*(t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s*u2t**(-2) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s*t2t**(-2) + 512*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*t2*u2t**(-2) + 512*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*u2*t2t**(-2) + 512*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*u2t**(-1) + 512*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*t2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s**(-1)*t2*u2*u2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac * (  - 256*(t2*u2-mjs2*s)**(-1)*m1**2*
     +    s**(-1)*t2*u2*t2t**(-1) - 128*(t2*u2-mjs2*s)**(-1)*m1**2*
     +    s**(-1)*t2*u2**2*t2t**(-2) - 256*(t2*u2-mjs2*s)**(-1)*m1**2*
     +    s**(-1)*t2 - 128*(t2*u2-mjs2*s)**(-1)*m1**2*s**(-1)*t2**2*u2*
     +    u2t**(-2) - 256*(t2*u2-mjs2*s)**(-1)*m1**2*s**(-1)*u2 - 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s*t2*t2t**(-2) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s*u2*u2t**(-2) + 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s*u2t**(-1) + 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s*t2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2*u2*u2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2*u2*t2t**(-2) + 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2*u2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2*t2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*u2*u2t**(-1) + 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*u2*t2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac * ( 512*(t2*u2-mjs2*s)**(-1)*m1**2 - 256
     +    *(t2*u2-mjs2*s)**(-1)*m1**4*s**(-1)*t2*u2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*s**(-1)*t2**2*u2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*s**(-1)*u2*t2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*s**(-1)*u2**2*t2t**(-2) - 512*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*s**(-1) - 128*(t2*u2-mjs2*s)**(-1)
     +    *m1**4*s*u2t**(-2) - 128*(t2*u2-mjs2*s)**(-1)*m1**4*s*
     +    t2t**(-2) - 256*(t2*u2-mjs2*s)**(-1)*m1**4*t2*u2t**(-2) - 256
     +    *(t2*u2-mjs2*s)**(-1)*m1**4*u2*t2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*u2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*t2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s**(-1)*t2*u2*u2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s**(-1)*t2*u2*t2t**(-1) + 128*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s**(-1)*t2*u2**2*t2t**(-2) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s**(-1)*t2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac * ( 128*(t2*u2-mjs2*s)**(-1)*m2**2*
     +    s**(-1)*t2**2*u2*u2t**(-2) + 256*(t2*u2-mjs2*s)**(-1)*m2**2*
     +    s**(-1)*u2 + 128*(t2*u2-mjs2*s)**(-1)*m2**2*s*t2*t2t**(-2) + 
     +    128*(t2*u2-mjs2*s)**(-1)*m2**2*s*u2*u2t**(-2) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s*u2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s*t2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2*u2*u2t**(-2) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2*u2*t2t**(-2) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2*u2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2*t2t**(-1) + 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*u2*u2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*u2*t2t**(-1) - 512*
     +    (t2*u2-mjs2*s)**(-1)*m2**2 - 256*(t2*u2-mjs2*s)**(-1)*m2**4*
     +    s**(-1)*t2*u2t**(-1) - 128*(t2*u2-mjs2*s)**(-1)*m2**4*s**(-1)
     +    *t2**2*u2t**(-2) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac * (  - 256*(t2*u2-mjs2*s)**(-1)*m2**4*
     +    s**(-1)*u2*t2t**(-1) - 128*(t2*u2-mjs2*s)**(-1)*m2**4*s**(-1)
     +    *u2**2*t2t**(-2) - 512*(t2*u2-mjs2*s)**(-1)*m2**4*s**(-1) - 
     +    128*(t2*u2-mjs2*s)**(-1)*m2**4*s*u2t**(-2) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*s*t2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*t2*u2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*u2*t2t**(-2) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*u2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*t2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*s*t2*t2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*s*u2*u2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*t2*u2*u2t**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*t2*u2*t2t**(-1) - 256*
     +    (t2*u2-mjs2*s)**(-1)*t2 - 256*(t2*u2-mjs2*s)**(-1)*u2 + 256*
     +    m1**2*s**(-1)*t2*u2t**(-2) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc*Cf**2*
     + Pi**3*alphas**2*hardfac * ( 256*m1**2*s**(-1)*u2*t2t**(-2) + 512
     +    *m1**2*s**(-1)*u2t**(-1) + 512*m1**2*s**(-1)*t2t**(-1) + 128*
     +    m1**2*u2t**(-2) + 128*m1**2*t2t**(-2) - 256*m2**2*s**(-1)*t2*
     +    u2t**(-2) - 256*m2**2*s**(-1)*u2*t2t**(-2) - 512*m2**2*
     +    s**(-1)*u2t**(-1) - 512*m2**2*s**(-1)*t2t**(-1) - 128*m2**2*
     +    u2t**(-2) - 128*m2**2*t2t**(-2) - 128*s**(-1)*t2*u2*u2t**(-2)
     +     - 128*s**(-1)*t2*u2*t2t**(-2) - 128*u2t**(-1) - 128*
     +    t2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * ( 128*(s+t2)**(-2)*(t2+u2)**(-1)*m1**2
     +    *m2**2 - 64*(s+t2)**(-2)*(t2+u2)**(-1)*m1**2*s**(-1)*t2*u2 + 
     +    64*(s+t2)**(-2)*(t2+u2)**(-1)*m1**2*s - 64*(s+t2)**(-2)*
     +    (t2+u2)**(-1)*m1**2*t2 - 64*(s+t2)**(-2)*(t2+u2)**(-1)*m1**2*
     +    u2 - 64*(s+t2)**(-2)*(t2+u2)**(-1)*m1**2*s4 - 64*(s+t2)**(-2)
     +    *(t2+u2)**(-1)*m1**4 + 64*(s+t2)**(-2)*(t2+u2)**(-1)*m2**2*
     +    s**(-1)*t2*u2 - 64*(s+t2)**(-2)*(t2+u2)**(-1)*m2**2*s + 64*
     +    (s+t2)**(-2)*(t2+u2)**(-1)*m2**2*t2 + 64*(s+t2)**(-2)*
     +    (t2+u2)**(-1)*m2**2*u2 + 64*(s+t2)**(-2)*(t2+u2)**(-1)*m2**2*
     +    s4 - 64*(s+t2)**(-2)*(t2+u2)**(-1)*m2**4 - 64*(s+t2)**(-2)*
     +    (t2+u2)**(-1)*s**(-1)*t2*u2*s4 - 64*(s+t2)**(-2)*
     +    (t2+u2)**(-1)*s**(-1)*t2*u2**2 - 64*(s+t2)**(-2)*
     +    (t2+u2)**(-1)*s**(-1)*t2**2*u2 + 64*(s+t2)**(-2)*
     +    (t2+u2)**(-1)*t2*u2 + 128*(s+t2)**(-2)*m1**2 - 128*
     +    (s+t2)**(-2)*m2**2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * ( 128*(s+t2)**(-2)*s**(-1)*t2*u2 - 256
     +    *(s+t2)**(-1)*(t2+u2)**(-1)*m1**2*m2**2*s**(-1) - 40*
     +    (s+t2)**(-1)*(t2+u2)**(-1)*m1**2*s**(-1)*t2 - 64*(s+t2)**(-1)
     +    *(t2+u2)**(-1)*m1**2*s**(-1)*u2 + 256*(s+t2)**(-1)*
     +    (t2+u2)**(-1)*m1**2*s**(-1)*s4 - 104*(s+t2)**(-1)*
     +    (t2+u2)**(-1)*m1**2 + 128*(s+t2)**(-1)*(t2+u2)**(-1)*m1**4*
     +    s**(-1) + 40*(s+t2)**(-1)*(t2+u2)**(-1)*m2**2*s**(-1)*t2 + 64
     +    *(s+t2)**(-1)*(t2+u2)**(-1)*m2**2*s**(-1)*u2 - 256*
     +    (s+t2)**(-1)*(t2+u2)**(-1)*m2**2*s**(-1)*s4 + 104*
     +    (s+t2)**(-1)*(t2+u2)**(-1)*m2**2 + 128*(s+t2)**(-1)*
     +    (t2+u2)**(-1)*m2**4*s**(-1) - 40*(s+t2)**(-1)*(t2+u2)**(-1)*
     +    s**(-1)*t2*s4 - 64*(s+t2)**(-1)*(t2+u2)**(-1)*s**(-1)*u2*s4
     +     + 128*(s+t2)**(-1)*(t2+u2)**(-1)*s**(-1)*s4**2 - 24*
     +    (s+t2)**(-1)*(t2+u2)**(-1)*s + 40*(s+t2)**(-1)*(t2+u2)**(-1)*
     +    t2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * ( 64*(s+t2)**(-1)*(t2+u2)**(-1)*u2 - 
     +    104*(s+t2)**(-1)*(t2+u2)**(-1)*s4 - 48*(s+t2)**(-1)*m1**2*
     +    s**(-1)*t2*u2**(-1) - 128*(s+t2)**(-1)*m1**2*s**(-1) - 48*
     +    (s+t2)**(-1)*m1**2*u2**(-1) + 48*(s+t2)**(-1)*m2**2*s**(-1)*
     +    t2*u2**(-1) + 128*(s+t2)**(-1)*m2**2*s**(-1) + 48*
     +    (s+t2)**(-1)*m2**2*u2**(-1) - 48*(s+t2)**(-1)*s**(-1)*t2*
     +    u2**(-1)*s4 + 88*(s+t2)**(-1)*s**(-1)*t2 + 48*(s+t2)**(-1)*
     +    s**(-1)*t2**2*u2**(-1) + 64*(s+t2)**(-1)*s**(-1)*u2 - 128*
     +    (s+t2)**(-1)*s**(-1)*s4 + 48*(s+t2)**(-1)*s*u2**(-1) + 96*
     +    (s+t2)**(-1)*t2*u2**(-1) - 48*(s+t2)**(-1)*u2**(-1)*s4 + 24*
     +    (s+t2)**(-1) + 64*(s+u2)**(-1)*(t2+u2)**(-1)*m1**2*s**(-1)*t2
     +     + 64*(s+u2)**(-1)*(t2+u2)**(-1)*m1**2*s**(-1)*u2 - 64*
     +    (s+u2)**(-1)*(t2+u2)**(-1)*m2**2*s**(-1)*t2 - 64*(s+u2)**(-1)
     +    *(t2+u2)**(-1)*m2**2*s**(-1)*u2 + 24*(s+u2)**(-1)*
     +    (t2+u2)**(-1)*s**(-1)*t2*u2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * ( 64*(s+u2)**(-1)*(t2+u2)**(-1)*
     +    s**(-1)*t2*s4 + 64*(s+u2)**(-1)*(t2+u2)**(-1)*s**(-1)*u2*s4
     +     + 24*(s+u2)**(-1)*(t2+u2)**(-1)*s**(-1)*u2**2 + 88*
     +    (s+u2)**(-1)*(t2+u2)**(-1)*t2 + 88*(s+u2)**(-1)*(t2+u2)**(-1)
     +    *u2 - 64*(s+u2)**(-1)*m1**2*s**(-1) + 64*(s+u2)**(-1)*m2**2*
     +    s**(-1) - 24*(s+u2)**(-1)*s**(-1)*u2 - 64*(s+u2)**(-1)*
     +    s**(-1)*s4 - 88*(s+u2)**(-1) + 80*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2*m2**2*s**(-1)*t2 + 80*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**2*m2**2 - 80*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**2*s**(-1)*t2*s4 + 32*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**2*s**(-1)*t2**2 + 40*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**2*s + 72*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**2*t2 - 40*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**2*s4 - 40*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**4*s**(-1)*t2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * (  - 40*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*m1**4 + 80*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*m2**2*s**(-1)*t2*s4 - 32*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*m2**2*s**(-1)*t2**2 - 40*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*m2**2*s - 72*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*m2**2*t2 + 40*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*m2**2*s4 - 40*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*m2**4*s**(-1)*t2 - 40*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*m2**4 - 40*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*s**(-1)*t2*s4**2 + 32*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*s**(-1)*t2**2*s4 + 40*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*t2*s4 - 48*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*s**(-1)*t2*u2**2 - 40*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*s**(-1)*t2**2*u2 - 8*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*s**(-1)*u2**3 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * (  - 40*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*s*t2 - 8*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*s*u2 - 88*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*t2*u2 + 40*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*t2*s4 - 40*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*t2**2 + 8*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*u2*s4 - 16*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*u2**2 - 64*(t2+u2)**(-1)*m1**2*s**(-1)
     +     + 64*(t2+u2)**(-1)*m2**2*s**(-1) - 16*(t2+u2)**(-1)*s**(-1)*
     +    t2*u2*u2t**(-1) - 16*(t2+u2)**(-1)*s**(-1)*t2*u2*t2t**(-1) - 
     +    16*(t2+u2)**(-1)*s**(-1)*t2*s4*u2t**(-1) + 16*(t2+u2)**(-1)*
     +    s**(-1)*t2*s4*t2t**(-1) + 16*(t2+u2)**(-1)*s**(-1)*t2**2*
     +    u2t**(-1) + 16*(t2+u2)**(-1)*s**(-1)*u2*s4*u2t**(-1) - 16*
     +    (t2+u2)**(-1)*s**(-1)*u2*s4*t2t**(-1) + 16*(t2+u2)**(-1)*
     +    s**(-1)*u2**2*t2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * (  - 64*(t2+u2)**(-1)*s**(-1)*s4 + 16*
     +    (t2+u2)**(-1)*t2*u2t**(-1) - 16*(t2+u2)**(-1)*t2*t2t**(-1) - 
     +    16*(t2+u2)**(-1)*u2*u2t**(-1) + 16*(t2+u2)**(-1)*u2*t2t**(-1)
     +     + 64*(t2+u2)**(-1) - 64*(t2*u2-mjs2*s)**(-2)*m1**2*s*t2 - 64
     +    *(t2*u2-mjs2*s)**(-2)*m1**2*s*u2 - 64*(t2*u2-mjs2*s)**(-2)*
     +    m1**2*t2**2 - 64*(t2*u2-mjs2*s)**(-2)*m1**2*u2**2 - 96*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s**(-1)*t2*u2**(-1) - 64*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*s**(-1) + 64*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*t2**(-1) - 96*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*m2**2*u2**(-1) + 96*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s**(-1)*t2*u2**(-1)*s4 - 16*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s**(-1)*t2 - 64*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s**(-1)*t2**2*u2**(-1) + 64*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s**(-1)*s4 + 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s*t2**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * ( 48*(t2*u2-mjs2*s)**(-1)*m1**2*s*
     +    u2**(-1) - 32*(t2*u2-mjs2*s)**(-1)*m1**2*t2**(-1)*s4 - 80*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2*u2**(-1) + 48*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*u2**(-1)*s4 + 112*
     +    (t2*u2-mjs2*s)**(-1)*m1**2 + 48*(t2*u2-mjs2*s)**(-1)*m1**4*
     +    s**(-1)*t2*u2**(-1) + 32*(t2*u2-mjs2*s)**(-1)*m1**4*s**(-1)
     +     - 32*(t2*u2-mjs2*s)**(-1)*m1**4*t2**(-1) + 48*
     +    (t2*u2-mjs2*s)**(-1)*m1**4*u2**(-1) - 96*(t2*u2-mjs2*s)**(-1)
     +    *m2**2*s**(-1)*t2*u2**(-1)*s4 + 16*(t2*u2-mjs2*s)**(-1)*m2**2
     +    *s**(-1)*t2 + 64*(t2*u2-mjs2*s)**(-1)*m2**2*s**(-1)*t2**2*
     +    u2**(-1) - 64*(t2*u2-mjs2*s)**(-1)*m2**2*s**(-1)*s4 - 64*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s*t2**(-1) + 16*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s*u2**(-1) + 32*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2**(-1)*s4 + 80*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * (  - 48*(t2*u2-mjs2*s)**(-1)*m2**2*
     +    u2**(-1)*s4 - 112*(t2*u2-mjs2*s)**(-1)*m2**2 + 48*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*s**(-1)*t2*u2**(-1) + 32*
     +    (t2*u2-mjs2*s)**(-1)*m2**4*s**(-1) - 32*(t2*u2-mjs2*s)**(-1)*
     +    m2**4*t2**(-1) + 48*(t2*u2-mjs2*s)**(-1)*m2**4*u2**(-1) + 48*
     +    (t2*u2-mjs2*s)**(-1)*s**(-1)*t2*u2**(-1)*s4**2 + 96*
     +    (t2*u2-mjs2*s)**(-1)*s**(-1)*t2*u2 - 16*(t2*u2-mjs2*s)**(-1)*
     +    s**(-1)*t2*s4 - 64*(t2*u2-mjs2*s)**(-1)*s**(-1)*t2**2*
     +    u2**(-1)*s4 + 16*(t2*u2-mjs2*s)**(-1)*s**(-1)*t2**2 + 16*
     +    (t2*u2-mjs2*s)**(-1)*s**(-1)*t2**3*u2**(-1) + 32*
     +    (t2*u2-mjs2*s)**(-1)*s**(-1)*u2**2 + 32*(t2*u2-mjs2*s)**(-1)*
     +    s**(-1)*s4**2 - 32*(t2*u2-mjs2*s)**(-1)*s*t2**(-1)*s4 - 48*
     +    (t2*u2-mjs2*s)**(-1)*s*t2*u2**(-1) - 32*(t2*u2-mjs2*s)**(-1)*
     +    s*u2**(-1)*s4 + 224*(t2*u2-mjs2*s)**(-1)*s + 32*
     +    (t2*u2-mjs2*s)**(-1)*s**2*t2**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * ( 32*(t2*u2-mjs2*s)**(-1)*s**2*
     +    u2**(-1) + 32*(t2*u2-mjs2*s)**(-1)*t2**(-1)*u2*s4 - 32*
     +    (t2*u2-mjs2*s)**(-1)*t2**(-1)*u2**2 + 32*(t2*u2-mjs2*s)**(-1)
     +    *t2*u2**(-1)*s4 + 80*(t2*u2-mjs2*s)**(-1)*t2 - 64*
     +    (t2*u2-mjs2*s)**(-1)*t2**2*u2**(-1) + 160*
     +    (t2*u2-mjs2*s)**(-1)*u2 - 64*(t2*u2-mjs2*s)**(-1)*s4 - 64*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2*m2**2*s**(-1) - 64*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2*m2**2*t2**(-1) - 56*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2*s**(-1)*t2 + 64*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2*s**(-1)*s4 - 64*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2*s*t2**(-1) + 32*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2*t2**(-1)*s4 - 120*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2 + 32*(t2*s4j-mjs2*s)**(-1)*m1**4*
     +    s**(-1) + 32*(t2*s4j-mjs2*s)**(-1)*m1**4*t2**(-1) + 56*
     +    (t2*s4j-mjs2*s)**(-1)*m2**2*s**(-1)*t2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * (  - 64*(t2*s4j-mjs2*s)**(-1)*m2**2*
     +    s**(-1)*s4 + 64*(t2*s4j-mjs2*s)**(-1)*m2**2*s*t2**(-1) - 32*
     +    (t2*s4j-mjs2*s)**(-1)*m2**2*t2**(-1)*s4 + 120*
     +    (t2*s4j-mjs2*s)**(-1)*m2**2 + 32*(t2*s4j-mjs2*s)**(-1)*m2**4*
     +    s**(-1) + 32*(t2*s4j-mjs2*s)**(-1)*m2**4*t2**(-1) - 56*
     +    (t2*s4j-mjs2*s)**(-1)*s**(-1)*t2*s4 + 32*
     +    (t2*s4j-mjs2*s)**(-1)*s**(-1)*s4**2 - 64*
     +    (t2*s4j-mjs2*s)**(-1)*s4 + 8*(u2*s4j-mjs2*s)**(-1)*s**(-1)*t2
     +    *u2 + 32*(u2*s4j-mjs2*s)**(-1)*s**(-1)*t2**2 - 24*
     +    (u2*s4j-mjs2*s)**(-1)*s**(-1)*u2**2 + 32*
     +    (u2*s4j-mjs2*s)**(-1)*s*u2**(-1)*s4 - 88*
     +    (u2*s4j-mjs2*s)**(-1)*s - 32*(u2*s4j-mjs2*s)**(-1)*s**2*
     +    u2**(-1) - 32*(u2*s4j-mjs2*s)**(-1)*t2*u2**(-1)*s4 + 8*
     +    (u2*s4j-mjs2*s)**(-1)*t2 + 32*(u2*s4j-mjs2*s)**(-1)*t2**2*
     +    u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * (  - 80*(u2*s4j-mjs2*s)**(-1)*u2 + 24*
     +    (u2*s4j-mjs2*s)**(-1)*s4 + 64*m1**2*t2**(-1)*t2t**(-1) + 64*
     +    m1**2*u2**(-1)*u2t**(-1) + 32*s**(-1)*t2**(-1)*u2*s4*
     +    t2t**(-1) - 32*s**(-1)*t2**(-1)*u2**2*t2t**(-1) + 32*s**(-1)*
     +    t2*u2**(-1)*s4*u2t**(-1) + 64*s**(-1)*t2*u2*u2t**(-2) + 64*
     +    s**(-1)*t2*u2*t2t**(-2) - 64*s**(-1)*t2*s4*u2t**(-2) + 48*
     +    s**(-1)*t2*u2t**(-1) + 64*s**(-1)*t2*t2t**(-1) - 32*s**(-1)*
     +    t2**2*u2**(-1)*u2t**(-1) + 64*s**(-1)*t2**2*u2t**(-2) - 64*
     +    s**(-1)*u2*s4*t2t**(-2) + 64*s**(-1)*u2*u2t**(-1) + 48*
     +    s**(-1)*u2*t2t**(-1) + 64*s**(-1)*u2**2*t2t**(-2) - 48*
     +    s**(-1)*s4*u2t**(-1) - 48*s**(-1)*s4*t2t**(-1) + 64*s**(-1)
     +     + 32*s*t2**(-1)*t2t**(-1) + 32*s*u2**(-1)*u2t**(-1) + 64*s*
     +    u2t**(-2) + 64*s*t2t**(-2) - 32*t2**(-1)*s4*t2t**(-1) + 128*
     +    t2*u2t**(-2) + 64*t2*t2t**(-2) - 32*u2**(-1)*s4*u2t**(-1) + 
     +    64*u2*u2t**(-2) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Nc**2*Cf*
     + Pi**3*alphas**2*hardfac * ( 128*u2*t2t**(-2) - 64*s4*u2t**(-2)
     +     - 64*s4*t2t**(-2) + 112*u2t**(-1) + 112*t2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Cf*Pi**3*
     + alphas**2*hardfac * (  - 64*(s+t2)**(-2)*(t2+u2)**(-1)*m1**2*s4
     +     + 64*(s+t2)**(-2)*(t2+u2)**(-1)*m2**2*s4 + 64*(s+t2)**(-2)*
     +    (t2+u2)**(-1)*s*s4 - 64*(s+t2)**(-2)*(t2+u2)**(-1)*s4**2 + 64
     +    *(s+t2)**(-2)*s4 - 64*(s+t2)**(-1)*(s+u2)**(-1)*
     +    (t2*u2-mjs2*s)**(-1)*s**2*s4 - 64*(s+t2)**(-1)*(s+u2)**(-1)*s
     +     - 32*(s+t2)**(-1)*(t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**2*
     +    s*s4 + 32*(s+t2)**(-1)*(t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*
     +    m2**2*s*s4 - 32*(s+t2)**(-1)*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*s*s4**2 - 32*(s+t2)**(-1)*(t2+u2)**(-1)
     +    *u2*s4*u2t**(-1) - 32*(s+t2)**(-1)*(t2*u2-mjs2*s)**(-1)*m1**2
     +    *s4 + 32*(s+t2)**(-1)*(t2*u2-mjs2*s)**(-1)*m2**2*s4 + 64*
     +    (s+t2)**(-1)*(t2*u2-mjs2*s)**(-1)*s*s4 - 32*(s+t2)**(-1)*
     +    (t2*u2-mjs2*s)**(-1)*u2*s4 - 32*(s+t2)**(-1)*
     +    (t2*u2-mjs2*s)**(-1)*s4**2 - 32*(s+t2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2*s4 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Cf*Pi**3*
     + alphas**2*hardfac * ( 32*(s+t2)**(-1)*(t2*s4j-mjs2*s)**(-1)*
     +    m2**2*s4 - 32*(s+t2)**(-1)*(t2*s4j-mjs2*s)**(-1)*s4**2 - 32*
     +    (s+t2)**(-1)*s**(-1)*u2*s4*u2t**(-1) - 64*(s+t2)**(-1)*
     +    s**(-1)*u2 + 64*(s+t2)**(-1) + 64*(s+u2)**(-2)*(t2+u2)**(-1)*
     +    s*s4 - 64*(s+u2)**(-2)*(t2+u2)**(-1)*t2*s4 + 64*(s+u2)**(-2)*
     +    s4 - 32*(s+u2)**(-1)*(t2+u2)**(-1)*(u2*s4j-mjs2*s)**(-1)*s*t2
     +    *s4 - 32*(s+u2)**(-1)*(t2+u2)**(-1)*t2*s4*t2t**(-1) - 64*
     +    (s+u2)**(-1)*(t2+u2)**(-1)*s4 + 64*(s+u2)**(-1)*
     +    (t2*u2-mjs2*s)**(-1)*s*s4 - 64*(s+u2)**(-1)*
     +    (t2*u2-mjs2*s)**(-1)*t2*s4 - 32*(s+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*t2*s4 - 32*(s+u2)**(-1)*s**(-1)*t2*s4*
     +    t2t**(-1) - 64*(s+u2)**(-1)*s**(-1)*t2 + 64*(s+u2)**(-1) - 64
     +    *(t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**2*m2**2 - 32*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**2*s - 32*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**2*t2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Cf*Pi**3*
     + alphas**2*hardfac * ( 64*(t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*
     +    m1**2*s4 + 32*(t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m1**4 + 32*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m2**2*s + 32*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m2**2*t2 - 64*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m2**2*s4 + 32*
     +    (t2+u2)**(-1)*(t2*s4j-mjs2*s)**(-1)*m2**4 - 32*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*t2*s4 + 32*(t2+u2)**(-1)*
     +    (t2*s4j-mjs2*s)**(-1)*s4**2 + 32*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*s*t2 + 32*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*t2*u2 + 32*(t2+u2)**(-1)*
     +    (u2*s4j-mjs2*s)**(-1)*t2**2 + 32*(t2+u2)**(-1)*t2*t2t**(-1)
     +     + 32*(t2+u2)**(-1)*u2*u2t**(-1) + 64*(t2*u2-mjs2*s)**(-2)*
     +    m1**2*s*t2 + 64*(t2*u2-mjs2*s)**(-2)*m1**2*s*u2 + 64*
     +    (t2*u2-mjs2*s)**(-2)*m1**2*t2**2 + 64*(t2*u2-mjs2*s)**(-2)*
     +    m1**2*u2**2 )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Cf*Pi**3*
     + alphas**2*hardfac * (  - 64*(t2*u2-mjs2*s)**(-1)*m1**2*m2**2*
     +    t2**(-1) - 128*(t2*u2-mjs2*s)**(-1)*m1**2*s*t2**(-1) - 96*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*s*u2**(-1) + 32*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2**(-1)*s4 - 32*
     +    (t2*u2-mjs2*s)**(-1)*m1**2*t2*u2**(-1) - 128*
     +    (t2*u2-mjs2*s)**(-1)*m1**2 + 32*(t2*u2-mjs2*s)**(-1)*m1**4*
     +    t2**(-1) + 64*(t2*u2-mjs2*s)**(-1)*m2**2*s*t2**(-1) + 32*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*s*u2**(-1) - 32*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2**(-1)*s4 + 32*
     +    (t2*u2-mjs2*s)**(-1)*m2**2*t2*u2**(-1) + 128*
     +    (t2*u2-mjs2*s)**(-1)*m2**2 + 32*(t2*u2-mjs2*s)**(-1)*m2**4*
     +    t2**(-1) + 32*(t2*u2-mjs2*s)**(-1)*s*t2**(-1)*s4 + 64*
     +    (t2*u2-mjs2*s)**(-1)*s*t2*u2**(-1) + 32*(t2*u2-mjs2*s)**(-1)*
     +    s*u2**(-1)*s4 - 160*(t2*u2-mjs2*s)**(-1)*s - 32*
     +    (t2*u2-mjs2*s)**(-1)*s**2*t2**(-1) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Cf*Pi**3*
     + alphas**2*hardfac * (  - 32*(t2*u2-mjs2*s)**(-1)*s**2*u2**(-1)
     +     - 32*(t2*u2-mjs2*s)**(-1)*t2**(-1)*u2*s4 + 32*
     +    (t2*u2-mjs2*s)**(-1)*t2**(-1)*u2**2 - 96*(t2*u2-mjs2*s)**(-1)
     +    *t2*u2**(-1)*s4 + 96*(t2*u2-mjs2*s)**(-1)*t2**2*u2**(-1) - 64
     +    *(t2*u2-mjs2*s)**(-1)*u2 - 64*(t2*u2-mjs2*s)**(-1)*s4 + 64*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2*m2**2*t2**(-1) + 64*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2*s*t2**(-1) - 32*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2*t2**(-1)*s4 + 64*
     +    (t2*s4j-mjs2*s)**(-1)*m1**2 - 32*(t2*s4j-mjs2*s)**(-1)*m1**4*
     +    t2**(-1) - 64*(t2*s4j-mjs2*s)**(-1)*m2**2*s*t2**(-1) + 32*
     +    (t2*s4j-mjs2*s)**(-1)*m2**2*t2**(-1)*s4 - 64*
     +    (t2*s4j-mjs2*s)**(-1)*m2**2 - 32*(t2*s4j-mjs2*s)**(-1)*m2**4*
     +    t2**(-1) + 64*(t2*s4j-mjs2*s)**(-1)*s4 - 32*
     +    (u2*s4j-mjs2*s)**(-1)*s*u2**(-1)*s4 + 64*
     +    (u2*s4j-mjs2*s)**(-1)*s )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Cf*Pi**3*
     + alphas**2*hardfac * ( 32*(u2*s4j-mjs2*s)**(-1)*s**2*u2**(-1) + 
     +    32*(u2*s4j-mjs2*s)**(-1)*t2*u2**(-1)*s4 - 32*
     +    (u2*s4j-mjs2*s)**(-1)*t2**2*u2**(-1) + 32*
     +    (u2*s4j-mjs2*s)**(-1)*u2 - 64*m1**2*t2**(-1)*t2t**(-1) - 64*
     +    m1**2*u2**(-1)*u2t**(-1) - 32*s**(-1)*t2**(-1)*u2*s4*
     +    t2t**(-1) + 32*s**(-1)*t2**(-1)*u2**2*t2t**(-1) - 32*s**(-1)*
     +    t2*u2**(-1)*s4*u2t**(-1) - 64*s**(-1)*t2*u2*u2t**(-2) - 64*
     +    s**(-1)*t2*u2*t2t**(-2) + 64*s**(-1)*t2*s4*u2t**(-2) - 32*
     +    s**(-1)*t2*u2t**(-1) - 32*s**(-1)*t2*t2t**(-1) + 32*s**(-1)*
     +    t2**2*u2**(-1)*u2t**(-1) - 64*s**(-1)*t2**2*u2t**(-2) + 64*
     +    s**(-1)*u2*s4*t2t**(-2) - 32*s**(-1)*u2*u2t**(-1) - 32*
     +    s**(-1)*u2*t2t**(-1) - 64*s**(-1)*u2**2*t2t**(-2) + 32*
     +    s**(-1)*s4*u2t**(-1) + 32*s**(-1)*s4*t2t**(-1) - 64*s**(-1)
     +     - 32*s*t2**(-1)*t2t**(-1) - 32*s*u2**(-1)*u2t**(-1) - 64*s*
     +    u2t**(-2) )
      MM_crossed_4 = MM_crossed_4 + (1+m12/s4)*(h_r2+h_l2)*Cf*Pi**3*
     + alphas**2*hardfac * (  - 64*s*t2t**(-2) + 32*t2**(-1)*s4*
     +    t2t**(-1) - 128*t2*u2t**(-2) - 64*t2*t2t**(-2) + 32*u2**(-1)*
     +    s4*u2t**(-1) - 64*u2*u2t**(-2) - 128*u2*t2t**(-2) + 64*s4*
     +    u2t**(-2) + 64*s4*t2t**(-2) - 96*u2t**(-1) - 96*t2t**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(0,0,0,0)*(h_r2+h_l2)*Nc**2*
     + Cf*Pi**2*alphas**2*hardfac * ( 32*(t2+u2)**(-1)*m1**2*s**(-2)*t2
     +     + 16*(t2+u2)**(-1)*m1**2*s**(-2)*s4 - 136*(t2+u2)**(-1)*
     +    m1**2*s**(-1) - 96*(t2+u2)**(-1)*m1**2*u2**(-1) - 32*
     +    (t2+u2)**(-1)*m2**2*s**(-2)*t2 - 16*(t2+u2)**(-1)*m2**2*
     +    s**(-2)*s4 + 136*(t2+u2)**(-1)*m2**2*s**(-1) + 96*
     +    (t2+u2)**(-1)*m2**2*u2**(-1) + 32*(t2+u2)**(-1)*s**(-2)*t2*u2
     +     + 32*(t2+u2)**(-1)*s**(-2)*t2*s4 + 32*(t2+u2)**(-1)*s**(-2)*
     +    t2**2 + 16*(t2+u2)**(-1)*s**(-2)*s4**2 + 8*(t2+u2)**(-1)*
     +    s**(-1)*t2 + 40*(t2+u2)**(-1)*s**(-1)*u2 - 152*(t2+u2)**(-1)*
     +    s**(-1)*s4 + 96*(t2+u2)**(-1)*s*u2**(-1) + 32*(t2+u2)**(-1)*
     +    t2**(-1)*u2 + 64*(t2+u2)**(-1)*t2*u2**(-1) - 96*(t2+u2)**(-1)
     +    *u2**(-1)*s4 + 232*(t2+u2)**(-1) + 48*m1**2*s**(-1)*u2**(-1)
     +     - 48*m2**2*s**(-1)*u2**(-1) - 64*s**(-2)*t2 - 16*s**(-2)*s4
     +     - 48*s**(-1)*t2*u2**(-1) + 48*s**(-1)*u2**(-1)*s4 + 48*
     +    s**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(0,0,0,0)*(h_r2+h_l2)*Nc**2*
     + Cf*Pi**2*alphas**2*hardfac * (  - 32*t2**(-1) - 16*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(0,0,0,0)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 96*(t2+u2)**(-1)*m1**2*u2**(-1) - 96
     +    *(t2+u2)**(-1)*m2**2*u2**(-1) - 96*(t2+u2)**(-1)*s*u2**(-1)
     +     - 32*(t2+u2)**(-1)*t2**(-1)*u2 - 64*(t2+u2)**(-1)*t2*
     +    u2**(-1) + 96*(t2+u2)**(-1)*u2**(-1)*s4 - 96*(t2+u2)**(-1) + 
     +    32*t2**(-1) - 32*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,0,-1,0)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * (  - 16 + 96*(t2+u2)**(-1)*m1**2*
     +    m2**2*s**(-1) + 32*(t2+u2)**(-1)*m1**2*m2**2*u2**(-1) + 32*
     +    (t2+u2)**(-1)*m1**2*s**(-1)*t2 + 32*(t2+u2)**(-1)*m1**2*
     +    s**(-1)*u2 - 88*(t2+u2)**(-1)*m1**2*s**(-1)*s4 - 32*
     +    (t2+u2)**(-1)*m1**2*t2*u2**(-1) + 32*(t2+u2)**(-1)*m1**2 - 32
     +    *(t2+u2)**(-1)*m1**4*s**(-1) - 32*(t2+u2)**(-1)*m1**4*
     +    u2**(-1) - 32*(t2+u2)**(-1)*m2**2*s**(-1)*t2 - 32*
     +    (t2+u2)**(-1)*m2**2*s**(-1)*u2 + 120*(t2+u2)**(-1)*m2**2*
     +    s**(-1)*s4 + 32*(t2+u2)**(-1)*m2**2*s*u2**(-1) + 32*
     +    (t2+u2)**(-1)*m2**2*t2*u2**(-1) - 32*(t2+u2)**(-1)*m2**2*
     +    u2**(-1)*s4 - 64*(t2+u2)**(-1)*m2**2 - 64*(t2+u2)**(-1)*m2**4
     +    *s**(-1) + 32*(t2+u2)**(-1)*s**(-1)*t2*s4 + 32*(t2+u2)**(-1)*
     +    s**(-1)*u2*s4 - 56*(t2+u2)**(-1)*s**(-1)*s4**2 + 32*
     +    (t2+u2)**(-1)*s*t2*u2**(-1) - 64*(t2+u2)**(-1)*s*u2**(-1)*s4
     +     + 32*(t2+u2)**(-1)*s**2*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,0,-1,0)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * (  - 32*(t2+u2)**(-1)*t2*u2**(-1)*
     +    s4 - 32*(t2+u2)**(-1)*t2 + 32*(t2+u2)**(-1)*u2**(-1)*s4**2 - 
     +    32*(t2+u2)**(-1)*u2 + 56*(t2+u2)**(-1)*s4 - 32*m1**2*m2**2*
     +    s**(-1)*u2**(-1) - 16*m1**2*s**(-1)*t2*u2**(-1) + 16*m1**2*
     +    s**(-1)*u2**(-1)*s4 + 16*m1**2*u2**(-1) + 32*m1**4*s**(-1)*
     +    u2**(-1) - 16*m2**2*s**(-1)*t2*u2**(-1) + 16*m2**2*s**(-1)*
     +    u2**(-1)*s4 - 64*m2**2*s**(-1) - 16*m2**2*u2**(-1) + 32*
     +    s**(-1)*t2*u2**(-1)*s4 - 48*s**(-1)*t2 - 16*s**(-1)*t2**2*
     +    u2**(-1) - 16*s**(-1)*u2**(-1)*s4**2 - 32*s**(-1)*u2 + 72*
     +    s**(-1)*s4 + 16*s*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,0,-1,0)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 32*(s+t2)**(-1)*(t2+u2)**(-1)*m1**2*
     +    s4 - 32*(s+t2)**(-1)*(t2+u2)**(-1)*m2**2*s4 - 32*(s+t2)**(-1)
     +    *(t2+u2)**(-1)*s*s4 + 32*(s+t2)**(-1)*(t2+u2)**(-1)*s4**2 - 
     +    32*(s+t2)**(-1)*s4 - 32*(t2+u2)**(-1)*m1**2*m2**2*u2**(-1) + 
     +    32*(t2+u2)**(-1)*m1**2*t2*u2**(-1) + 32*(t2+u2)**(-1)*m1**4*
     +    u2**(-1) - 32*(t2+u2)**(-1)*m2**2*s*u2**(-1) - 32*
     +    (t2+u2)**(-1)*m2**2*t2*u2**(-1) + 32*(t2+u2)**(-1)*m2**2*
     +    u2**(-1)*s4 - 32*(t2+u2)**(-1)*s*t2*u2**(-1) + 64*
     +    (t2+u2)**(-1)*s*u2**(-1)*s4 - 32*(t2+u2)**(-1)*s**2*u2**(-1)
     +     + 32*(t2+u2)**(-1)*t2*u2**(-1)*s4 - 32*(t2+u2)**(-1)*
     +    u2**(-1)*s4**2 - 32*m1**2*u2**(-1) - 32*s*u2**(-1) - 32*t2*
     +    u2**(-1) + 32*u2**(-1)*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,2,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 16*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*s
     +    *s4 - 32*(s+t2)**(-1)*(s+u2)**(-1)*s*s4**2 - 16*(s+t2)**(-1)*
     +    (s+u2)**(-1)*s**2*s4 - 32*(s+t2)**(-1)*(s+u2)**(-1)*s4**3 + 
     +    16*(s+t2)**(-1)*s*s4 - 16*(s+t2)**(-1)*u2*s4 + 32*
     +    (s+t2)**(-1)*s4**2 + 16*(s+u2)**(-1)*s*s4 - 16*(s+u2)**(-1)*
     +    t2*s4 + 32*(s+u2)**(-1)*s4**2 - 32*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,5,-1,-2)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 16*s*t2 - 16*s*u2 + 16*s
     +    *s4 - 16*s**2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,5,-1,-2)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 16*s*t2 + 16*s*u2 - 16*s*s4 + 16*
     +    s**2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,5,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 16*(t2+u2)**(-1)*m1**2*s
     +    *t2*u2**(-1) + 16*(t2+u2)**(-1)*m1**2*s*u2**(-1)*s4 - 16*
     +    (t2+u2)**(-1)*m1**2*s**2*u2**(-1) + 128*(t2+u2)**(-1)*s*t2*
     +    u2**(-1)*s4 + 24*(t2+u2)**(-1)*s*t2 - 32*(t2+u2)**(-1)*s*
     +    t2**2*u2**(-1) - 96*(t2+u2)**(-1)*s*u2**(-1)*s4**2 + 8*
     +    (t2+u2)**(-1)*s*u2 - 64*(t2+u2)**(-1)*s**2*t2*u2**(-1) + 96*
     +    (t2+u2)**(-1)*s**2*u2**(-1)*s4 - 32*(t2+u2)**(-1)*s**3*
     +    u2**(-1) - 64*(t2+u2)**(-1)*t2*u2**(-1)*s4**2 + 8*
     +    (t2+u2)**(-1)*t2*u2 - 24*(t2+u2)**(-1)*t2*s4 + 32*
     +    (t2+u2)**(-1)*t2**2*u2**(-1)*s4 + 24*(t2+u2)**(-1)*t2**2 + 32
     +    *(t2+u2)**(-1)*u2**(-1)*s4**3 - 8*(t2+u2)**(-1)*u2*s4 + 32*
     +    m1**2*s*u2**(-1) - 16*s*t2*u2**(-1) + 40*s + 16*t2*u2**(-1)*
     +    s4 + 24*t2 - 16*t2**2*u2**(-1) + 32*u2 - 40*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,5,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 16*(s+t2)**(-1)*(t2+u2)**(-1)*
     +    m1**2*s*s4 - 16*(s+t2)**(-1)*(t2+u2)**(-1)*s*u2*s4 + 32*
     +    (s+t2)**(-1)*(t2+u2)**(-1)*u2*s4**2 - 32*(s+t2)**(-1)*
     +    (t2+u2)**(-1)*s4**3 - 16*(s+t2)**(-1)*u2*s4 + 16*
     +    (t2+u2)**(-1)*m1**2*s*t2*u2**(-1) - 16*(t2+u2)**(-1)*m1**2*s*
     +    u2**(-1)*s4 + 16*(t2+u2)**(-1)*m1**2*s + 16*(t2+u2)**(-1)*
     +    m1**2*s**2*u2**(-1) - 128*(t2+u2)**(-1)*s*t2*u2**(-1)*s4 + 32
     +    *(t2+u2)**(-1)*s*t2 + 32*(t2+u2)**(-1)*s*t2**2*u2**(-1) + 96*
     +    (t2+u2)**(-1)*s*u2**(-1)*s4**2 + 16*(t2+u2)**(-1)*s*u2 - 96*
     +    (t2+u2)**(-1)*s*s4 + 64*(t2+u2)**(-1)*s**2*t2*u2**(-1) - 96*
     +    (t2+u2)**(-1)*s**2*u2**(-1)*s4 + 32*(t2+u2)**(-1)*s**2 + 32*
     +    (t2+u2)**(-1)*s**3*u2**(-1) + 64*(t2+u2)**(-1)*t2*u2**(-1)*
     +    s4**2 - 64*(t2+u2)**(-1)*t2*s4 - 32*(t2+u2)**(-1)*t2**2*
     +    u2**(-1)*s4 - 32*(t2+u2)**(-1)*u2**(-1)*s4**3 - 32*
     +    (t2+u2)**(-1)*u2*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,5,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 96*(t2+u2)**(-1)*s4**2 - 32*m1**2*s*
     +    u2**(-1) + 16*s*t2*u2**(-1) - 32*s - 16*t2*u2**(-1)*s4 - 16*
     +    t2 + 16*t2**2*u2**(-1) - 16*u2 + 32*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,6,-1,1)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * (  - 32*(t2+u2)**(-1)*m1**2*
     +    s**(-1) + 32*(t2+u2)**(-1)*m2**2*s**(-1) - 32*(t2+u2)**(-1)*
     +    s**(-1)*s4 + 32*(t2+u2)**(-1) + 32*s**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,7,-1,-2)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 64*m1**2*m2**2 + 64*m1**2*
     +    m2**4*t2**(-1) + 32*m1**2*t2 - 128*m1**4*m2**2*t2**(-1) - 64*
     +    m1**4 + 64*m1**6*t2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,7,-1,-2)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 64*m1**2*m2**2 - 64*m1**2*m2**4*
     +    t2**(-1) - 32*m1**2*t2 + 128*m1**4*m2**2*t2**(-1) + 64*m1**4
     +     - 64*m1**6*t2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,7,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 64*m1**2*m2**2*s**(-1)*
     +    t2**(-1)*s4 + 32*m1**2*m2**2*s**(-1)*t2*u2**(-1) - 32*m1**2*
     +    m2**2*s**(-1)*u2**(-1)*s4 + 64*m1**2*m2**2*s**(-1) + 48*m1**2
     +    *m2**2*s*t2**(-1)*u2**(-1) - 32*m1**2*m2**2*t2**(-1)*u2**(-1)
     +    *s4 + 16*m1**2*m2**2*u2**(-1) + 64*m1**2*m2**4*s**(-1)*
     +    t2**(-1) + 32*m1**2*m2**4*s**(-1)*u2**(-1) + 64*m1**2*m2**4*
     +    t2**(-2) - 32*m1**2*m2**4*t2**(-1)*u2**(-1) - 16*m1**2*
     +    s**(-1)*t2*u2**(-1)*s4 + 16*m1**2*s**(-1)*t2 + 16*m1**2*
     +    s**(-1)*t2**2*u2**(-1) + 16*m1**2*s**(-1)*u2**(-1)*s4**2 - 16
     +    *m1**2*s**(-1)*s4 + 16*m1**2*s*t2**(-1) + 32*m1**2*s*u2**(-1)
     +     - 16*m1**2*t2**(-1)*s4 + 16*m1**2*t2*u2**(-1) - 16*m1**2*
     +    u2**(-1)*s4 - 128*m1**4*m2**2*s**(-1)*t2**(-1) - 64*m1**4*
     +    m2**2*s**(-1)*u2**(-1) - 128*m1**4*m2**2*t2**(-2) + 64*m1**4*
     +    m2**2*t2**(-1)*u2**(-1) + 64*m1**4*s**(-1)*t2**(-1)*s4 - 48*
     +    m1**4*s**(-1)*t2*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,7,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 48*m1**4*s**(-1)*u2**(-1)*
     +    s4 - 80*m1**4*s**(-1) - 16*m1**4*s*t2**(-1)*u2**(-1) + 16*
     +    m1**4*t2**(-1) + 64*m1**6*s**(-1)*t2**(-1) + 32*m1**6*s**(-1)
     +    *u2**(-1) + 64*m1**6*t2**(-2) - 32*m1**6*t2**(-1)*u2**(-1) - 
     +    48*m2**2*s**(-1)*t2*u2**(-1)*s4 + 16*m2**2*s**(-1)*t2 + 16*
     +    m2**2*s**(-1)*t2**2*u2**(-1) + 16*m2**2*s**(-1)*u2**(-1)*
     +    s4**2 - 16*m2**2*s**(-1)*s4 - 16*m2**2*s*t2**(-1) - 16*m2**2*
     +    s*u2**(-1) + 16*m2**2*t2**(-1)*s4 - 32*m2**2 + 16*m2**4*
     +    s**(-1)*t2*u2**(-1) - 16*m2**4*s**(-1)*u2**(-1)*s4 + 16*m2**4
     +    *s**(-1) - 32*m2**4*s*t2**(-1)*u2**(-1) + 32*m2**4*t2**(-1)*
     +    u2**(-1)*s4 - 16*m2**4*t2**(-1) - 16*m2**4*u2**(-1) + 16*
     +    s**(-1)*t2*u2**(-1)*s4**2 - 16*s**(-1)*t2*s4 - 16*s**(-1)*
     +    t2**2*u2**(-1)*s4 + 16*s**(-1)*s4**2 - 16*s*t2*u2**(-1) - 16*
     +    t2 - 16*t2**2*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,7,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 16*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*s
     +    *s4 - 32*(s+t2)**(-1)*(s+u2)**(-1)*s*s4**2 - 16*(s+t2)**(-1)*
     +    (s+u2)**(-1)*s**2*s4 - 32*(s+t2)**(-1)*(s+u2)**(-1)*s4**3 + 
     +    64*(s+t2)**(-1)*m1**2*m2**2*t2**(-1)*s4 - 16*(s+t2)**(-1)*
     +    m1**2*s4 - 64*(s+t2)**(-1)*m1**4*t2**(-1)*s4 + 16*
     +    (s+t2)**(-1)*m2**2*s4 + 16*(s+t2)**(-1)*s*s4 + 16*
     +    (s+t2)**(-1)*s4**2 + 16*(s+u2)**(-1)*s*s4 - 16*(s+u2)**(-1)*
     +    t2*s4 + 32*(s+u2)**(-1)*s4**2 - 48*m1**2*m2**2*s*t2**(-1)*
     +    u2**(-1) + 32*m1**2*m2**2*t2**(-1)*u2**(-1)*s4 + 16*m1**2*
     +    m2**2*u2**(-1) - 64*m1**2*m2**4*t2**(-2) + 32*m1**2*m2**4*
     +    t2**(-1)*u2**(-1) - 16*m1**2*s*t2**(-1) - 16*m1**2*s*u2**(-1)
     +     + 16*m1**2*t2**(-1)*s4 + 16*m1**2*t2*u2**(-1) - 16*m1**2*
     +    u2**(-1)*s4 + 128*m1**4*m2**2*t2**(-2) - 64*m1**4*m2**2*
     +    t2**(-1)*u2**(-1) + 16*m1**4*s*t2**(-1)*u2**(-1) - 16*m1**4*
     +    t2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,7,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 48*m1**4*u2**(-1) - 64*m1**6*
     +    t2**(-2) + 32*m1**6*t2**(-1)*u2**(-1) + 16*m2**2*s*t2**(-1)
     +     + 32*m2**2*s*u2**(-1) - 16*m2**2*t2**(-1)*s4 + 32*m2**2*t2*
     +    u2**(-1) - 32*m2**2*u2**(-1)*s4 + 48*m2**2 + 32*m2**4*s*
     +    t2**(-1)*u2**(-1) - 32*m2**4*t2**(-1)*u2**(-1)*s4 + 16*m2**4*
     +    t2**(-1) + 32*m2**4*u2**(-1) + 16*s*t2*u2**(-1) - 16*t2*
     +    u2**(-1)*s4 + 16*t2 + 16*t2**2*u2**(-1) - 16*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,7,-1,1)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * (  - 32*(t2+u2)**(-1)*m1**2*
     +    s**(-1) + 32*(t2+u2)**(-1)*m2**2*s**(-1) - 32*(t2+u2)**(-1)*
     +    s**(-1)*s4 + 32*(t2+u2)**(-1) + 32*s**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 16*(t2+u2)**(-1)*m1**2*
     +    m2**2*s**(-1)*t2 - 16*(t2+u2)**(-1)*m1**2*m2**2*s**(-1)*s4 + 
     +    48*(t2+u2)**(-1)*m1**2*m2**2*s*u2**(-1) + 80*(t2+u2)**(-1)*
     +    m1**2*m2**2*t2*u2**(-1) - 32*(t2+u2)**(-1)*m1**2*m2**2*
     +    u2**(-1)*s4 + 16*(t2+u2)**(-1)*m1**2*m2**2 + 32*(t2+u2)**(-1)
     +    *m1**2*m2**4*s**(-1) - 32*(t2+u2)**(-1)*m1**2*m2**4*u2**(-1)
     +     - 8*(t2+u2)**(-1)*m1**2*s**(-1)*t2*s4 + 16*(t2+u2)**(-1)*
     +    m1**2*s**(-1)*t2**2 + 8*(t2+u2)**(-1)*m1**2*s**(-1)*s4**2 - 
     +    32*(t2+u2)**(-1)*m1**2*s*t2*u2**(-1) - 8*(t2+u2)**(-1)*m1**2*
     +    s + 16*(t2+u2)**(-1)*m1**2*t2*u2**(-1)*s4 + 8*(t2+u2)**(-1)*
     +    m1**2*t2 - 32*(t2+u2)**(-1)*m1**2*t2**2*u2**(-1) - 64*
     +    (t2+u2)**(-1)*m1**4*m2**2*s**(-1) + 64*(t2+u2)**(-1)*m1**4*
     +    m2**2*u2**(-1) + 8*(t2+u2)**(-1)*m1**4*s**(-1)*t2 + 40*
     +    (t2+u2)**(-1)*m1**4*s**(-1)*s4 - 16*(t2+u2)**(-1)*m1**4*s*
     +    u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 48*(t2+u2)**(-1)*m1**4*
     +    t2*u2**(-1) - 24*(t2+u2)**(-1)*m1**4 + 32*(t2+u2)**(-1)*m1**6
     +    *s**(-1) - 32*(t2+u2)**(-1)*m1**6*u2**(-1) + 8*(t2+u2)**(-1)*
     +    m2**2*s**(-1)*t2*s4 - 16*(t2+u2)**(-1)*m2**2*s**(-1)*t2**2 + 
     +    24*(t2+u2)**(-1)*m2**2*s**(-1)*s4**2 + 32*(t2+u2)**(-1)*m2**2
     +    *s*t2*u2**(-1) + 8*(t2+u2)**(-1)*m2**2*s - 32*(t2+u2)**(-1)*
     +    m2**2*t2*u2**(-1)*s4 - 8*(t2+u2)**(-1)*m2**2*t2 + 32*
     +    (t2+u2)**(-1)*m2**2*t2**2*u2**(-1) - 32*(t2+u2)**(-1)*m2**2*
     +    s4 + 8*(t2+u2)**(-1)*m2**4*s**(-1)*t2 - 24*(t2+u2)**(-1)*
     +    m2**4*s**(-1)*s4 - 32*(t2+u2)**(-1)*m2**4*s*u2**(-1) - 32*
     +    (t2+u2)**(-1)*m2**4*t2*u2**(-1) + 32*(t2+u2)**(-1)*m2**4*
     +    u2**(-1)*s4 + 8*(t2+u2)**(-1)*m2**4 - 16*(t2+u2)**(-1)*
     +    s**(-1)*t2*s4**2 + 16*(t2+u2)**(-1)*s**(-1)*t2**2*s4 + 16*
     +    (t2+u2)**(-1)*t2*s4 + 64*m1**2*m2**2*s**(-1)*t2**(-1)*s4 - 48
     +    *m1**2*m2**2*s*t2**(-1)*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 32*m1**2*m2**2*t2**(-1)*
     +    u2**(-1)*s4 - 80*m1**2*m2**2*u2**(-1) - 64*m1**2*m2**4*
     +    s**(-1)*t2**(-1) - 64*m1**2*m2**4*t2**(-2) + 32*m1**2*m2**4*
     +    t2**(-1)*u2**(-1) - 8*m1**2*s**(-1)*t2 - 8*m1**2*s**(-1)*s4
     +     - 16*m1**2*s*t2**(-1) + 32*m1**2*s*u2**(-1) + 16*m1**2*
     +    t2**(-1)*s4 + 32*m1**2*t2*u2**(-1) - 16*m1**2*u2**(-1)*s4 - 
     +    24*m1**2 + 128*m1**4*m2**2*s**(-1)*t2**(-1) + 128*m1**4*m2**2
     +    *t2**(-2) - 64*m1**4*m2**2*t2**(-1)*u2**(-1) - 64*m1**4*
     +    s**(-1)*t2**(-1)*s4 - 16*m1**4*s**(-1) + 16*m1**4*s*t2**(-1)*
     +    u2**(-1) - 16*m1**4*t2**(-1) + 48*m1**4*u2**(-1) - 64*m1**6*
     +    s**(-1)*t2**(-1) - 64*m1**6*t2**(-2) + 32*m1**6*t2**(-1)*
     +    u2**(-1) + 8*m2**2*s**(-1)*t2 - 24*m2**2*s**(-1)*s4 + 16*
     +    m2**2*s*t2**(-1) - 32*m2**2*s*u2**(-1) - 16*m2**2*t2**(-1)*s4
     +     - 32*m2**2*t2*u2**(-1) + 32*m2**2*u2**(-1)*s4 + 24*m2**2 + 
     +    16*m2**4*s**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 32*m2**4*s*t2**(-1)*
     +    u2**(-1) - 32*m2**4*t2**(-1)*u2**(-1)*s4 + 16*m2**4*t2**(-1)
     +     + 32*m2**4*u2**(-1) - 16*s**(-1)*t2*s4 + 16*s**(-1)*s4**2 - 
     +    16*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,8,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 32*(s+t2)**(-1)*(t2+u2)**(-1)*m1**2*
     +    m2**2*s4 - 32*(s+t2)**(-1)*(t2+u2)**(-1)*m1**4*s4 + 16*
     +    (s+t2)**(-1)*(t2+u2)**(-1)*m2**2*s*s4 - 32*(s+t2)**(-1)*
     +    (t2+u2)**(-1)*m2**2*s4**2 - 16*(s+t2)**(-1)*(t2+u2)**(-1)*s*
     +    s4**2 - 64*(s+t2)**(-1)*m1**2*m2**2*t2**(-1)*s4 + 16*
     +    (s+t2)**(-1)*m1**2*s4 + 64*(s+t2)**(-1)*m1**4*t2**(-1)*s4 + 
     +    16*(s+t2)**(-1)*m2**2*s4 - 16*(s+t2)**(-1)*s4**2 - 48*
     +    (t2+u2)**(-1)*m1**2*m2**2*s*u2**(-1) - 80*(t2+u2)**(-1)*m1**2
     +    *m2**2*t2*u2**(-1) + 32*(t2+u2)**(-1)*m1**2*m2**2*u2**(-1)*s4
     +     - 48*(t2+u2)**(-1)*m1**2*m2**2 + 32*(t2+u2)**(-1)*m1**2*
     +    m2**4*u2**(-1) + 32*(t2+u2)**(-1)*m1**2*s*t2*u2**(-1) + 16*
     +    (t2+u2)**(-1)*m1**2*s - 16*(t2+u2)**(-1)*m1**2*t2*u2**(-1)*s4
     +     + 16*(t2+u2)**(-1)*m1**2*t2 + 32*(t2+u2)**(-1)*m1**2*t2**2*
     +    u2**(-1) - 16*(t2+u2)**(-1)*m1**2*s4 - 64*(t2+u2)**(-1)*m1**4
     +    *m2**2*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,8,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 16*(t2+u2)**(-1)*m1**4*s*u2**(-1) + 
     +    48*(t2+u2)**(-1)*m1**4*t2*u2**(-1) + 32*(t2+u2)**(-1)*m1**4
     +     + 32*(t2+u2)**(-1)*m1**6*u2**(-1) - 32*(t2+u2)**(-1)*m2**2*s
     +    *t2*u2**(-1) - 16*(t2+u2)**(-1)*m2**2*s + 32*(t2+u2)**(-1)*
     +    m2**2*t2*u2**(-1)*s4 - 16*(t2+u2)**(-1)*m2**2*t2 - 32*
     +    (t2+u2)**(-1)*m2**2*t2**2*u2**(-1) + 32*(t2+u2)**(-1)*m2**2*
     +    s4 + 32*(t2+u2)**(-1)*m2**4*s*u2**(-1) + 32*(t2+u2)**(-1)*
     +    m2**4*t2*u2**(-1) - 32*(t2+u2)**(-1)*m2**4*u2**(-1)*s4 + 16*
     +    (t2+u2)**(-1)*m2**4 - 16*(t2+u2)**(-1)*t2*s4 + 16*
     +    (t2+u2)**(-1)*s4**2 + 48*m1**2*m2**2*s*t2**(-1)*u2**(-1) - 32
     +    *m1**2*m2**2*t2**(-1)*u2**(-1)*s4 + 80*m1**2*m2**2*u2**(-1)
     +     + 64*m1**2*m2**4*t2**(-2) - 32*m1**2*m2**4*t2**(-1)*u2**(-1)
     +     + 16*m1**2*s*t2**(-1) - 32*m1**2*s*u2**(-1) - 16*m1**2*
     +    t2**(-1)*s4 - 32*m1**2*t2*u2**(-1) + 16*m1**2*u2**(-1)*s4 + 
     +    16*m1**2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(1,8,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 128*m1**4*m2**2*t2**(-2) + 64*
     +    m1**4*m2**2*t2**(-1)*u2**(-1) - 16*m1**4*s*t2**(-1)*u2**(-1)
     +     + 16*m1**4*t2**(-1) - 48*m1**4*u2**(-1) + 64*m1**6*t2**(-2)
     +     - 32*m1**6*t2**(-1)*u2**(-1) - 16*m2**2*s*t2**(-1) + 32*
     +    m2**2*s*u2**(-1) + 16*m2**2*t2**(-1)*s4 + 32*m2**2*t2*
     +    u2**(-1) - 32*m2**2*u2**(-1)*s4 - 16*m2**2 - 32*m2**4*s*
     +    t2**(-1)*u2**(-1) + 32*m2**4*t2**(-1)*u2**(-1)*s4 - 16*m2**4*
     +    t2**(-1) - 32*m2**4*u2**(-1) + 16*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,0,-1,0)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * ( 32 - 32*(t2+u2)**(-1)*m1**2*
     +    t2**(-1)*u2 - 32*(t2+u2)**(-1)*m1**2 + 32*(t2+u2)**(-1)*m2**2
     +    *s**(-1)*t2 + 32*(t2+u2)**(-1)*m2**2*s**(-1)*u2 - 24*
     +    (t2+u2)**(-1)*s**(-1)*t2*s4 - 24*(t2+u2)**(-1)*s**(-1)*u2*s4
     +     - 32*(t2+u2)**(-1)*s*t2**(-1)*u2 - 32*(t2+u2)**(-1)*s + 32*
     +    (t2+u2)**(-1)*t2**(-1)*u2*s4 - 32*(t2+u2)**(-1)*t2**(-1)*
     +    u2**2 - 32*(t2+u2)**(-1)*t2 - 64*(t2+u2)**(-1)*u2 + 32*
     +    (t2+u2)**(-1)*s4 + 32*m1**2*t2**(-1) - 32*m2**2*s**(-1) + 24*
     +    s**(-1)*s4 + 32*s*t2**(-1) + 32*t2**(-1)*u2 - 32*t2**(-1)*s4
     +     )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,0,-1,0)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 32*(s+u2)**(-1)*(t2+u2)**(-1)*s*
     +    s4 + 32*(s+u2)**(-1)*(t2+u2)**(-1)*t2*s4 - 32*(s+u2)**(-1)*s4
     +     + 32*(t2+u2)**(-1)*m1**2*t2**(-1)*u2 + 32*(t2+u2)**(-1)*
     +    m1**2 + 32*(t2+u2)**(-1)*s*t2**(-1)*u2 + 32*(t2+u2)**(-1)*s
     +     - 32*(t2+u2)**(-1)*t2**(-1)*u2*s4 + 32*(t2+u2)**(-1)*
     +    t2**(-1)*u2**2 + 32*(t2+u2)**(-1)*u2 - 32*m1**2*t2**(-1) - 32
     +    *s*t2**(-1) - 32*t2**(-1)*u2 + 32*t2**(-1)*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,5,-1,-2)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 16*s*t2 - 16*s*u2 + 16*s
     +    *s4 - 16*s**2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,5,-1,-2)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 16*s*t2 + 16*s*u2 - 16*s*s4 + 16*
     +    s**2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,5,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 16*(t2+u2)**(-1)*m1**2*s
     +    *t2**(-1)*u2 + 16*(t2+u2)**(-1)*m1**2*s*t2**(-1)*s4 - 16*
     +    (t2+u2)**(-1)*m1**2*s**2*t2**(-1) + 128*(t2+u2)**(-1)*s*
     +    t2**(-1)*u2*s4 - 32*(t2+u2)**(-1)*s*t2**(-1)*u2**2 - 96*
     +    (t2+u2)**(-1)*s*t2**(-1)*s4**2 + 8*(t2+u2)**(-1)*s*t2 + 24*
     +    (t2+u2)**(-1)*s*u2 - 64*(t2+u2)**(-1)*s**2*t2**(-1)*u2 + 96*
     +    (t2+u2)**(-1)*s**2*t2**(-1)*s4 - 32*(t2+u2)**(-1)*s**3*
     +    t2**(-1) - 64*(t2+u2)**(-1)*t2**(-1)*u2*s4**2 + 32*
     +    (t2+u2)**(-1)*t2**(-1)*u2**2*s4 + 32*(t2+u2)**(-1)*t2**(-1)*
     +    s4**3 + 8*(t2+u2)**(-1)*t2*u2 - 8*(t2+u2)**(-1)*t2*s4 - 24*
     +    (t2+u2)**(-1)*u2*s4 + 24*(t2+u2)**(-1)*u2**2 + 32*m1**2*s*
     +    t2**(-1) - 16*s*t2**(-1)*u2 + 40*s + 16*t2**(-1)*u2*s4 - 16*
     +    t2**(-1)*u2**2 + 32*t2 + 24*u2 - 40*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,5,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 16*(s+u2)**(-1)*(t2+u2)**(-1)*
     +    m1**2*s*s4 - 16*(s+u2)**(-1)*(t2+u2)**(-1)*s*t2*s4 + 32*
     +    (s+u2)**(-1)*(t2+u2)**(-1)*t2*s4**2 - 32*(s+u2)**(-1)*
     +    (t2+u2)**(-1)*s4**3 - 16*(s+u2)**(-1)*t2*s4 + 16*
     +    (t2+u2)**(-1)*m1**2*s*t2**(-1)*u2 - 16*(t2+u2)**(-1)*m1**2*s*
     +    t2**(-1)*s4 + 16*(t2+u2)**(-1)*m1**2*s + 16*(t2+u2)**(-1)*
     +    m1**2*s**2*t2**(-1) - 128*(t2+u2)**(-1)*s*t2**(-1)*u2*s4 + 32
     +    *(t2+u2)**(-1)*s*t2**(-1)*u2**2 + 96*(t2+u2)**(-1)*s*t2**(-1)
     +    *s4**2 + 16*(t2+u2)**(-1)*s*t2 + 32*(t2+u2)**(-1)*s*u2 - 96*
     +    (t2+u2)**(-1)*s*s4 + 64*(t2+u2)**(-1)*s**2*t2**(-1)*u2 - 96*
     +    (t2+u2)**(-1)*s**2*t2**(-1)*s4 + 32*(t2+u2)**(-1)*s**2 + 32*
     +    (t2+u2)**(-1)*s**3*t2**(-1) + 64*(t2+u2)**(-1)*t2**(-1)*u2*
     +    s4**2 - 32*(t2+u2)**(-1)*t2**(-1)*u2**2*s4 - 32*(t2+u2)**(-1)
     +    *t2**(-1)*s4**3 - 32*(t2+u2)**(-1)*t2*s4 - 64*(t2+u2)**(-1)*
     +    u2*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,5,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 96*(t2+u2)**(-1)*s4**2 - 32*m1**2*s*
     +    t2**(-1) + 16*s*t2**(-1)*u2 - 32*s - 16*t2**(-1)*u2*s4 + 16*
     +    t2**(-1)*u2**2 - 16*t2 - 16*u2 + 32*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,6,-1,-2)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 128*m1**2*s*t2*u2**(-1) - 
     +    128*m1**2*s*u2**(-1)*s4 + 64*m1**2*s + 64*m1**2*s**2*u2**(-1)
     +     - 128*m1**2*t2*u2**(-1)*s4 + 64*m1**2*t2 + 64*m1**2*t2**2*
     +    u2**(-1) + 64*m1**2*u2**(-1)*s4**2 + 32*m1**2*u2 - 64*m1**2*
     +    s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,6,-1,-2)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 128*m1**2*s*t2*u2**(-1) + 128*
     +    m1**2*s*u2**(-1)*s4 - 64*m1**2*s - 64*m1**2*s**2*u2**(-1) + 
     +    128*m1**2*t2*u2**(-1)*s4 - 64*m1**2*t2 - 64*m1**2*t2**2*
     +    u2**(-1) - 64*m1**2*u2**(-1)*s4**2 - 32*m1**2*u2 + 64*m1**2*
     +    s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,6,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 64*m1**2*s**(-1)*t2*
     +    u2**(-1)*s4 + 64*m1**2*s**(-1)*t2 + 64*m1**2*s**(-1)*t2**2*
     +    u2**(-1) + 16*m1**2*s*t2**(-1)*u2**(-1)*s4 + 16*m1**2*s*
     +    t2**(-1) + 128*m1**2*s*t2*u2**(-2) - 128*m1**2*s*u2**(-2)*s4
     +     + 176*m1**2*s*u2**(-1) - 16*m1**2*s**2*t2**(-1)*u2**(-1) + 
     +    64*m1**2*s**2*u2**(-2) - 128*m1**2*t2*u2**(-2)*s4 + 256*m1**2
     +    *t2*u2**(-1) + 64*m1**2*t2**2*u2**(-2) + 64*m1**2*u2**(-2)*
     +    s4**2 - 192*m1**2*u2**(-1)*s4 + 112*m1**2 + 32*s**(-1)*t2*u2
     +     - 32*s**(-1)*t2*s4 + 16*s**(-1)*t2**2 - 32*s**(-1)*u2*s4 + 
     +    16*s**(-1)*u2**2 + 32*s**(-1)*s4**2 - 96*s*t2**(-1)*u2**(-1)*
     +    s4**2 - 48*s*t2**(-1)*u2 + 128*s*t2**(-1)*s4 - 48*s*t2*
     +    u2**(-1) + 128*s*u2**(-1)*s4 - 48*s + 96*s**2*t2**(-1)*
     +    u2**(-1)*s4 - 64*s**2*t2**(-1) - 64*s**2*u2**(-1) - 32*s**3*
     +    t2**(-1)*u2**(-1) + 32*t2**(-1)*u2**(-1)*s4**3 + 48*t2**(-1)*
     +    u2*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,6,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 16*t2**(-1)*u2**2 - 64*
     +    t2**(-1)*s4**2 + 48*t2*u2**(-1)*s4 + 16*t2 - 16*t2**2*
     +    u2**(-1) - 64*u2**(-1)*s4**2 + 16*u2 + 32*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,6,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 16*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*s
     +    *s4 - 32*(s+t2)**(-1)*(s+u2)**(-1)*s*s4**2 - 16*(s+t2)**(-1)*
     +    (s+u2)**(-1)*s**2*s4 - 32*(s+t2)**(-1)*(s+u2)**(-1)*s4**3 + 
     +    16*(s+t2)**(-1)*s*s4 - 16*(s+t2)**(-1)*u2*s4 + 32*
     +    (s+t2)**(-1)*s4**2 - 64*(s+u2)**(-1)*m1**2*t2*u2**(-1)*s4 + 
     +    64*(s+u2)**(-1)*m1**2*u2**(-1)*s4**2 + 16*(s+u2)**(-1)*s*s4
     +     - 16*(s+u2)**(-1)*t2*s4 + 32*(s+u2)**(-1)*s4**2 - 16*m1**2*s
     +    *t2**(-1)*u2**(-1)*s4 - 16*m1**2*s*t2**(-1) - 128*m1**2*s*t2*
     +    u2**(-2) + 128*m1**2*s*u2**(-2)*s4 - 112*m1**2*s*u2**(-1) + 
     +    16*m1**2*s**2*t2**(-1)*u2**(-1) - 64*m1**2*s**2*u2**(-2) + 
     +    128*m1**2*t2*u2**(-2)*s4 - 128*m1**2*t2*u2**(-1) - 64*m1**2*
     +    t2**2*u2**(-2) - 64*m1**2*u2**(-2)*s4**2 + 64*m1**2*u2**(-1)*
     +    s4 - 64*m1**2 + 96*s*t2**(-1)*u2**(-1)*s4**2 + 48*s*t2**(-1)*
     +    u2 - 128*s*t2**(-1)*s4 + 48*s*t2*u2**(-1) - 128*s*u2**(-1)*s4
     +     + 64*s )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,6,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 96*s**2*t2**(-1)*u2**(-1)*s4 + 64
     +    *s**2*t2**(-1) + 64*s**2*u2**(-1) + 32*s**3*t2**(-1)*u2**(-1)
     +     - 32*t2**(-1)*u2**(-1)*s4**3 - 48*t2**(-1)*u2*s4 + 16*
     +    t2**(-1)*u2**2 + 64*t2**(-1)*s4**2 - 48*t2*u2**(-1)*s4 + 16*
     +    t2 + 16*t2**2*u2**(-1) + 64*u2**(-1)*s4**2 + 16*u2 - 96*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,6,-1,1)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * (  - 32*(t2+u2)**(-1)*s**(-1)*t2
     +     - 32*(t2+u2)**(-1)*s**(-1)*u2 + 32*s**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 64*(t2+u2)**(-1)*m1**2*
     +    s**(-1)*t2*u2 + 32*(t2+u2)**(-1)*m1**2*s**(-1)*t2**2 + 32*
     +    (t2+u2)**(-1)*m1**2*s**(-1)*u2**2 - 64*(t2+u2)**(-1)*m1**2*s*
     +    t2**(-1)*u2 + 16*(t2+u2)**(-1)*m1**2*s*t2**(-1)*s4 - 48*
     +    (t2+u2)**(-1)*m1**2*s - 16*(t2+u2)**(-1)*m1**2*s**2*t2**(-1)
     +     + 32*(t2+u2)**(-1)*m1**2*t2**(-1)*u2*s4 - 48*(t2+u2)**(-1)*
     +    m1**2*t2**(-1)*u2**2 - 48*(t2+u2)**(-1)*m1**2*u2 + 32*
     +    (t2+u2)**(-1)*m1**2*s4 - 72*(t2+u2)**(-1)*s**(-1)*t2*u2*s4 + 
     +    32*(t2+u2)**(-1)*s**(-1)*t2*u2**2 + 24*(t2+u2)**(-1)*s**(-1)*
     +    t2*s4**2 + 8*(t2+u2)**(-1)*s**(-1)*t2**2*u2 - 24*
     +    (t2+u2)**(-1)*s**(-1)*t2**2*s4 + 24*(t2+u2)**(-1)*s**(-1)*u2*
     +    s4**2 - 48*(t2+u2)**(-1)*s**(-1)*u2**2*s4 + 24*(t2+u2)**(-1)*
     +    s**(-1)*u2**3 + 256*(t2+u2)**(-1)*s*t2**(-1)*u2*s4 - 160*
     +    (t2+u2)**(-1)*s*t2**(-1)*u2**2 - 96*(t2+u2)**(-1)*s*t2**(-1)*
     +    s4**2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 24*(t2+u2)**(-1)*s*t2 - 
     +    136*(t2+u2)**(-1)*s*u2 + 128*(t2+u2)**(-1)*s*s4 - 128*
     +    (t2+u2)**(-1)*s**2*t2**(-1)*u2 + 96*(t2+u2)**(-1)*s**2*
     +    t2**(-1)*s4 - 64*(t2+u2)**(-1)*s**2 - 32*(t2+u2)**(-1)*s**3*
     +    t2**(-1) - 128*(t2+u2)**(-1)*t2**(-1)*u2*s4**2 + 160*
     +    (t2+u2)**(-1)*t2**(-1)*u2**2*s4 - 64*(t2+u2)**(-1)*t2**(-1)*
     +    u2**3 + 32*(t2+u2)**(-1)*t2**(-1)*s4**3 + 8*(t2+u2)**(-1)*t2*
     +    u2 + 8*(t2+u2)**(-1)*t2**2 + 112*(t2+u2)**(-1)*u2*s4 - 48*
     +    (t2+u2)**(-1)*u2**2 - 64*(t2+u2)**(-1)*s4**2 + 64*m1**2*
     +    s**(-1)*t2*u2**(-1)*s4 - 160*m1**2*s**(-1)*t2 - 64*m1**2*
     +    s**(-1)*t2**2*u2**(-1) - 96*m1**2*s**(-1)*u2 + 64*m1**2*
     +    s**(-1)*s4 - 16*m1**2*s*t2**(-1)*u2**(-1)*s4 + 64*m1**2*s*
     +    t2**(-1) - 128*m1**2*s*t2*u2**(-2) + 128*m1**2*s*u2**(-2)*s4
     +     - 176*m1**2*s*u2**(-1) + 16*m1**2*s**2*t2**(-1)*u2**(-1) - 
     +    64*m1**2*s**2*u2**(-2) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 48*m1**2*t2**(-1)*u2 - 32*
     +    m1**2*t2**(-1)*s4 + 128*m1**2*t2*u2**(-2)*s4 - 256*m1**2*t2*
     +    u2**(-1) - 64*m1**2*t2**2*u2**(-2) - 64*m1**2*u2**(-2)*s4**2
     +     + 192*m1**2*u2**(-1)*s4 - 176*m1**2 + 24*s**(-1)*t2*u2 - 8*
     +    s**(-1)*t2*s4 + 16*s**(-1)*t2**2 - 16*s**(-1)*u2*s4 + 8*
     +    s**(-1)*u2**2 + 8*s**(-1)*s4**2 + 96*s*t2**(-1)*u2**(-1)*
     +    s4**2 + 160*s*t2**(-1)*u2 - 256*s*t2**(-1)*s4 + 48*s*t2*
     +    u2**(-1) - 128*s*u2**(-1)*s4 + 168*s - 96*s**2*t2**(-1)*
     +    u2**(-1)*s4 + 128*s**2*t2**(-1) + 64*s**2*u2**(-1) + 32*s**3*
     +    t2**(-1)*u2**(-1) - 32*t2**(-1)*u2**(-1)*s4**3 - 160*t2**(-1)
     +    *u2*s4 + 64*t2**(-1)*u2**2 + 128*t2**(-1)*s4**2 - 48*t2*
     +    u2**(-1)*s4 + 72*t2 + 16*t2**2*u2**(-1) + 64*u2**(-1)*s4**2
     +     + 112*u2 - 176*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,8,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 16*(s+u2)**(-1)*(t2+u2)**(-1)*m1**2*
     +    s*s4 - 32*(s+u2)**(-1)*(t2+u2)**(-1)*m1**2*t2*s4 - 16*
     +    (s+u2)**(-1)*(t2+u2)**(-1)*s*t2*s4 + 32*(s+u2)**(-1)*
     +    (t2+u2)**(-1)*t2*s4**2 - 32*(s+u2)**(-1)*(t2+u2)**(-1)*s4**3
     +     + 64*(s+u2)**(-1)*m1**2*t2*u2**(-1)*s4 - 64*(s+u2)**(-1)*
     +    m1**2*u2**(-1)*s4**2 + 32*(s+u2)**(-1)*m1**2*s4 - 16*
     +    (s+u2)**(-1)*t2*s4 + 64*(t2+u2)**(-1)*m1**2*s*t2**(-1)*u2 - 
     +    16*(t2+u2)**(-1)*m1**2*s*t2**(-1)*s4 + 64*(t2+u2)**(-1)*m1**2
     +    *s + 16*(t2+u2)**(-1)*m1**2*s**2*t2**(-1) - 32*(t2+u2)**(-1)*
     +    m1**2*t2**(-1)*u2*s4 + 48*(t2+u2)**(-1)*m1**2*t2**(-1)*u2**2
     +     + 48*(t2+u2)**(-1)*m1**2*t2 + 96*(t2+u2)**(-1)*m1**2*u2 - 64
     +    *(t2+u2)**(-1)*m1**2*s4 - 256*(t2+u2)**(-1)*s*t2**(-1)*u2*s4
     +     + 160*(t2+u2)**(-1)*s*t2**(-1)*u2**2 + 96*(t2+u2)**(-1)*s*
     +    t2**(-1)*s4**2 + 80*(t2+u2)**(-1)*s*t2 + 224*(t2+u2)**(-1)*s*
     +    u2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,8,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 224*(t2+u2)**(-1)*s*s4 + 128*
     +    (t2+u2)**(-1)*s**2*t2**(-1)*u2 - 96*(t2+u2)**(-1)*s**2*
     +    t2**(-1)*s4 + 96*(t2+u2)**(-1)*s**2 + 32*(t2+u2)**(-1)*s**3*
     +    t2**(-1) + 128*(t2+u2)**(-1)*t2**(-1)*u2*s4**2 - 160*
     +    (t2+u2)**(-1)*t2**(-1)*u2**2*s4 + 64*(t2+u2)**(-1)*t2**(-1)*
     +    u2**3 - 32*(t2+u2)**(-1)*t2**(-1)*s4**3 + 80*(t2+u2)**(-1)*t2
     +    *u2 - 96*(t2+u2)**(-1)*t2*s4 + 16*(t2+u2)**(-1)*t2**2 - 256*
     +    (t2+u2)**(-1)*u2*s4 + 128*(t2+u2)**(-1)*u2**2 + 160*
     +    (t2+u2)**(-1)*s4**2 + 16*m1**2*s*t2**(-1)*u2**(-1)*s4 - 64*
     +    m1**2*s*t2**(-1) + 128*m1**2*s*t2*u2**(-2) - 128*m1**2*s*
     +    u2**(-2)*s4 + 112*m1**2*s*u2**(-1) - 16*m1**2*s**2*t2**(-1)*
     +    u2**(-1) + 64*m1**2*s**2*u2**(-2) - 48*m1**2*t2**(-1)*u2 + 32
     +    *m1**2*t2**(-1)*s4 - 128*m1**2*t2*u2**(-2)*s4 + 128*m1**2*t2*
     +    u2**(-1) + 64*m1**2*t2**2*u2**(-2) + 64*m1**2*u2**(-2)*s4**2
     +     - 64*m1**2*u2**(-1)*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(2,8,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 16*m1**2 - 96*s*t2**(-1)*u2**(-1)*
     +    s4**2 - 160*s*t2**(-1)*u2 + 256*s*t2**(-1)*s4 - 48*s*t2*
     +    u2**(-1) + 128*s*u2**(-1)*s4 - 160*s + 96*s**2*t2**(-1)*
     +    u2**(-1)*s4 - 128*s**2*t2**(-1) - 64*s**2*u2**(-1) - 32*s**3*
     +    t2**(-1)*u2**(-1) + 32*t2**(-1)*u2**(-1)*s4**3 + 160*t2**(-1)
     +    *u2*s4 - 64*t2**(-1)*u2**2 - 128*t2**(-1)*s4**2 + 48*t2*
     +    u2**(-1)*s4 - 48*t2 - 16*t2**2*u2**(-1) - 64*u2**(-1)*s4**2
     +     - 96*u2 + 160*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,0,-2,0)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * (  - 64*s**(-2)*t2**2*u2 + 64*
     +    s**(-2)*t2**2*s4 - 64*s**(-2)*t2**3 - 64*s**(-1)*t2*u2 + 64*
     +    s**(-1)*t2*s4 - 128*s**(-1)*t2**2 - 64*s - 128*t2 - 64*u2 + 
     +    64*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,0,-2,0)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 32*s + 32*t2 + 32*u2 - 32*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,0,-1,0)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * ( 48 - 64*(t2+u2)**(-1)*m1**2*
     +    s**(-1)*t2 - 64*(t2+u2)**(-1)*m1**2*s**(-1)*u2 + 128*
     +    (t2+u2)**(-1)*m1**2*s**(-1)*s4 - 64*(t2+u2)**(-1)*m1**2 - 64*
     +    (t2+u2)**(-1)*s**(-2)*t2*u2*s4 + 32*(t2+u2)**(-1)*s**(-2)*t2*
     +    u2**2 + 128*(t2+u2)**(-1)*s**(-2)*t2**2*u2 - 64*(t2+u2)**(-1)
     +    *s**(-2)*t2**2*s4 + 96*(t2+u2)**(-1)*s**(-2)*t2**3 + 288*
     +    (t2+u2)**(-1)*s**(-1)*t2*u2 - 400*(t2+u2)**(-1)*s**(-1)*t2*s4
     +     + 256*(t2+u2)**(-1)*s**(-1)*t2**2 - 336*(t2+u2)**(-1)*
     +    s**(-1)*u2*s4 + 96*(t2+u2)**(-1)*s**(-1)*u2**2 + 256*
     +    (t2+u2)**(-1)*s**(-1)*s4**2 + 320*(t2+u2)**(-1)*s + 464*
     +    (t2+u2)**(-1)*t2 + 400*(t2+u2)**(-1)*u2 - 576*(t2+u2)**(-1)*
     +    s4 - 64*m1**2*s**(-1) - 32*s**(-2)*t2*u2 + 64*s**(-2)*t2*s4
     +     - 96*s**(-2)*t2**2 - 32*s**(-1)*t2 + 64*s**(-1)*u2 - 48*
     +    s**(-1)*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,0,-1,0)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 64*(t2+u2)**(-1)*s - 64*
     +    (t2+u2)**(-1)*t2 - 64*(t2+u2)**(-1)*u2 + 64*(t2+u2)**(-1)*s4
     +     )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,6,-2,1)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * (  - 64 - 128*s**(-2)*t2*u2 + 128*
     +    s**(-2)*t2*s4 - 128*s**(-2)*t2**2 - 192*s**(-1)*t2 - 64*
     +    s**(-1)*u2 + 64*s**(-1)*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,6,-2,2)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * (  - 64*s**(-2)*t2 - 64*s**(-2)*u2
     +     + 64*s**(-2)*s4 - 64*s**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,6,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 32*(t2+u2)**(-1)*m1**2*
     +    s**(-1)*t2*u2 + 64*(t2+u2)**(-1)*m1**2*s**(-1)*t2*s4 - 32*
     +    (t2+u2)**(-1)*m1**2*s**(-1)*t2**2 + 16*(t2+u2)**(-1)*m1**2*s*
     +    t2**(-1)*u2 - 16*(t2+u2)**(-1)*m1**2*s*t2**(-1)*s4 - 32*
     +    (t2+u2)**(-1)*m1**2*s + 16*(t2+u2)**(-1)*m1**2*s**2*t2**(-1)
     +     - 88*(t2+u2)**(-1)*m1**2*t2 - 24*(t2+u2)**(-1)*m1**2*u2 + 64
     +    *(t2+u2)**(-1)*m1**2*s4 - 72*(t2+u2)**(-1)*s**(-1)*t2*u2*s4
     +     + 8*(t2+u2)**(-1)*s**(-1)*t2*u2**2 + 24*(t2+u2)**(-1)*
     +    s**(-1)*t2*s4**2 + 32*(t2+u2)**(-1)*s**(-1)*t2**2*u2 - 48*
     +    (t2+u2)**(-1)*s**(-1)*t2**2*s4 + 24*(t2+u2)**(-1)*s**(-1)*
     +    t2**3 + 24*(t2+u2)**(-1)*s**(-1)*u2*s4**2 - 24*(t2+u2)**(-1)*
     +    s**(-1)*u2**2*s4 - 128*(t2+u2)**(-1)*s*t2**(-1)*u2*s4 + 32*
     +    (t2+u2)**(-1)*s*t2**(-1)*u2**2 + 96*(t2+u2)**(-1)*s*t2**(-1)*
     +    s4**2 + 184*(t2+u2)**(-1)*s*t2 + 168*(t2+u2)**(-1)*s*u2 - 256
     +    *(t2+u2)**(-1)*s*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,6,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 64*(t2+u2)**(-1)*s**2*
     +    t2**(-1)*u2 - 96*(t2+u2)**(-1)*s**2*t2**(-1)*s4 + 128*
     +    (t2+u2)**(-1)*s**2 + 32*(t2+u2)**(-1)*s**3*t2**(-1) + 64*
     +    (t2+u2)**(-1)*t2**(-1)*u2*s4**2 - 32*(t2+u2)**(-1)*t2**(-1)*
     +    u2**2*s4 - 32*(t2+u2)**(-1)*t2**(-1)*s4**3 + 136*
     +    (t2+u2)**(-1)*t2*u2 - 208*(t2+u2)**(-1)*t2*s4 + 112*
     +    (t2+u2)**(-1)*t2**2 - 192*(t2+u2)**(-1)*u2*s4 + 40*
     +    (t2+u2)**(-1)*u2**2 + 128*(t2+u2)**(-1)*s4**2 - 32*m1**2*
     +    s**(-1)*t2 - 32*m1**2*s*t2**(-1) - 56*m1**2 + 24*s**(-1)*t2*
     +    u2 - 16*s**(-1)*t2*s4 + 8*s**(-1)*t2**2 - 8*s**(-1)*u2*s4 + 
     +    16*s**(-1)*u2**2 + 8*s**(-1)*s4**2 + 16*s*t2**(-1)*u2 + 8*s
     +     - 16*t2**(-1)*u2*s4 + 16*t2**(-1)*u2**2 + 16*t2 + 40*u2 - 16
     +    *s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,6,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 16*(s+t2)**(-1)*(t2+u2)**(-1)*
     +    m1**2*s*s4 - 16*(s+t2)**(-1)*(t2+u2)**(-1)*s*u2*s4 + 32*
     +    (s+t2)**(-1)*(t2+u2)**(-1)*u2*s4**2 - 32*(s+t2)**(-1)*
     +    (t2+u2)**(-1)*s4**3 - 16*(s+t2)**(-1)*u2*s4 - 16*
     +    (t2+u2)**(-1)*m1**2*s*t2**(-1)*u2 + 16*(t2+u2)**(-1)*m1**2*s*
     +    t2**(-1)*s4 + 48*(t2+u2)**(-1)*m1**2*s - 16*(t2+u2)**(-1)*
     +    m1**2*s**2*t2**(-1) + 32*(t2+u2)**(-1)*m1**2*t2 + 32*
     +    (t2+u2)**(-1)*m1**2*u2 - 64*(t2+u2)**(-1)*m1**2*s4 + 128*
     +    (t2+u2)**(-1)*s*t2**(-1)*u2*s4 - 32*(t2+u2)**(-1)*s*t2**(-1)*
     +    u2**2 - 96*(t2+u2)**(-1)*s*t2**(-1)*s4**2 - 96*(t2+u2)**(-1)*
     +    s*t2 - 112*(t2+u2)**(-1)*s*u2 + 160*(t2+u2)**(-1)*s*s4 - 64*
     +    (t2+u2)**(-1)*s**2*t2**(-1)*u2 + 96*(t2+u2)**(-1)*s**2*
     +    t2**(-1)*s4 - 96*(t2+u2)**(-1)*s**2 - 32*(t2+u2)**(-1)*s**3*
     +    t2**(-1) - 64*(t2+u2)**(-1)*t2**(-1)*u2*s4**2 + 32*
     +    (t2+u2)**(-1)*t2**(-1)*u2**2*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,6,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 32*(t2+u2)**(-1)*t2**(-1)*s4**3 - 48
     +    *(t2+u2)**(-1)*t2*u2 + 64*(t2+u2)**(-1)*t2*s4 - 32*
     +    (t2+u2)**(-1)*t2**2 + 96*(t2+u2)**(-1)*u2*s4 - 16*
     +    (t2+u2)**(-1)*u2**2 - 32*(t2+u2)**(-1)*s4**2 + 32*m1**2*s*
     +    t2**(-1) + 32*m1**2 - 16*s*t2**(-1)*u2 + 16*t2**(-1)*u2*s4 - 
     +    16*t2**(-1)*u2**2 - 16*u2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,6,-1,1)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * (  - 32*(t2+u2)**(-1)*m1**2*
     +    s**(-1) + 32*(t2+u2)**(-1)*m2**2*s**(-1) + 256*(t2+u2)**(-1)*
     +    s**(-2)*t2*u2 - 192*(t2+u2)**(-1)*s**(-2)*t2*s4 + 224*
     +    (t2+u2)**(-1)*s**(-2)*t2**2 - 64*(t2+u2)**(-1)*s**(-2)*u2*s4
     +     + 32*(t2+u2)**(-1)*s**(-2)*u2**2 + 320*(t2+u2)**(-1)*s**(-1)
     +    *t2 + 192*(t2+u2)**(-1)*s**(-1)*u2 - 160*(t2+u2)**(-1)*
     +    s**(-1)*s4 + 160*(t2+u2)**(-1) - 96*s**(-2)*t2 - 32*s**(-2)*
     +    u2 + 64*s**(-2)*s4 - 32*s**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,6,-1,2)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * ( 128*(t2+u2)**(-1)*s**(-2)*t2 + 
     +    128*(t2+u2)**(-1)*s**(-2)*u2 - 128*(t2+u2)**(-1)*s**(-2)*s4
     +     + 128*(t2+u2)**(-1)*s**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,7,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 32*(t2+u2)**(-1)*m1**2*
     +    s**(-1)*t2*u2 + 64*(t2+u2)**(-1)*m1**2*s**(-1)*u2*s4 - 32*
     +    (t2+u2)**(-1)*m1**2*s**(-1)*u2**2 + 16*(t2+u2)**(-1)*m1**2*s*
     +    t2*u2**(-1) - 16*(t2+u2)**(-1)*m1**2*s*u2**(-1)*s4 - 32*
     +    (t2+u2)**(-1)*m1**2*s + 16*(t2+u2)**(-1)*m1**2*s**2*u2**(-1)
     +     - 24*(t2+u2)**(-1)*m1**2*t2 - 88*(t2+u2)**(-1)*m1**2*u2 + 64
     +    *(t2+u2)**(-1)*m1**2*s4 - 72*(t2+u2)**(-1)*s**(-1)*t2*u2*s4
     +     + 32*(t2+u2)**(-1)*s**(-1)*t2*u2**2 + 24*(t2+u2)**(-1)*
     +    s**(-1)*t2*s4**2 + 8*(t2+u2)**(-1)*s**(-1)*t2**2*u2 - 24*
     +    (t2+u2)**(-1)*s**(-1)*t2**2*s4 + 24*(t2+u2)**(-1)*s**(-1)*u2*
     +    s4**2 - 48*(t2+u2)**(-1)*s**(-1)*u2**2*s4 + 24*(t2+u2)**(-1)*
     +    s**(-1)*u2**3 - 128*(t2+u2)**(-1)*s*t2*u2**(-1)*s4 + 168*
     +    (t2+u2)**(-1)*s*t2 + 32*(t2+u2)**(-1)*s*t2**2*u2**(-1) + 96*
     +    (t2+u2)**(-1)*s*u2**(-1)*s4**2 + 184*(t2+u2)**(-1)*s*u2 - 256
     +    *(t2+u2)**(-1)*s*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,7,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 64*(t2+u2)**(-1)*s**2*t2*
     +    u2**(-1) - 96*(t2+u2)**(-1)*s**2*u2**(-1)*s4 + 128*
     +    (t2+u2)**(-1)*s**2 + 32*(t2+u2)**(-1)*s**3*u2**(-1) + 64*
     +    (t2+u2)**(-1)*t2*u2**(-1)*s4**2 + 136*(t2+u2)**(-1)*t2*u2 - 
     +    192*(t2+u2)**(-1)*t2*s4 - 32*(t2+u2)**(-1)*t2**2*u2**(-1)*s4
     +     + 40*(t2+u2)**(-1)*t2**2 - 32*(t2+u2)**(-1)*u2**(-1)*s4**3
     +     - 208*(t2+u2)**(-1)*u2*s4 + 112*(t2+u2)**(-1)*u2**2 + 128*
     +    (t2+u2)**(-1)*s4**2 - 32*m1**2*s**(-1)*u2 - 32*m1**2*s*
     +    u2**(-1) - 56*m1**2 + 24*s**(-1)*t2*u2 - 8*s**(-1)*t2*s4 + 16
     +    *s**(-1)*t2**2 - 16*s**(-1)*u2*s4 + 8*s**(-1)*u2**2 + 8*
     +    s**(-1)*s4**2 + 16*s*t2*u2**(-1) + 8*s - 16*t2*u2**(-1)*s4 + 
     +    40*t2 + 16*t2**2*u2**(-1) + 16*u2 - 16*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,7,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 16*(s+u2)**(-1)*(t2+u2)**(-1)*
     +    m1**2*s*s4 - 16*(s+u2)**(-1)*(t2+u2)**(-1)*s*t2*s4 + 32*
     +    (s+u2)**(-1)*(t2+u2)**(-1)*t2*s4**2 - 32*(s+u2)**(-1)*
     +    (t2+u2)**(-1)*s4**3 - 16*(s+u2)**(-1)*t2*s4 - 16*
     +    (t2+u2)**(-1)*m1**2*s*t2*u2**(-1) + 16*(t2+u2)**(-1)*m1**2*s*
     +    u2**(-1)*s4 + 48*(t2+u2)**(-1)*m1**2*s - 16*(t2+u2)**(-1)*
     +    m1**2*s**2*u2**(-1) + 32*(t2+u2)**(-1)*m1**2*t2 + 32*
     +    (t2+u2)**(-1)*m1**2*u2 - 64*(t2+u2)**(-1)*m1**2*s4 + 128*
     +    (t2+u2)**(-1)*s*t2*u2**(-1)*s4 - 112*(t2+u2)**(-1)*s*t2 - 32*
     +    (t2+u2)**(-1)*s*t2**2*u2**(-1) - 96*(t2+u2)**(-1)*s*u2**(-1)*
     +    s4**2 - 96*(t2+u2)**(-1)*s*u2 + 160*(t2+u2)**(-1)*s*s4 - 64*
     +    (t2+u2)**(-1)*s**2*t2*u2**(-1) + 96*(t2+u2)**(-1)*s**2*
     +    u2**(-1)*s4 - 96*(t2+u2)**(-1)*s**2 - 32*(t2+u2)**(-1)*s**3*
     +    u2**(-1) - 64*(t2+u2)**(-1)*t2*u2**(-1)*s4**2 - 48*
     +    (t2+u2)**(-1)*t2*u2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,7,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 96*(t2+u2)**(-1)*t2*s4 + 32*
     +    (t2+u2)**(-1)*t2**2*u2**(-1)*s4 - 16*(t2+u2)**(-1)*t2**2 + 32
     +    *(t2+u2)**(-1)*u2**(-1)*s4**3 + 64*(t2+u2)**(-1)*u2*s4 - 32*
     +    (t2+u2)**(-1)*u2**2 - 32*(t2+u2)**(-1)*s4**2 + 32*m1**2*s*
     +    u2**(-1) + 32*m1**2 - 16*s*t2*u2**(-1) + 16*t2*u2**(-1)*s4 - 
     +    16*t2 - 16*t2**2*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,7,1,-1)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * (  - 56*(t2+u2)**(-1)*m1**2*
     +    s**(-1) - 64*(t2+u2)**(-1)*m1**2*u2**(-1) + 56*(t2+u2)**(-1)*
     +    m2**2*s**(-1) + 64*(t2+u2)**(-1)*m2**2*u2**(-1) + 24*
     +    (t2+u2)**(-1)*s**(-1)*t2 + 24*(t2+u2)**(-1)*s**(-1)*u2 - 56*
     +    (t2+u2)**(-1)*s**(-1)*s4 + 64*(t2+u2)**(-1)*s*u2**(-1) + 64*
     +    (t2+u2)**(-1)*t2*u2**(-1) - 64*(t2+u2)**(-1)*u2**(-1)*s4 + 
     +    120*(t2+u2)**(-1) + 32*m1**2*s**(-1)*u2**(-1) - 32*m2**2*
     +    s**(-1)*u2**(-1) - 32*s**(-1)*t2*u2**(-1) + 32*s**(-1)*
     +    u2**(-1)*s4 - 32*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(5,7,1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 64*(t2+u2)**(-1)*m1**2*u2**(-1) - 64
     +    *(t2+u2)**(-1)*m2**2*u2**(-1) - 64*(t2+u2)**(-1)*s*u2**(-1)
     +     - 64*(t2+u2)**(-1)*t2*u2**(-1) + 64*(t2+u2)**(-1)*u2**(-1)*
     +    s4 - 64*(t2+u2)**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,0,-1,0)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * ( 32 + 8*(t2+u2)**(-1)*m1**2*m2**2
     +    *s**(-1) - 40*(t2+u2)**(-1)*m1**2*s**(-1)*t2 - 32*
     +    (t2+u2)**(-1)*m1**2*s**(-1)*u2 + 24*(t2+u2)**(-1)*m1**2*
     +    s**(-1)*s4 - 32*(t2+u2)**(-1)*m1**2 - 8*(t2+u2)**(-1)*m1**4*
     +    s**(-1) + 40*(t2+u2)**(-1)*m2**2*s**(-1)*t2 + 32*
     +    (t2+u2)**(-1)*m2**2*s**(-1)*u2 - 32*(t2+u2)**(-1)*m2**2*
     +    s**(-1)*s4 + 40*(t2+u2)**(-1)*m2**2 + 8*(t2+u2)**(-1)*s**(-1)
     +    *t2*u2 - 64*(t2+u2)**(-1)*s**(-1)*t2*s4 + 8*(t2+u2)**(-1)*
     +    s**(-1)*t2**2 - 56*(t2+u2)**(-1)*s**(-1)*u2*s4 + 32*
     +    (t2+u2)**(-1)*s**(-1)*s4**2 + 32*(t2+u2)**(-1)*s*t2**(-1)*u2
     +     + 72*(t2+u2)**(-1)*s - 32*(t2+u2)**(-1)*t2**(-1)*u2*s4 + 80*
     +    (t2+u2)**(-1)*t2 + 72*(t2+u2)**(-1)*u2 - 104*(t2+u2)**(-1)*s4
     +     - 24*m1**2*s**(-1) + 32*m2**2*s**(-1) + 64*s**(-1)*t2 + 64*
     +    s**(-1)*u2 - 40*s**(-1)*s4 - 32*s*t2**(-1) + 32*t2**(-1)*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,0,-1,0)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 32 + 32*(s+t2)**(-1)*(t2+u2)**(-1)*
     +    m1**2*s4 - 32*(s+t2)**(-1)*(t2+u2)**(-1)*m2**2*s4 - 32*
     +    (s+t2)**(-1)*(t2+u2)**(-1)*s*s4 + 32*(s+t2)**(-1)*
     +    (t2+u2)**(-1)*s4**2 - 32*(s+t2)**(-1)*s4 - 16*(t2+u2)**(-1)*
     +    m1**2 + 16*(t2+u2)**(-1)*m2**2 - 32*(t2+u2)**(-1)*s*t2**(-1)*
     +    u2 - 16*(t2+u2)**(-1)*s + 32*(t2+u2)**(-1)*t2**(-1)*u2*s4 - 
     +    16*(t2+u2)**(-1)*t2 - 16*(t2+u2)**(-1)*u2 + 16*(t2+u2)**(-1)*
     +    s4 + 32*s*t2**(-1) - 32*t2**(-1)*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,0,1,0)*(h_r2+h_l2)*Nc**2*
     + Cf*Pi**2*alphas**2*hardfac * (  - 32*(t2+u2)**(-1)*m1**2*s**(-2)
     +     + 32*(t2+u2)**(-1)*m2**2*s**(-2) + 32*(t2+u2)**(-1)*s**(-2)*
     +    t2 + 32*(t2+u2)**(-1)*s**(-2)*u2 - 32*(t2+u2)**(-1)*s**(-2)*
     +    s4 + 32*(t2+u2)**(-1)*s**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,7,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 16*(s+t2)**(-1)*(s+u2)**(-1)*m1**2*s
     +    *s4 - 32*(s+t2)**(-1)*(s+u2)**(-1)*s*s4**2 - 16*(s+t2)**(-1)*
     +    (s+u2)**(-1)*s**2*s4 - 32*(s+t2)**(-1)*(s+u2)**(-1)*s4**3 + 
     +    64*(s+t2)**(-1)*m1**2*m2**2*t2**(-1)*s4 - 16*(s+t2)**(-1)*
     +    m1**2*s4 - 64*(s+t2)**(-1)*m1**4*t2**(-1)*s4 + 16*
     +    (s+t2)**(-1)*m2**2*s4 + 16*(s+t2)**(-1)*s*s4 + 16*
     +    (s+t2)**(-1)*s4**2 - 64*(s+u2)**(-1)*m1**2*t2*u2**(-1)*s4 + 
     +    64*(s+u2)**(-1)*m1**2*u2**(-1)*s4**2 + 16*(s+u2)**(-1)*s*s4
     +     - 16*(s+u2)**(-1)*t2*s4 + 32*(s+u2)**(-1)*s4**2 - 64*m1**2*
     +    m2**2*s**(-1)*t2**(-1)*s4 + 32*m1**2*m2**2*s**(-1) + 64*m1**2
     +    *s**(-1)*t2*u2**(-1)*s4 - 64*m1**2*s**(-1)*u2**(-1)*s4**2 + 
     +    32*m1**2*s**(-1)*s4 - 32*m1**2 - 128*m1**4*m2**2*s**(-2) + 64
     +    *m1**4*s**(-1)*t2**(-1)*s4 - 32*m1**4*s**(-1) + 128*m1**6*
     +    s**(-2) - 16*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,8,-2,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 32*m1**2*m2**2 + 128*
     +    m1**2*s*t2*u2**(-1) - 128*m1**2*s*u2**(-1)*s4 + 32*m1**2*s + 
     +    64*m1**2*s**2*u2**(-1) - 128*m1**2*t2*u2**(-1)*s4 + 32*m1**2*
     +    t2 + 64*m1**2*t2**2*u2**(-1) + 64*m1**2*u2**(-1)*s4**2 - 32*
     +    m1**2*s4 + 32*m1**4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,8,-2,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 32*m1**2*m2**2 - 128*m1**2*s*t2*
     +    u2**(-1) + 128*m1**2*s*u2**(-1)*s4 - 32*m1**2*s - 64*m1**2*
     +    s**2*u2**(-1) + 128*m1**2*t2*u2**(-1)*s4 - 32*m1**2*t2 - 64*
     +    m1**2*t2**2*u2**(-1) - 64*m1**2*u2**(-1)*s4**2 + 32*m1**2*s4
     +     - 32*m1**4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 32*(t2+u2)**(-1)*m1**2*
     +    m2**2*s**(-1)*t2 + 48*(t2+u2)**(-1)*m1**2*m2**2 + 16*
     +    (t2+u2)**(-1)*m1**2*m2**4*s**(-1) + 32*(t2+u2)**(-1)*m1**2*
     +    s**(-1)*t2*s4 - 16*(t2+u2)**(-1)*m1**2*s**(-1)*s4**2 - 16*
     +    (t2+u2)**(-1)*m1**2*s*t2**(-1)*s4 - 8*(t2+u2)**(-1)*m1**2*s
     +     + 16*(t2+u2)**(-1)*m1**2*s**2*t2**(-1) - 24*(t2+u2)**(-1)*
     +    m1**2*t2 + 40*(t2+u2)**(-1)*m1**2*s4 - 32*(t2+u2)**(-1)*m1**4
     +    *m2**2*s**(-1) - 32*(t2+u2)**(-1)*m1**4*s**(-1)*t2 - 48*
     +    (t2+u2)**(-1)*m1**4 + 16*(t2+u2)**(-1)*m1**6*s**(-1) - 8*
     +    (t2+u2)**(-1)*m2**2*s - 8*(t2+u2)**(-1)*m2**2*t2 + 8*
     +    (t2+u2)**(-1)*m2**2*s4 + 96*(t2+u2)**(-1)*s*t2**(-1)*s4**2 + 
     +    40*(t2+u2)**(-1)*s*t2 - 112*(t2+u2)**(-1)*s*s4 - 96*
     +    (t2+u2)**(-1)*s**2*t2**(-1)*s4 + 56*(t2+u2)**(-1)*s**2 + 32*
     +    (t2+u2)**(-1)*s**3*t2**(-1) - 32*(t2+u2)**(-1)*t2**(-1)*s4**3
     +     - 40*(t2+u2)**(-1)*t2*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 16*(t2+u2)**(-1)*t2**2 + 56
     +    *(t2+u2)**(-1)*s4**2 - 48*m1**2*m2**2*s**(-1) - 64*m1**2*
     +    s**(-1)*t2*u2**(-1)*s4 + 32*m1**2*s**(-1)*t2 + 64*m1**2*
     +    s**(-1)*t2**2*u2**(-1) + 16*m1**2*s**(-1)*s4 + 16*m1**2*s*
     +    t2**(-1)*u2**(-1)*s4 + 128*m1**2*s*t2*u2**(-2) - 128*m1**2*s*
     +    u2**(-2)*s4 + 176*m1**2*s*u2**(-1) - 16*m1**2*s**2*t2**(-1)*
     +    u2**(-1) + 64*m1**2*s**2*u2**(-2) - 128*m1**2*t2*u2**(-2)*s4
     +     + 256*m1**2*t2*u2**(-1) + 64*m1**2*t2**2*u2**(-2) + 64*m1**2
     +    *u2**(-2)*s4**2 - 192*m1**2*u2**(-1)*s4 + 96*m1**2 + 48*m1**4
     +    *s**(-1) - 32*m2**2 - 96*s*t2**(-1)*u2**(-1)*s4**2 - 48*s*t2*
     +    u2**(-1) + 128*s*u2**(-1)*s4 + 8*s + 96*s**2*t2**(-1)*
     +    u2**(-1)*s4 - 64*s**2*u2**(-1) - 32*s**3*t2**(-1)*u2**(-1) + 
     +    32*t2**(-1)*u2**(-1)*s4**3 + 48*t2*u2**(-1)*s4 - 8*t2 - 16*
     +    t2**2*u2**(-1) - 64*u2**(-1)*s4**2 - 8*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,8,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 32*(s+t2)**(-1)*(t2+u2)**(-1)*m1**2*
     +    m2**2*s4 - 32*(s+t2)**(-1)*(t2+u2)**(-1)*m1**4*s4 + 16*
     +    (s+t2)**(-1)*(t2+u2)**(-1)*m2**2*s*s4 - 32*(s+t2)**(-1)*
     +    (t2+u2)**(-1)*m2**2*s4**2 - 16*(s+t2)**(-1)*(t2+u2)**(-1)*s*
     +    s4**2 - 64*(s+t2)**(-1)*m1**2*m2**2*t2**(-1)*s4 + 16*
     +    (s+t2)**(-1)*m1**2*s4 + 64*(s+t2)**(-1)*m1**4*t2**(-1)*s4 + 
     +    16*(s+t2)**(-1)*m2**2*s4 - 16*(s+t2)**(-1)*s4**2 - 96*
     +    (t2+u2)**(-1)*m1**2*m2**2 + 16*(t2+u2)**(-1)*m1**2*s*t2**(-1)
     +    *s4 - 16*(t2+u2)**(-1)*m1**2*s - 16*(t2+u2)**(-1)*m1**2*s**2*
     +    t2**(-1) + 96*(t2+u2)**(-1)*m1**4 - 16*(t2+u2)**(-1)*m2**2*s
     +     + 32*(t2+u2)**(-1)*m2**2*s4 - 96*(t2+u2)**(-1)*s*t2**(-1)*
     +    s4**2 - 16*(t2+u2)**(-1)*s*t2 + 96*(t2+u2)**(-1)*s*s4 + 96*
     +    (t2+u2)**(-1)*s**2*t2**(-1)*s4 - 48*(t2+u2)**(-1)*s**2 - 32*
     +    (t2+u2)**(-1)*s**3*t2**(-1) + 32*(t2+u2)**(-1)*t2**(-1)*s4**3
     +     - 32*(t2+u2)**(-1)*s4**2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,8,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 64*m1**2*m2**2*s**(-1)*t2**(-1)*s4
     +     - 32*m1**2*m2**2*s**(-1) - 64*m1**2*s**(-1)*t2*u2**(-1)*s4
     +     + 64*m1**2*s**(-1)*u2**(-1)*s4**2 - 32*m1**2*s**(-1)*s4 - 16
     +    *m1**2*s*t2**(-1)*u2**(-1)*s4 - 128*m1**2*s*t2*u2**(-2) + 128
     +    *m1**2*s*u2**(-2)*s4 - 112*m1**2*s*u2**(-1) + 16*m1**2*s**2*
     +    t2**(-1)*u2**(-1) - 64*m1**2*s**2*u2**(-2) + 128*m1**2*t2*
     +    u2**(-2)*s4 - 128*m1**2*t2*u2**(-1) - 64*m1**2*t2**2*u2**(-2)
     +     - 64*m1**2*u2**(-2)*s4**2 + 64*m1**2*u2**(-1)*s4 - 80*m1**2
     +     + 128*m1**4*m2**2*s**(-2) - 64*m1**4*s**(-1)*t2**(-1)*s4 + 
     +    32*m1**4*s**(-1) - 128*m1**6*s**(-2) + 16*m2**2 + 96*s*
     +    t2**(-1)*u2**(-1)*s4**2 + 48*s*t2*u2**(-1) - 128*s*u2**(-1)*
     +    s4 - 16*s - 96*s**2*t2**(-1)*u2**(-1)*s4 + 64*s**2*u2**(-1)
     +     + 32*s**3*t2**(-1)*u2**(-1) - 32*t2**(-1)*u2**(-1)*s4**3 - 
     +    48*t2*u2**(-1)*s4 + 16*t2**2*u2**(-1) + 64*u2**(-1)*s4**2 + 
     +    32*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,8,1,-1)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * ( 64*(t2+u2)**(-1)*m1**2*m2**2*
     +    s**(-2) + 64*(t2+u2)**(-1)*m1**2*s**(-2)*t2 + 104*
     +    (t2+u2)**(-1)*m1**2*s**(-1) - 32*(t2+u2)**(-1)*m1**4*s**(-2)
     +     - 64*(t2+u2)**(-1)*m2**2*s**(-2)*t2 - 104*(t2+u2)**(-1)*
     +    m2**2*s**(-1) - 32*(t2+u2)**(-1)*m2**4*s**(-2) - 64*
     +    (t2+u2)**(-1)*s**(-2)*t2*s4 + 32*(t2+u2)**(-1)*s**(-2)*s4**2
     +     + 88*(t2+u2)**(-1)*s**(-1)*t2 + 24*(t2+u2)**(-1)*s**(-1)*u2
     +     - 88*(t2+u2)**(-1)*s**(-1)*s4 - 64*(t2+u2)**(-1)*t2**(-1)*u2
     +     + 64*(t2+u2)**(-1)*t2*u2**(-1) + 56*(t2+u2)**(-1) + 32*m1**2
     +    *s**(-2) - 32*m2**2*s**(-2) + 64*s**(-2)*t2 - 32*s**(-2)*s4
     +     + 32*s**(-1) + 64*t2**(-1) - 64*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,8,1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 64*(t2+u2)**(-1)*t2**(-1)*u2 - 64*
     +    (t2+u2)**(-1)*t2*u2**(-1) - 64*t2**(-1) + 64*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(6,8,2,-1)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * ( 128*(t2+u2)**(-1)*m1**2*s**(-2)
     +     - 128*(t2+u2)**(-1)*m2**2*s**(-2) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(7,0,-1,0)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * (  - 24 + 24*(t2+u2)**(-1)*m1**2*
     +    m2**2*s**(-1) + 112*(t2+u2)**(-1)*m1**2*m2**2*u2**(-1) - 48*
     +    (t2+u2)**(-1)*m1**2*s**(-1)*t2 - 88*(t2+u2)**(-1)*m1**2*
     +    s**(-1)*u2 + 32*(t2+u2)**(-1)*m1**2*s**(-1)*s4 - 16*
     +    (t2+u2)**(-1)*m1**2*s*u2**(-1) + 48*(t2+u2)**(-1)*m1**2*t2*
     +    u2**(-1) + 16*(t2+u2)**(-1)*m1**2*u2**(-1)*s4 - 72*
     +    (t2+u2)**(-1)*m1**2 - 80*(t2+u2)**(-1)*m1**4*u2**(-1) + 16*
     +    (t2+u2)**(-1)*m2**2*s**(-1)*t2 + 56*(t2+u2)**(-1)*m2**2*
     +    s**(-1)*u2 - 8*(t2+u2)**(-1)*m2**2*s**(-1)*s4 + 64*
     +    (t2+u2)**(-1)*m2**2*s*u2**(-1) - 64*(t2+u2)**(-1)*m2**2*
     +    u2**(-1)*s4 + 96*(t2+u2)**(-1)*m2**2 - 24*(t2+u2)**(-1)*m2**4
     +    *s**(-1) - 32*(t2+u2)**(-1)*m2**4*u2**(-1) + 56*(t2+u2)**(-1)
     +    *s**(-1)*t2*u2 - 64*(t2+u2)**(-1)*s**(-1)*t2*s4 + 8*
     +    (t2+u2)**(-1)*s**(-1)*t2**2 - 104*(t2+u2)**(-1)*s**(-1)*u2*s4
     +     + 48*(t2+u2)**(-1)*s**(-1)*u2**2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(7,0,-1,0)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * ( 32*(t2+u2)**(-1)*s**(-1)*s4**2
     +     + 160*(t2+u2)**(-1)*s*t2*u2**(-1) - 192*(t2+u2)**(-1)*s*
     +    u2**(-1)*s4 + 280*(t2+u2)**(-1)*s + 96*(t2+u2)**(-1)*s**2*
     +    u2**(-1) - 160*(t2+u2)**(-1)*t2*u2**(-1)*s4 + 224*
     +    (t2+u2)**(-1)*t2 + 32*(t2+u2)**(-1)*t2**2*u2**(-1) + 96*
     +    (t2+u2)**(-1)*u2**(-1)*s4**2 + 232*(t2+u2)**(-1)*u2 - 312*
     +    (t2+u2)**(-1)*s4 - 64*m1**2*m2**2*s**(-1)*u2**(-1) - 16*m1**2
     +    *s**(-1)*t2*u2**(-1) + 32*m1**2*s**(-1)*u2**(-1)*s4 - 16*
     +    m1**2*s**(-1) - 48*m1**2*u2**(-1) + 48*m1**4*s**(-1)*u2**(-1)
     +     - 16*m2**2*s**(-1)*t2*u2**(-1) - 8*m2**2*s**(-1) + 16*m2**2*
     +    u2**(-1) + 16*m2**4*s**(-1)*u2**(-1) + 48*s**(-1)*t2*u2**(-1)
     +    *s4 - 24*s**(-1)*t2 - 32*s**(-1)*t2**2*u2**(-1) - 16*s**(-1)*
     +    u2**(-1)*s4**2 + 8*s**(-1)*u2 + 32*s**(-1)*s4 - 32*s*u2**(-1)
     +     - 32*t2*u2**(-1) + 48*u2**(-1)*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(7,0,-1,0)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 32*(s+u2)**(-1)*(t2+u2)**(-1)*s*
     +    s4 + 32*(s+u2)**(-1)*(t2+u2)**(-1)*t2*s4 - 32*(s+u2)**(-1)*s4
     +     - 112*(t2+u2)**(-1)*m1**2*m2**2*u2**(-1) + 16*(t2+u2)**(-1)*
     +    m1**2*s*u2**(-1) - 48*(t2+u2)**(-1)*m1**2*t2*u2**(-1) - 16*
     +    (t2+u2)**(-1)*m1**2*u2**(-1)*s4 - 16*(t2+u2)**(-1)*m1**2 + 80
     +    *(t2+u2)**(-1)*m1**4*u2**(-1) - 64*(t2+u2)**(-1)*m2**2*s*
     +    u2**(-1) + 64*(t2+u2)**(-1)*m2**2*u2**(-1)*s4 - 32*
     +    (t2+u2)**(-1)*m2**2 + 32*(t2+u2)**(-1)*m2**4*u2**(-1) - 160*
     +    (t2+u2)**(-1)*s*t2*u2**(-1) + 192*(t2+u2)**(-1)*s*u2**(-1)*s4
     +     - 192*(t2+u2)**(-1)*s - 96*(t2+u2)**(-1)*s**2*u2**(-1) + 160
     +    *(t2+u2)**(-1)*t2*u2**(-1)*s4 - 128*(t2+u2)**(-1)*t2 - 32*
     +    (t2+u2)**(-1)*t2**2*u2**(-1) - 96*(t2+u2)**(-1)*u2**(-1)*
     +    s4**2 - 96*(t2+u2)**(-1)*u2 + 224*(t2+u2)**(-1)*s4 + 32*m1**2
     +    *u2**(-1) - 32*m2**2*u2**(-1) - 32*t2*u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(7,8,-2,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 64*m1**2*m2**2 + 64*m1**2*
     +    m2**4*t2**(-1) + 32*m1**2*t2 - 128*m1**4*m2**2*t2**(-1) - 64*
     +    m1**4 + 64*m1**6*t2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(7,8,-2,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 64*m1**2*m2**2 - 64*m1**2*m2**4*
     +    t2**(-1) - 32*m1**2*t2 + 128*m1**4*m2**2*t2**(-1) + 64*m1**4
     +     - 64*m1**6*t2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(7,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 32*(t2+u2)**(-1)*m1**2*
     +    m2**2*s**(-1)*t2 - 48*(t2+u2)**(-1)*m1**2*m2**2*s*u2**(-1) + 
     +    64*(t2+u2)**(-1)*m1**2*m2**2*t2*u2**(-1) + 32*(t2+u2)**(-1)*
     +    m1**2*m2**2*u2**(-1)*s4 + 32*(t2+u2)**(-1)*m1**2*m2**2 - 16*
     +    (t2+u2)**(-1)*m1**2*m2**4*s**(-1) + 32*(t2+u2)**(-1)*m1**2*
     +    m2**4*u2**(-1) - 32*(t2+u2)**(-1)*m1**2*s**(-1)*t2*s4 + 16*
     +    (t2+u2)**(-1)*m1**2*s**(-1)*s4**2 - 48*(t2+u2)**(-1)*m1**2*s*
     +    t2*u2**(-1) - 24*(t2+u2)**(-1)*m1**2*s + 32*(t2+u2)**(-1)*
     +    m1**2*t2*u2**(-1)*s4 + 24*(t2+u2)**(-1)*m1**2*t2 + 32*
     +    (t2+u2)**(-1)*m1**2*t2**2*u2**(-1) + 8*(t2+u2)**(-1)*m1**2*s4
     +     + 32*(t2+u2)**(-1)*m1**4*m2**2*s**(-1) - 64*(t2+u2)**(-1)*
     +    m1**4*m2**2*u2**(-1) + 32*(t2+u2)**(-1)*m1**4*s**(-1)*t2 + 16
     +    *(t2+u2)**(-1)*m1**4*s*u2**(-1) - 64*(t2+u2)**(-1)*m1**4*t2*
     +    u2**(-1) - 56*(t2+u2)**(-1)*m1**4 - 16*(t2+u2)**(-1)*m1**6*
     +    s**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(7,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * ( 32*(t2+u2)**(-1)*m1**6*
     +    u2**(-1) + 64*(t2+u2)**(-1)*m2**2*s*t2*u2**(-1) + 24*
     +    (t2+u2)**(-1)*m2**2*s - 64*(t2+u2)**(-1)*m2**2*t2*u2**(-1)*s4
     +     + 40*(t2+u2)**(-1)*m2**2*t2 - 24*(t2+u2)**(-1)*m2**2*s4 + 32
     +    *(t2+u2)**(-1)*m2**4*s*u2**(-1) - 32*(t2+u2)**(-1)*m2**4*
     +    u2**(-1)*s4 + 24*(t2+u2)**(-1)*m2**4 + 24*(t2+u2)**(-1)*s*t2
     +     + 32*(t2+u2)**(-1)*s*t2**2*u2**(-1) - 24*(t2+u2)**(-1)*t2*s4
     +     - 32*(t2+u2)**(-1)*t2**2*u2**(-1)*s4 + 16*(t2+u2)**(-1)*
     +    t2**2 - 64*m1**2*m2**2*s**(-1)*t2**(-1)*s4 + 48*m1**2*m2**2*
     +    s**(-1) + 48*m1**2*m2**2*s*t2**(-1)*u2**(-1) - 32*m1**2*m2**2
     +    *t2**(-1)*u2**(-1)*s4 - 64*m1**2*m2**2*u2**(-1) + 64*m1**2*
     +    m2**4*s**(-1)*t2**(-1) + 64*m1**2*m2**4*t2**(-2) - 32*m1**2*
     +    m2**4*t2**(-1)*u2**(-1) + 32*m1**2*s**(-1)*t2 - 16*m1**2*
     +    s**(-1)*s4 + 16*m1**2*s*t2**(-1) + 48*m1**2*s*u2**(-1) - 16*
     +    m1**2*t2**(-1)*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(7,8,-1,-1)*(h_r2+h_l2)*
     + Nc**2*Cf*Pi**2*alphas**2*hardfac * (  - 32*m1**2*t2*u2**(-1) - 
     +    32*m1**2*u2**(-1)*s4 - 8*m1**2 - 128*m1**4*m2**2*s**(-1)*
     +    t2**(-1) - 128*m1**4*m2**2*t2**(-2) + 64*m1**4*m2**2*t2**(-1)
     +    *u2**(-1) + 64*m1**4*s**(-1)*t2**(-1)*s4 - 48*m1**4*s**(-1)
     +     - 16*m1**4*s*t2**(-1)*u2**(-1) + 16*m1**4*t2**(-1) + 64*
     +    m1**4*u2**(-1) + 64*m1**6*s**(-1)*t2**(-1) + 64*m1**6*
     +    t2**(-2) - 32*m1**6*t2**(-1)*u2**(-1) - 16*m2**2*s*t2**(-1)
     +     - 64*m2**2*s*u2**(-1) + 16*m2**2*t2**(-1)*s4 + 64*m2**2*
     +    u2**(-1)*s4 - 56*m2**2 - 32*m2**4*s*t2**(-1)*u2**(-1) + 32*
     +    m2**4*t2**(-1)*u2**(-1)*s4 - 16*m2**4*t2**(-1) - 32*s*t2*
     +    u2**(-1) + 32*t2*u2**(-1)*s4 - 8*t2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(7,8,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * ( 16*(s+u2)**(-1)*(t2+u2)**(-1)*m1**2*
     +    s*s4 - 32*(s+u2)**(-1)*(t2+u2)**(-1)*m1**2*t2*s4 - 16*
     +    (s+u2)**(-1)*(t2+u2)**(-1)*s*t2*s4 + 32*(s+u2)**(-1)*
     +    (t2+u2)**(-1)*t2*s4**2 - 32*(s+u2)**(-1)*(t2+u2)**(-1)*s4**3
     +     + 64*(s+u2)**(-1)*m1**2*t2*u2**(-1)*s4 - 64*(s+u2)**(-1)*
     +    m1**2*u2**(-1)*s4**2 + 32*(s+u2)**(-1)*m1**2*s4 - 16*
     +    (s+u2)**(-1)*t2*s4 + 48*(t2+u2)**(-1)*m1**2*m2**2*s*u2**(-1)
     +     - 64*(t2+u2)**(-1)*m1**2*m2**2*t2*u2**(-1) - 32*
     +    (t2+u2)**(-1)*m1**2*m2**2*u2**(-1)*s4 - 128*(t2+u2)**(-1)*
     +    m1**2*m2**2 - 32*(t2+u2)**(-1)*m1**2*m2**4*u2**(-1) + 48*
     +    (t2+u2)**(-1)*m1**2*s*t2*u2**(-1) + 16*(t2+u2)**(-1)*m1**2*s
     +     - 32*(t2+u2)**(-1)*m1**2*t2*u2**(-1)*s4 - 32*(t2+u2)**(-1)*
     +    m1**2*t2 - 32*(t2+u2)**(-1)*m1**2*t2**2*u2**(-1) - 64*
     +    (t2+u2)**(-1)*m1**2*s4 + 64*(t2+u2)**(-1)*m1**4*m2**2*
     +    u2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(7,8,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 16*(t2+u2)**(-1)*m1**4*s*u2**(-1)
     +     + 64*(t2+u2)**(-1)*m1**4*t2*u2**(-1) + 128*(t2+u2)**(-1)*
     +    m1**4 - 32*(t2+u2)**(-1)*m1**6*u2**(-1) - 64*(t2+u2)**(-1)*
     +    m2**2*s*t2*u2**(-1) - 32*(t2+u2)**(-1)*m2**2*s + 64*
     +    (t2+u2)**(-1)*m2**2*t2*u2**(-1)*s4 + 64*(t2+u2)**(-1)*m2**2*
     +    s4 - 32*(t2+u2)**(-1)*m2**4*s*u2**(-1) + 32*(t2+u2)**(-1)*
     +    m2**4*u2**(-1)*s4 - 16*(t2+u2)**(-1)*s*t2 - 32*(t2+u2)**(-1)*
     +    s*t2**2*u2**(-1) + 32*(t2+u2)**(-1)*t2*s4 + 32*(t2+u2)**(-1)*
     +    t2**2*u2**(-1)*s4 + 32*(t2+u2)**(-1)*s4**2 + 64*m1**2*m2**2*
     +    s**(-1)*t2**(-1)*s4 - 32*m1**2*m2**2*s**(-1) - 48*m1**2*m2**2
     +    *s*t2**(-1)*u2**(-1) + 32*m1**2*m2**2*t2**(-1)*u2**(-1)*s4 + 
     +    64*m1**2*m2**2*u2**(-1) - 64*m1**2*m2**4*t2**(-2) + 32*m1**2*
     +    m2**4*t2**(-1)*u2**(-1) - 64*m1**2*s**(-1)*t2*u2**(-1)*s4 + 
     +    64*m1**2*s**(-1)*u2**(-1)*s4**2 - 32*m1**2*s**(-1)*s4 - 16*
     +    m1**2*s*t2**(-1) )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(7,8,-1,-1)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 48*m1**2*s*u2**(-1) + 16*m1**2*
     +    t2**(-1)*s4 + 32*m1**2*t2*u2**(-1) + 32*m1**2*u2**(-1)*s4 - 
     +    16*m1**2 + 128*m1**4*m2**2*s**(-2) + 128*m1**4*m2**2*t2**(-2)
     +     - 64*m1**4*m2**2*t2**(-1)*u2**(-1) - 64*m1**4*s**(-1)*
     +    t2**(-1)*s4 + 32*m1**4*s**(-1) + 16*m1**4*s*t2**(-1)*u2**(-1)
     +     - 16*m1**4*t2**(-1) - 64*m1**4*u2**(-1) - 128*m1**6*s**(-2)
     +     - 64*m1**6*t2**(-2) + 32*m1**6*t2**(-1)*u2**(-1) + 16*m2**2*
     +    s*t2**(-1) + 64*m2**2*s*u2**(-1) - 16*m2**2*t2**(-1)*s4 - 64*
     +    m2**2*u2**(-1)*s4 + 48*m2**2 + 32*m2**4*s*t2**(-1)*u2**(-1)
     +     - 32*m2**4*t2**(-1)*u2**(-1)*s4 + 16*m2**4*t2**(-1) + 32*s*
     +    t2*u2**(-1) - 32*t2*u2**(-1)*s4 + 16*t2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(8,0,-1,0)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * ( 120 - 128*(t2+u2)**(-1)*m1**2*
     +    m2**2*s**(-1) + 16*(t2+u2)**(-1)*m1**2*s**(-1)*t2 + 32*
     +    (t2+u2)**(-1)*m1**2*s**(-1)*u2 + 32*(t2+u2)**(-1)*m1**2*
     +    s**(-1)*s4 - 48*(t2+u2)**(-1)*m1**2*t2**(-1)*u2 - 144*
     +    (t2+u2)**(-1)*m1**2*t2*u2**(-1) - 160*(t2+u2)**(-1)*m1**2 + 
     +    88*(t2+u2)**(-1)*m1**4*s**(-1) + 16*(t2+u2)**(-1)*m2**2*
     +    s**(-1)*t2 + 144*(t2+u2)**(-1)*m2**2*s**(-1)*s4 + 96*
     +    (t2+u2)**(-1)*m2**2*t2*u2**(-1) - 48*(t2+u2)**(-1)*m2**2 + 40
     +    *(t2+u2)**(-1)*m2**4*s**(-1) + 32*(t2+u2)**(-1)*s**(-1)*t2*u2
     +     - 128*(t2+u2)**(-1)*s**(-1)*t2*s4 + 72*(t2+u2)**(-1)*s**(-1)
     +    *t2**2 - 48*(t2+u2)**(-1)*s**(-1)*u2*s4 + 24*(t2+u2)**(-1)*
     +    s**(-1)*u2**2 + 72*(t2+u2)**(-1)*s**(-1)*s4**2 - 160*
     +    (t2+u2)**(-1)*s*t2**(-1)*u2 - 24*(t2+u2)**(-1)*s + 160*
     +    (t2+u2)**(-1)*t2**(-1)*u2*s4 - 64*(t2+u2)**(-1)*t2**(-1)*
     +    u2**2 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(8,0,-1,0)*(h_r2+h_l2)*Nc**2
     + *Cf*Pi**2*alphas**2*hardfac * ( 64*(t2+u2)**(-1)*t2*u2**(-1)*s4
     +     + 128*(t2+u2)**(-1)*t2 + 32*(t2+u2)**(-1)*t2**2*u2**(-1) - 
     +    48*(t2+u2)**(-1)*u2 + 16*(t2+u2)**(-1)*s4 - 120*m1**2*s**(-1)
     +     + 48*m1**2*t2**(-1) + 144*m1**2*u2**(-1) - 88*m2**2*s**(-1)
     +     - 96*m2**2*u2**(-1) + 40*s**(-1)*t2 + 8*s**(-1)*u2 - 24*
     +    s**(-1)*s4 + 160*s*t2**(-1) + 64*t2**(-1)*u2 - 160*t2**(-1)*
     +    s4 - 32*t2*u2**(-1) - 64*u2**(-1)*s4 )
      MM_crossed_4 = MM_crossed_4 + ANG_fin(8,0,-1,0)*(h_r2+h_l2)*Cf*
     + Pi**2*alphas**2*hardfac * (  - 96 + 48*(t2+u2)**(-1)*m1**2*
     +    t2**(-1)*u2 + 144*(t2+u2)**(-1)*m1**2*t2*u2**(-1) + 160*
     +    (t2+u2)**(-1)*m1**2 - 96*(t2+u2)**(-1)*m2**2*t2*u2**(-1) - 64
     +    *(t2+u2)**(-1)*m2**2 + 160*(t2+u2)**(-1)*s*t2**(-1)*u2 + 128*
     +    (t2+u2)**(-1)*s - 160*(t2+u2)**(-1)*t2**(-1)*u2*s4 + 64*
     +    (t2+u2)**(-1)*t2**(-1)*u2**2 - 64*(t2+u2)**(-1)*t2*u2**(-1)*
     +    s4 + 32*(t2+u2)**(-1)*t2 - 32*(t2+u2)**(-1)*t2**2*u2**(-1) + 
     +    128*(t2+u2)**(-1)*u2 - 192*(t2+u2)**(-1)*s4 - 48*m1**2*
     +    t2**(-1) - 144*m1**2*u2**(-1) + 96*m2**2*u2**(-1) - 160*s*
     +    t2**(-1) - 64*t2**(-1)*u2 + 160*t2**(-1)*s4 + 32*t2*u2**(-1)
     +     + 64*u2**(-1)*s4 )


c               the phase space except for 1/s**2 
      HT_GGH = MM_crossed_4 /( 16.D0 * pi**2 )**2 / 2.D0 * s4/(s4+m1**2)

c               the averaging factors
      HT_GGH = HT_GGH /4.D0 /(Nc**2-1.D0)**2

c               the luminosity
      HT_GGH = HT_GGH *lumi(1)

      return
      end



